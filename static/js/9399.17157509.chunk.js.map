{"version":3,"file":"static/js/9399.17157509.chunk.js","mappings":"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","sources":["../node_modules/shiki/dist/langs/fsharp.mjs"],"sourcesContent":["import markdown from './markdown.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"F#\", \"name\": \"fsharp\", \"patterns\": [{ \"include\": \"#compiler_directives\" }, { \"include\": \"#comments\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#chars\" }, { \"include\": \"#double_tick\" }, { \"include\": \"#definition\" }, { \"include\": \"#abstract_definition\" }, { \"include\": \"#attributes\" }, { \"include\": \"#modules\" }, { \"include\": \"#anonymous_functions\" }, { \"include\": \"#du_declaration\" }, { \"include\": \"#record_declaration\" }, { \"include\": \"#records\" }, { \"include\": \"#strp_inlined\" }, { \"include\": \"#keywords\" }, { \"include\": \"#cexprs\" }, { \"include\": \"#text\" }], \"repository\": { \"abstract_definition\": { \"begin\": \"\\\\b(abstract)\\\\s+(member)?(\\\\s+\\\\[\\\\<.*\\\\>\\\\])?\\\\s*([_[:alpha:]0-9,\\\\._`\\\\s]+)(<)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"support.function.attribute.fsharp\" }, \"5\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"\\\\s*(with)\\\\b|=|$\", \"endCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"name\": \"abstract.definition.fsharp\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#common_declaration\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\?{0,1})([[:alpha:]0-9'`^._ ]+)\\\\s*(:)((?!with\\\\b)\\\\b([\\\\w0-9'`^._ ]+)){0,1}\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comments\": \"Here we need the \\\\w modifier in order to check that the words isn't blacklisted\", \"match\": \"(?!with|get|set\\\\b)\\\\s*([\\\\w0-9'`^._]+)\" }, { \"include\": \"#keywords\" }] }, \"anonymous_functions\": { \"patterns\": [{ \"begin\": \"\\\\b(fun)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"(->)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" } }, \"name\": \"function.anonymous\", \"patterns\": [{ \"include\": \"#comments\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"\\\\s*(?=(->))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"include\": \"#variables\" }] }] }, \"anonymous_record_declaration\": { \"begin\": \"(\\\\{\\\\|)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\|\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"match\": \"[[:alpha:]0-9'`^_ ]+(:)\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^_ ]+)\" }, { \"include\": \"#anonymous_record_declaration\" }, { \"include\": \"#keywords\" }] }, \"attributes\": { \"patterns\": [{ \"begin\": \"\\\\[\\\\<\", \"end\": \"\\\\>\\\\]|\\\\]\", \"name\": \"support.function.attribute.fsharp\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"cexprs\": { \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"keyword.fsharp\" } }, \"match\": \"\\\\b(async|seq|promise|task|maybe|asyncMaybe|controller|scope|application|pipeline)(?=\\\\s*\\\\{)\", \"name\": \"cexpr.fsharp\" }] }, \"chars\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.quoted.single.fsharp\" } }, \"match\": \"('\\\\\\\\?.')\", \"name\": \"char.fsharp\" }] }, \"comments\": { \"patterns\": [{ \"beginCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"match\": \"(\\\\(\\\\*{3}.*\\\\*{3}\\\\))\", \"name\": \"comment.literate.command.fsharp\" }, { \"begin\": \"^\\\\s*(\\\\(\\\\*\\\\*(?!\\\\)))((?!\\\\*\\\\)).)*$\", \"beginCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"endCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"name\": \"comment.block.markdown.fsharp\", \"patterns\": [{ \"include\": \"text.html.markdown\" }], \"while\": \"^(?!\\\\s*(\\\\*)+\\\\)\\\\s*$)\" }, { \"begin\": \"(\\\\(\\\\*(?!\\\\)))\", \"beginCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"end\": \"(\\\\*+\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"name\": \"comment.block.fsharp\", \"patterns\": [{ \"comments\": \"Capture // when inside of (* *) like that the rule which capture comments starting by // is not trigger. See https://github.com/ionide/ionide-fsgrammar/issues/155\", \"match\": \"//\", \"name\": \"fast-capture.comment.line.double-slash.fsharp\" }, { \"comments\": \"Capture (*) when inside of (* *) so that it doesn't prematurely end the comment block.\", \"match\": \"\\\\(\\\\*\\\\)\", \"name\": \"fast-capture.comment.line.mul-operator.fsharp\" }, { \"include\": \"#comments\" }] }, { \"captures\": { \"1\": { \"name\": \"comment.block.fsharp\" } }, \"match\": \"((?<!\\\\()(\\\\*)+\\\\))\", \"name\": \"comment.block.markdown.fsharp.end\" }, { \"begin\": \"(?<![!%&+-.<=>?@^|/])///(?!/)\", \"name\": \"comment.line.markdown.fsharp\", \"patterns\": [{ \"include\": \"text.html.markdown\" }], \"while\": \"(?<![!%&+-.<=>?@^|/])///(?!/)\" }, { \"match\": \"(?<![!%&+-.<=>?@^|/])//(.*$)\", \"name\": \"comment.line.double-slash.fsharp\" }] }, \"common_binding_definition\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"begin\": \"(:)\\\\s*(\\\\()\\\\s*(static member|member)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"comments\": \"SRTP syntax support\", \"end\": \"(\\\\))\\\\s*((?=,)|(?=\\\\=))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, { \"begin\": \"(:)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\)\\\\s*(([?[:alpha:]0-9'`^._ ]*)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"patterns\": [{ \"include\": \"#tuple_signature\" }] }, { \"begin\": \"(:)\\\\s*(\\\\^[[:alpha:]0-9'._]+)\\\\s*(when)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"(?=:)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"match\": \"\\\\b(and|when|or)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comment\": \"Because we first capture the keywords, we can capture what looks like a word and assume it's an entity definition\", \"match\": \"([[:alpha:]0-9'^._]+)\" }, { \"match\": \"(\\\\(|\\\\))\", \"name\": \"keyword.symbol.fsharp\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(:)\\\\s*([?[:alpha:]0-9'`^._ ]+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(->)\\\\s*(\\\\()?\\\\s*([?[:alpha:]0-9'`^._ ]+)*\" }, { \"begin\": \"(\\\\*)\\\\s*(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\)\\\\s*(([?[:alpha:]0-9'`^._ ]+))+)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"patterns\": [{ \"include\": \"#tuple_signature\" }] }, { \"begin\": \"(\\\\*)(\\\\s*([?[:alpha:]0-9'`^._ ]+))*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"end\": \"(?==)|(?=\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#tuple_signature\" }] }, { \"begin\": \"(<+(?![[:space:]]*\\\\)))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"beginComment\": \"The group (?![[:space:]]*\\\\) is for protection against overload operator. static member (<)\", \"end\": \"((?<!:)>|\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"endComment\": \"The group (?<!:) prevent us from stopping on :> when using SRTP synthax\", \"patterns\": [{ \"include\": \"#generic_declaration\" }] }, { \"include\": \"#anonymous_record_declaration\" }, { \"begin\": \"({)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#record_signature\" }] }, { \"include\": \"#definition\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, \"common_declaration\": { \"patterns\": [{ \"begin\": \"\\\\s*(->)\\\\s*([[:alpha:]0-9'`^._ ]+)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^._ ]+)\" }, { \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.arrow.fsharp\" }, \"2\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"\\\\s*(->)\\\\s*(?!with|get|set\\\\b)\\\\b([\\\\w0-9'`^._]+)\" }, { \"include\": \"#anonymous_record_declaration\" }, { \"begin\": \"(\\\\?{0,1})([[:alpha:]0-9'`^._ ]+)\\\\s*(:)(\\\\s*([?[:alpha:]0-9'`^._ ]+)(<))\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"keyword.symbol.fsharp\" }, \"5\": { \"name\": \"entity.name.type.fsharp\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^._ ]+)\" }, { \"include\": \"#keywords\" }] }] }, \"compiler_directives\": { \"patterns\": [{ \"captures\": {}, \"match\": \"\\\\s?(#if|#elif|#elseif|#else|#endif|#light|#nowarn)\", \"name\": \"keyword.control.directive.fsharp\" }] }, \"constants\": { \"patterns\": [{ \"match\": \"\\\\(\\\\)\", \"name\": \"keyword.symbol.fsharp\" }, { \"match\": \"\\\\b-?[0-9][0-9_]*((\\\\.([0-9][0-9_]*([eE][+-]??[0-9][0-9_]*)?)?)|([eE][+-]??[0-9][0-9_]*))\", \"name\": \"constant.numeric.float.fsharp\" }, { \"match\": \"\\\\b(-?((0(x|X)[0-9a-fA-F][0-9a-fA-F_]*)|(0(o|O)[0-7][0-7_]*)|(0(b|B)[01][01_]*)|([0-9][0-9_]*)))\", \"name\": \"constant.numeric.integer.nativeint.fsharp\" }, { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.fsharp\" }, { \"match\": \"\\\\b(null|void)\\\\b\", \"name\": \"constant.other.fsharp\" }] }, \"definition\": { \"patterns\": [{ \"begin\": \"\\\\b(let mutable|static let mutable|static let|let inline|let|and|member val|static member inline|static member|default|member|override|let!)(\\\\s+rec|mutable)?(\\\\s+\\\\[\\\\<.*\\\\>\\\\])?\\\\s*(private|internal|public)?\\\\s+(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"support.function.attribute.fsharp\" }, \"4\": { \"name\": \"storage.modifier.fsharp\" }, \"5\": { \"name\": \"variable.fsharp\" } }, \"end\": \"\\\\s*((with\\\\b)|(=|\\\\n+=|(?<=\\\\=)))\", \"endCaptures\": { \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"\\\\b(use|use!|and|and!)\\\\s+(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"\\\\s*(=)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"(?<=with|and)\\\\s*\\\\b((get|set)\\\\s*(?=\\\\())(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"4\": { \"name\": \"variable.fsharp\" } }, \"end\": \"\\\\s*(=|\\\\n+=|(?<=\\\\=))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"\\\\b(static val mutable|val mutable|val)(\\\\s+rec|mutable)?(\\\\s+\\\\[\\\\<.*\\\\>\\\\])?\\\\s*(private|internal|public)?\\\\s+(\\\\[[^-=]*\\\\]|[_[:alpha:]]([_[:alpha:]0-9,\\\\._]+)*|``[_[:alpha:]]([_[:alpha:]0-9,\\\\._`\\\\s]+|(?<=,)\\\\s)*)?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"support.function.attribute.fsharp\" }, \"4\": { \"name\": \"storage.modifier.fsharp\" }, \"5\": { \"name\": \"variable.fsharp\" } }, \"end\": \"\\\\n$\", \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }, { \"begin\": \"\\\\b(new)\\\\b\\\\s+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"binding.fsharp\", \"patterns\": [{ \"include\": \"#common_binding_definition\" }] }] }, \"double_tick\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"string.quoted.single.fsharp\" }, \"2\": { \"name\": \"variable.other.binding.fsharp\" }, \"3\": { \"name\": \"string.quoted.single.fsharp\" } }, \"match\": \"(``)([^`]*)(``)\", \"name\": \"variable.other.binding.fsharp\" }] }, \"du_declaration\": { \"patterns\": [{ \"begin\": \"\\\\b(of)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"end\": \"$|(\\\\|)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"du_declaration.fsharp\", \"patterns\": [{ \"include\": \"#comments\" }, { \"captures\": { \"1\": { \"name\": \"variable.parameter.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`<>^._]+|``[[:alpha:]0-9' <>^._]+``)\\\\s*(:)\\\\s*([[:alpha:]0-9'`<>^._]+|``[[:alpha:]0-9' <>^._]+``)\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(``([[:alpha:]0-9'^._ ]+)``|[[:alpha:]0-9'`^._]+)\" }, { \"include\": \"#anonymous_record_declaration\" }, { \"include\": \"#keywords\" }] }] }, \"generic_declaration\": { \"patterns\": [{ \"begin\": \"(:)\\\\s*(\\\\()\\\\s*(static member|member)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"comments\": \"SRTP syntax support\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)[[:alpha:]0-9'._]+)\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, { \"match\": \"\\\\b(private|to|public|internal|function|yield!|yield|class|exception|match|delegate|of|new|in|as|if|then|else|elif|for|begin|end|inherit|do|let\\\\!|return\\\\!|return|interface|with|abstract|enum|member|try|finally|and|when|or|use|use\\\\!|struct|while|mutable|assert|base|done|downcast|downto|extern|fixed|global|lazy|upcast|not)(?!')\\\\b\", \"name\": \"keyword.fsharp\" }, { \"match\": \":\", \"name\": \"keyword.symbol.fsharp\" }, { \"include\": \"#constants\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)[[:alpha:]0-9'._]+)\" }, { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)[[:alpha:]0-9'._]+)\" }, { \"include\": \"#tuple_signature\" }, { \"include\": \"#generic_declaration\" }] }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(([?[:alpha:]0-9'`^._ ]+))+\" }, { \"include\": \"#tuple_signature\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comments\": \"Here we need the \\\\w modifier in order to check that the words are allowed\", \"match\": \"(?!when|and|or\\\\b)\\\\b([\\\\w0-9'`^._]+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"comments\": \"Prevent captures of `|>` as a keyword when defining custom operator like `<|>`\", \"match\": \"(\\\\|)\" }, { \"include\": \"#keywords\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(private|public|internal)\\\\b\", \"name\": \"storage.modifier\" }, { \"match\": \"\\\\b(private|to|public|internal|function|class|exception|delegate|of|new|as|begin|end|inherit|let!|interface|abstract|enum|member|and|when|or|use|use\\\\!|struct|mutable|assert|base|done|downcast|downto|extern|fixed|global|lazy|upcast|not)(?!')\\\\b\", \"name\": \"keyword.fsharp\" }, { \"match\": \"\\\\b(match|yield|yield!|with|if|then|else|elif|for|in|return!|return|try|finally|while|do)(?!')\\\\b\", \"name\": \"keyword.control\" }, { \"match\": \"(\\\\->|\\\\<\\\\-)\", \"name\": \"keyword.symbol.arrow.fsharp\" }, { \"match\": \"(&&&|\\\\|\\\\|\\\\||\\\\^\\\\^\\\\^|~~~|~\\\\+|~\\\\-|<<<|>>>|\\\\|>|:>|:\\\\?>|:|\\\\[|\\\\]|\\\\;|<>|=|@|\\\\|\\\\||&&|&|%|{|}|\\\\||_|\\\\.\\\\.|\\\\,|\\\\+|\\\\-|\\\\*|\\\\/|\\\\^|\\\\!|\\\\>|\\\\>\\\\=|\\\\>\\\\>|\\\\<|\\\\<\\\\=|\\\\(|\\\\)|\\\\<\\\\<)\", \"name\": \"keyword.symbol.fsharp\" }] }, \"member_declaration\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#common_declaration\" }, { \"begin\": \"(:)\\\\s*(\\\\()\\\\s*(static member|member)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"keyword.symbol.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" } }, \"comments\": \"SRTP syntax support\", \"end\": \"(\\\\))\\\\s*((?=,)|(?=\\\\=))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"include\": \"#variables\" }, { \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"match\": \"\\\\b(and|when|or)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"match\": \"(\\\\(|\\\\))\", \"name\": \"keyword.symbol.fsharp\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\?{0,1})([[:alpha:]0-9'`^._]+|``[[:alpha:]0-9'`^:,._ ]+``)\\\\s*(:{0,1})(\\\\s*([?[:alpha:]0-9'`<>._ ]+)){0,1}\" }, { \"include\": \"#keywords\" }] }, \"modules\": { \"patterns\": [{ \"begin\": \"\\\\b(namespace global)|\\\\b(namespace|module)\\\\s*(public|internal|private|rec)?\\\\s+([[:alpha:]|``][[:alpha:]0-9'_. ]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"storage.modifier.fsharp\" }, \"4\": { \"name\": \"entity.name.section.fsharp\" } }, \"end\": \"(\\\\s?=|\\\\s|$)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"entity.name.section.fsharp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace-reference.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"match\": \"(\\\\.)([A-Z][[:alpha:]0-9'_]*)\", \"name\": \"entity.name.section.fsharp\" }] }, { \"begin\": \"\\\\b(open type|open)\\\\s+([[:alpha:]|``][[:alpha:]0-9'_]*)(?=(\\\\.[A-Z][[:alpha:]0-9_]*)*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"end\": \"(\\\\s|$)\", \"name\": \"namespace.open.fsharp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace-reference.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"match\": \"(\\\\.)([[:alpha:]][[:alpha:]0-9'_]*)\", \"name\": \"entity.name.section.fsharp\" }, { \"include\": \"#comments\" }] }, { \"begin\": \"^\\\\s*(module)\\\\s+([A-Z][[:alpha:]0-9'_]*)\\\\s*(=)\\\\s*([A-Z][[:alpha:]0-9'_]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"entity.name.type.namespace.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" }, \"4\": { \"name\": \"entity.name.section.fsharp\" } }, \"end\": \"(\\\\s|$)\", \"name\": \"namespace.alias.fsharp\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.namespace-reference.fsharp\" }, \"2\": { \"name\": \"entity.name.section.fsharp\" } }, \"match\": \"(\\\\.)([A-Z][[:alpha:]0-9'_]*)\", \"name\": \"entity.name.section.fsharp\" }] }] }, \"record_declaration\": { \"patterns\": [{ \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#comments\" }, { \"begin\": \"(((mutable)\\\\s[[:alpha:]]+)|[[:alpha:]0-9'`<>^._]*)\\\\s*((?<!:):(?!:))\\\\s*\", \"beginCaptures\": { \"3\": { \"name\": \"keyword.fsharp\" }, \"4\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"$|(;|\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#comments\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'`^_ ]+)\" }, { \"include\": \"#keywords\" }] }, { \"include\": \"#compiler_directives\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#chars\" }, { \"include\": \"#double_tick\" }, { \"include\": \"#definition\" }, { \"include\": \"#attributes\" }, { \"include\": \"#anonymous_functions\" }, { \"include\": \"#keywords\" }, { \"include\": \"#cexprs\" }, { \"include\": \"#text\" }] }] }, \"record_signature\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" } }, \"match\": \"[[:alpha:]0-9'`^_ ]+(=)([[:alpha:]0-9'`^_ ]+)\" }, { \"begin\": \"({)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(})\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" } }, \"match\": \"[[:alpha:]0-9'`^_ ]+(=)([[:alpha:]0-9'`^_ ]+)\" }, { \"include\": \"#record_signature\" }] }, { \"include\": \"#keywords\" }] }, \"records\": { \"patterns\": [{ \"begin\": \"\\\\b(type)[\\\\s]+(private|internal|public)?\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"storage.modifier.fsharp\" } }, \"end\": \"\\\\s*((with)|((as)\\\\s+([[:alpha:]0-9']+))|(=)|[\\\\n=]|(\\\\(\\\\)))\", \"endCaptures\": { \"2\": { \"name\": \"keyword.fsharp\" }, \"3\": { \"name\": \"keyword.fsharp\" }, \"4\": { \"name\": \"keyword.fsharp\" }, \"5\": { \"name\": \"variable.parameter.fsharp\" }, \"6\": { \"name\": \"keyword.symbol.fsharp\" }, \"7\": { \"name\": \"keyword.symbol.fsharp\" } }, \"name\": \"record.fsharp\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#attributes\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"([[:alpha:]0-9'^._]+|``[[:alpha:]0-9'`^:,._ ]+``)\" }, { \"begin\": \"(<)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"((?<!:)>)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(('|\\\\^)``[[:alpha:]0-9`^:,._ ]+``|('|\\\\^)[[:alpha:]0-9`^:._]+)\" }, { \"match\": \"\\\\b(interface|with|abstract|and|when|or|not|struct|equality|comparison|unmanaged|delegate|enum)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.fsharp\" } }, \"match\": \"(static member|member|new)\" }, { \"include\": \"#common_binding_definition\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"comments\": \"Here we need the \\\\w modifier in order to check that the words isn't blacklisted\", \"match\": \"([\\\\w0-9'`^._]+)\" }, { \"include\": \"#keywords\" }] }, { \"captures\": { \"1\": { \"name\": \"storage.modifier.fsharp\" } }, \"match\": \"\\\\s*(private|internal|public)\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"\\\\s*(?=(=)|[\\\\n=]|(\\\\(\\\\))|(as))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#member_declaration\" }] }, { \"include\": \"#keywords\" }] }] }, \"string_formatter\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.format.specifier.fsharp\" } }, \"match\": \"(%0?-?(\\\\d+)?((a|t)|(\\\\.\\\\d+)?(f|F|e|E|g|G|M)|(b|c|s|d|i|x|X|o|u)|(s|b|O)|(\\\\+?A)))\", \"name\": \"entity.name.type.format.specifier.fsharp\" }] }, \"strings\": { \"patterns\": [{ \"begin\": '(?=[^\\\\\\\\])(@\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.fsharp\" } }, \"end\": '(\")(?!\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.fsharp\" } }, \"name\": \"string.quoted.literal.fsharp\", \"patterns\": [{ \"match\": '\"(\")', \"name\": \"constant.character.string.escape.fsharp\" }] }, { \"begin\": '(?=[^\\\\\\\\])(\"\"\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.fsharp\" } }, \"end\": '(\"\"\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.fsharp\" } }, \"name\": \"string.quoted.triple.fsharp\", \"patterns\": [{ \"include\": \"#string_formatter\" }] }, { \"begin\": '(?=[^\\\\\\\\])(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.fsharp\" } }, \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.fsharp\" } }, \"name\": \"string.quoted.double.fsharp\", \"patterns\": [{ \"match\": \"\\\\\\\\$[ \\\\t]*\", \"name\": \"punctuation.separator.string.ignore-eol.fsharp\" }, { \"match\": `\\\\\\\\(['\"\\\\\\\\abfnrtv]|([01][0-9][0-9]|2[0-4][0-9]|25[0-5])|(x[0-9a-fA-F]{2})|(u[0-9a-fA-F]{4})|(U00(0[0-9a-fA-F]|10)[0-9a-fA-F]{4}))`, \"name\": \"constant.character.string.escape.fsharp\" }, { \"match\": \"\\\\\\\\(([0-9]{1,3})|(x[^\\\\s]{0,2})|(u[^\\\\s]{0,4})|(U[^\\\\s]{0,8})|[^\\\\s])\", \"name\": \"invalid.illegal.character.string.fsharp\" }, { \"include\": \"#string_formatter\" }] }] }, \"strp_inlined\": { \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#strp_inlined_body\" }] }] }, \"strp_inlined_body\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#anonymous_functions\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(\\\\^[[:alpha:]0-9'._]+)\" }, { \"match\": \"\\\\b(and|when|or)\\\\b\", \"name\": \"keyword.fsharp\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"include\": \"#strp_inlined_body\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.fsharp\" }, \"2\": { \"name\": \"variable.fsharp\" }, \"3\": { \"name\": \"keyword.symbol.fsharp\" } }, \"match\": \"(static member|member)\\\\s*([[:alpha:]0-9'`<>^._]+|``[[:alpha:]0-9' <>^._]+``)\\\\s*(:)\" }, { \"include\": \"#compiler_directives\" }, { \"include\": \"#constants\" }, { \"include\": \"#strings\" }, { \"include\": \"#chars\" }, { \"include\": \"#double_tick\" }, { \"include\": \"#keywords\" }, { \"include\": \"#text\" }, { \"include\": \"#definition\" }, { \"include\": \"#attributes\" }, { \"include\": \"#keywords\" }, { \"include\": \"#cexprs\" }, { \"include\": \"#text\" }] }, \"text\": { \"patterns\": [{ \"match\": \"\\\\\\\\\", \"name\": \"text.fsharp\" }] }, \"tuple_signature\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(([?[:alpha:]0-9'`^._ ]+))+\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.type.fsharp\" } }, \"match\": \"(([?[:alpha:]0-9'`^._ ]+))+\" }, { \"include\": \"#tuple_signature\" }] }, { \"include\": \"#keywords\" }] }, \"variables\": { \"patterns\": [{ \"match\": \"\\\\(\\\\)\", \"name\": \"keyword.symbol.fsharp\" }, { \"captures\": { \"1\": { \"name\": \"keyword.symbol.fsharp\" }, \"2\": { \"name\": \"variable.parameter.fsharp\" } }, \"match\": \"(\\\\?{0,1})(``[[:alpha:]0-9'`^:,._ ]+``|(?!private|struct\\\\b)\\\\b[\\\\w[:alpha:]0-9'`<>^._ ]+)\" }] } }, \"scopeName\": \"source.fsharp\", \"embeddedLangs\": [\"markdown\"], \"aliases\": [\"f#\", \"fs\"] });\nvar fsharp = [\n  ...markdown,\n  lang\n];\n\nexport { fsharp as default };\n"],"names":["lang","Object","freeze","fsharp","markdown"],"sourceRoot":""}