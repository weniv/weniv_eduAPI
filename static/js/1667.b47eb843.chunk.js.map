{"version":3,"file":"static/js/1667.b47eb843.chunk.js","mappings":"0IACA,IAAIA,EAAQ,CADCC,OAAOC,OAAO,CAAE,YAAe,QAAS,KAAQ,QAAS,SAAY,CAAC,CAAE,QAAW,aAAe,CAAE,QAAW,aAAe,CAAE,QAAW,YAAc,CAAE,QAAW,aAAe,CAAE,QAAW,YAAc,WAAc,CAAE,cAAiB,CAAE,MAAS,iBAAkB,KAAQ,gCAAiC,SAAY,IAAM,QAAW,CAAE,MAAS,qBAAsB,KAAQ,kCAAmC,SAAY,IAAM,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,OAAQ,KAAQ,wBAA2B,SAAY,CAAE,SAAY,CAAC,CAAE,QAAW,kBAAoB,CAAE,QAAW,iBAAmB,CAAE,QAAW,uBAAyB,CAAE,QAAW,mBAAqB,CAAE,QAAW,YAAc,CAAE,MAAS,yBAA0B,KAAQ,4BAA+B,eAAkB,CAAE,MAAS,yEAA0E,KAAQ,iCAAkC,SAAY,IAAM,OAAU,CAAE,SAAY,CAAC,CAAE,MAAS,gDAAiD,SAAY,CAAE,EAAK,CAAE,KAAQ,+BAAkC,IAAO,MAAO,SAAY,CAAC,CAAE,QAAW,WAAc,CAAE,MAAS,kCAAmC,KAAQ,4BAA8B,CAAE,MAAS,+BAAgC,KAAQ,iCAAoC,mBAAsB,CAAE,MAAS,wBAAyB,KAAQ,qCAAsC,SAAY,IAAM,SAAY,CAAE,SAAY,CAAC,CAAE,MAAS,+EAAgF,KAAQ,yBAA2B,CAAE,MAAS,cAAe,KAAQ,gCAAkC,CAAE,MAAS,OAAQ,KAAQ,+BAAiC,CAAE,MAAS,SAAU,KAAQ,gCAAkC,CAAE,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,MAAS,oBAAqB,KAAQ,yCAA2C,CAAE,MAAS,cAAe,KAAQ,kCAAoC,CAAE,MAAS,KAAM,KAAQ,iCAAmC,CAAE,MAAS,MAAO,KAAQ,gCAAkC,CAAE,MAAS,mCAAoC,KAAQ,2CAA6C,CAAE,MAAS,oBAAqB,KAAQ,yCAA2C,CAAE,MAAS,IAAK,KAAQ,uCAA0C,aAAgB,CAAE,MAAS,iBAAkB,KAAQ,+BAAgC,SAAY,IAAM,QAAW,CAAE,MAAS,IAAK,IAAO,IAAK,KAAQ,6BAA8B,SAAY,CAAC,CAAE,MAAS,QAAS,KAAQ,sCAA0C,UAAa,iB","sources":["../node_modules/shiki/dist/langs/gleam.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Gleam\", \"name\": \"gleam\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#strings\" }, { \"include\": \"#constant\" }, { \"include\": \"#entity\" }], \"repository\": { \"binary_number\": { \"match\": \"\\\\b0b[0-1]+\\\\b\", \"name\": \"constant.numeric.binary.gleam\", \"patterns\": [] }, \"boolean\": { \"match\": \"\\\\b(True|False)\\\\b\", \"name\": \"constant.language.boolean.gleam\", \"patterns\": [] }, \"comments\": { \"patterns\": [{ \"match\": \"//.*\", \"name\": \"comment.line.gleam\" }] }, \"constant\": { \"patterns\": [{ \"include\": \"#binary_number\" }, { \"include\": \"#octal_number\" }, { \"include\": \"#hexadecimal_number\" }, { \"include\": \"#decimal_number\" }, { \"include\": \"#boolean\" }, { \"match\": \"[[:upper:]][[:word:]]*\", \"name\": \"entity.name.type.gleam\" }] }, \"decimal_number\": { \"match\": \"\\\\b[[:digit:]]+(_?[[:digit:]])*(\\\\.[[:digit:]]*)?(e-?[[:digit:]]*)?\\\\b\", \"name\": \"constant.numeric.decimal.gleam\", \"patterns\": [] }, \"entity\": { \"patterns\": [{ \"begin\": \"\\\\b([[:lower:]][[:word:]]*)([[:space:]]*)?\\\\(\", \"captures\": { \"1\": { \"name\": \"entity.name.function.gleam\" } }, \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b([[:lower:]][[:word:]]*):\\\\s\", \"name\": \"variable.parameter.gleam\" }, { \"match\": \"\\\\b([[:lower:]][[:word:]]*):\", \"name\": \"entity.name.namespace.gleam\" }] }, \"hexadecimal_number\": { \"match\": \"\\\\b0x[[:xdigit:]]+\\\\b\", \"name\": \"constant.numeric.hexadecimal.gleam\", \"patterns\": [] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(as|use|case|if|fn|import|let|assert|pub|type|opaque|const|todo|panic)\\\\b\", \"name\": \"keyword.control.gleam\" }, { \"match\": \"(<\\\\-|\\\\->)\", \"name\": \"keyword.operator.arrow.gleam\" }, { \"match\": \"\\\\|>\", \"name\": \"keyword.operator.pipe.gleam\" }, { \"match\": \"\\\\.\\\\.\", \"name\": \"keyword.operator.splat.gleam\" }, { \"match\": \"(<=\\\\.|>=\\\\.|==\\\\.|!=\\\\.|<\\\\.|>\\\\.)\", \"name\": \"keyword.operator.comparison.float.gleam\" }, { \"match\": \"(<=|>=|==|!=|<|>)\", \"name\": \"keyword.operator.comparison.int.gleam\" }, { \"match\": \"(&&|\\\\|\\\\|)\", \"name\": \"keyword.operator.logical.gleam\" }, { \"match\": \"<>\", \"name\": \"keyword.operator.string.gleam\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.other.gleam\" }, { \"match\": \"(\\\\+\\\\.|\\\\-\\\\.|/\\\\.|\\\\*\\\\.|%\\\\.)\", \"name\": \"keyword.operator.arithmetic.float.gleam\" }, { \"match\": \"(\\\\+|\\\\-|/|\\\\*|%)\", \"name\": \"keyword.operator.arithmetic.int.gleam\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.gleam\" }] }, \"octal_number\": { \"match\": \"\\\\b0o[0-7]+\\\\b\", \"name\": \"constant.numeric.octal.gleam\", \"patterns\": [] }, \"strings\": { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.gleam\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.gleam\" }] } }, \"scopeName\": \"source.gleam\" });\nvar gleam = [\n  lang\n];\n\nexport { gleam as default };\n"],"names":["gleam","Object","freeze"],"sourceRoot":""}