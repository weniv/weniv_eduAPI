{"version":3,"file":"static/js/3284.f2ff33db.chunk.js","mappings":"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","sources":["../node_modules/shiki/dist/langs/asciidoc.mjs","../node_modules/shiki/dist/langs/clojure.mjs","../node_modules/shiki/dist/langs/csv.mjs","../node_modules/shiki/dist/langs/diff.mjs","../node_modules/shiki/dist/langs/docker.mjs","../node_modules/shiki/dist/langs/elixir.mjs","../node_modules/shiki/dist/langs/elm.mjs","../node_modules/shiki/dist/langs/json.mjs","../node_modules/shiki/dist/langs/kotlin.mjs","../node_modules/shiki/dist/langs/make.mjs","../node_modules/shiki/dist/langs/sass.mjs","../node_modules/shiki/dist/langs/toml.mjs","../node_modules/shiki/dist/langs/yaml.mjs"],"sourcesContent":["import html from './html.mjs';\nimport yaml from './yaml.mjs';\nimport csv from './csv.mjs';\nimport c from './c.mjs';\nimport clojure from './clojure.mjs';\nimport coffee from './coffee.mjs';\nimport cpp from './cpp.mjs';\nimport css from './css.mjs';\nimport csharp from './csharp.mjs';\nimport diff from './diff.mjs';\nimport docker from './docker.mjs';\nimport elixir from './elixir.mjs';\nimport elm from './elm.mjs';\nimport erlang from './erlang.mjs';\nimport go from './go.mjs';\nimport groovy from './groovy.mjs';\nimport haskell from './haskell.mjs';\nimport java from './java.mjs';\nimport javascript from './javascript.mjs';\nimport json from './json.mjs';\nimport jsx from './jsx.mjs';\nimport julia from './julia.mjs';\nimport kotlin from './kotlin.mjs';\nimport less from './less.mjs';\nimport make from './make.mjs';\nimport objective_c from './objective-c.mjs';\nimport ocaml from './ocaml.mjs';\nimport perl from './perl.mjs';\nimport python from './python.mjs';\nimport r from './r.mjs';\nimport ruby from './ruby.mjs';\nimport rust from './rust.mjs';\nimport sass from './sass.mjs';\nimport scala from './scala.mjs';\nimport scss from './scss.mjs';\nimport shellscript from './shellscript.mjs';\nimport sql from './sql.mjs';\nimport swift from './swift.mjs';\nimport toml from './toml.mjs';\nimport typescript from './typescript.mjs';\nimport xml from './xml.mjs';\nimport './cpp-macro.mjs';\nimport './glsl.mjs';\nimport './lua.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"AsciiDoc\", \"fileTypes\": [\"ad\", \"asc\", \"adoc\", \"asciidoc\", \"adoc.txt\"], \"name\": \"asciidoc\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#callout-list-item\" }, { \"include\": \"#titles\" }, { \"include\": \"#attribute-entry\" }, { \"include\": \"#blocks\" }, { \"include\": \"#block-title\" }, { \"include\": \"#tables\" }, { \"include\": \"#horizontal-rule\" }, { \"include\": \"#list\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-attribute\" }, { \"include\": \"#line-break\" }], \"repository\": { \"admonition-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(NOTE|TIP|IMPORTANT|WARNING|CAUTION)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|====)$|^\\\\p{Blank}*$)\", \"name\": \"markup.admonition.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(NOTE|TIP|IMPORTANT|WARNING|CAUTION)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(={4,})\\\\s*$\", \"comment\": \"example block\", \"end\": \"(?<=\\\\1)\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"(?<=\\\\1)\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }] }, { \"begin\": \"^(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\\\\:\\\\p{Blank}+\", \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" } }, \"end\": \"^\\\\p{Blank}*$\", \"name\": \"markup.admonition.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }] }] }, \"anchor-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.constant.asciidoc\" }, \"2\": { \"name\": \"markup.blockid.asciidoc\" }, \"3\": { \"name\": \"string.unquoted.asciidoc\" }, \"4\": { \"name\": \"support.constant.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(?:(\\\\[{2})([\\\\p{Alpha}:_][\\\\p{Word}:.-]*)(?:,\\\\p{Blank}*(\\\\S.*?))?(\\\\]{2}))\", \"name\": \"markup.other.anchor.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.blockid.asciidoc\" }, \"3\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(anchor):(\\\\S+)\\\\[(.*?[^\\\\\\\\])?\\\\]\", \"name\": \"markup.other.anchor.asciidoc\" }] }, \"attribute-entry\": { \"patterns\": [{ \"begin\": \"^(:)(!?\\\\w.*?)(:)(\\\\p{Blank}+.+\\\\p{Blank}(?:\\\\+|\\\\\\\\))$\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.attribute-entry.asciidoc\" }, \"2\": { \"name\": \"support.constant.attribute-name.asciidoc\" }, \"3\": { \"name\": \"punctuation.separator.attribute-entry.asciidoc\" }, \"4\": { \"name\": \"string.unquoted.attribute-value.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#hard-break-backslash\" }, { \"include\": \"#line-break\" }, { \"include\": \"#line-break-backslash\" }] } }, \"contentName\": \"string.unquoted.attribute-value.asciidoc\", \"end\": \"^\\\\p{Blank}+.+$(?<!\\\\+|\\\\\\\\)|^\\\\p{Blank}*$\", \"endCaptures\": { \"0\": { \"name\": \"string.unquoted.attribute-value.asciidoc\" } }, \"name\": \"meta.definition.attribute-entry.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#hard-break-backslash\" }, { \"include\": \"#line-break\" }, { \"include\": \"#line-break-backslash\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.asciidoc\" }, \"2\": { \"name\": \"support.constant.attribute-name.asciidoc\" }, \"3\": { \"name\": \"punctuation.separator.asciidoc\" }, \"4\": { \"name\": \"string.unquoted.attribute-value.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#line-break\" }] } }, \"match\": \"^(:)(!?\\\\w.*?)(:)(\\\\p{Blank}+(.*))?$\", \"name\": \"meta.definition.attribute-entry.asciidoc\" }] }, \"attribute-reference\": { \"patterns\": [{ \"captures\": { \"2\": { \"name\": \"entity.name.function.asciidoc\" }, \"3\": { \"name\": \"punctuation.separator.asciidoc\" }, \"4\": { \"name\": \"support.constant.attribute-name.asciidoc\" }, \"6\": { \"name\": \"punctuation.separator.asciidoc\" }, \"7\": { \"name\": \"string.unquoted.attribute-value.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(\\\\{)(set|counter2?)(:)([\\\\p{Alnum}\\\\-_!]+)((:)(.*?))?(?<!\\\\\\\\)(\\\\})\", \"name\": \"markup.substitution.attribute-reference.asciidoc\" }, { \"match\": \"(?<!\\\\\\\\)(\\\\{)(\\\\w+(?:[\\\\-]\\\\w+)*)(?<!\\\\\\\\)(\\\\})\", \"name\": \"markup.substitution.attribute-reference.asciidoc\" }] }, \"bibliography-anchor\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.constant.asciidoc\" }, \"2\": { \"name\": \"markup.biblioref.asciidoc\" }, \"3\": { \"name\": \"support.constant.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(\\\\[{3})([\\\\p{Word}:][\\\\p{Word}:.-]*?)(\\\\]{3})\", \"name\": \"bibliography-anchor.asciidoc\" }] }, \"bibtex-macro\": { \"patterns\": [{ \"begin\": \"(?<!\\\\\\\\)(citenp:)([a-z,]*)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.meta.attribute-list.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"\\\\]|^$\", \"name\": \"markup.macro.inline.bibtex.asciidoc\" }] }, \"block-attribute\": { \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": `^\\\\[(|\\\\p{Blank}*[\\\\p{Word}\\\\{,.#\"'%].*)\\\\]$`, \"name\": \"markup.heading.block-attribute.asciidoc\" }] }, \"block-attribute-inner\": { \"patterns\": [{ \"comment\": \"separators\", \"match\": \"([,.#%])\", \"name\": \"punctuation.separator.asciidoc\" }, { \"captures\": { \"0\": { \"name\": \"markup.meta.attribute-list.asciidoc\", \"patterns\": [{ \"include\": \"#keywords\" }] } }, \"comment\": \"blockname\", \"match\": \"(?<=\\\\[)([^\\\\[\\\\],.#%=]+)\" }, { \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#attribute-reference\" }] } }, \"comment\": \"attributes\", \"match\": `(?<=\\\\{|,|.|#|\"|'|%)([^\\\\],.#%]+)`, \"name\": \"markup.meta.attribute-list.asciidoc\" }] }, \"block-callout\": { \"patterns\": [{ \"captures\": { \"2\": { \"name\": \"constant.other.symbol.asciidoc\" }, \"4\": { \"name\": \"constant.numeric.asciidoc\" }, \"5\": { \"name\": \"constant.other.symbol.asciidoc\" } }, \"match\": \"(?:(?:\\\\/\\\\/|#|--|;;) ?)?( )?(?<!\\\\\\\\)(<)!?(--|)(\\\\d+)\\\\3(>)(?=(?: ?<!?\\\\3\\\\d+\\\\3>)*$)\", \"name\": \"callout.source.code.asciidoc\" }] }, \"block-title\": { \"patterns\": [{ \"begin\": \"^\\\\.([^\\\\p{Blank}.].*)\", \"captures\": { \"1\": { \"name\": \"markup.heading.blocktitle.asciidoc\" } }, \"end\": \"$\" }] }, \"blocks\": { \"patterns\": [{ \"include\": \"#front-matter-block\" }, { \"include\": \"#comment-paragraph\" }, { \"include\": \"#admonition-paragraph\" }, { \"include\": \"#quote-paragraph\" }, { \"include\": \"#listing-paragraph\" }, { \"include\": \"#source-paragraphs\" }, { \"include\": \"#passthrough-paragraph\" }, { \"include\": \"#example-paragraph\" }, { \"include\": \"#sidebar-paragraph\" }, { \"include\": \"#literal-paragraph\" }, { \"include\": \"#open-block\" }] }, \"callout-list-item\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.other.symbol.asciidoc\" }, \"2\": { \"name\": \"constant.numeric.asciidoc\" }, \"3\": { \"name\": \"constant.other.symbol.asciidoc\" }, \"4\": { \"patterns\": [{ \"include\": \"#inlines\" }] } }, \"match\": \"^(<)(\\\\d+)(>)\\\\p{Blank}+(.*)$\", \"name\": \"callout.asciidoc\" }] }, \"characters\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.asciidoc\" }, \"3\": { \"name\": \"constant.character.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(&)(\\\\S+?)(;)\", \"name\": \"markup.character-reference.asciidoc\" }] }, \"comment\": { \"patterns\": [{ \"begin\": \"^(/{4,})$\", \"end\": \"^\\\\1$\", \"name\": \"comment.block.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }] }, { \"match\": \"^/{2}([^/].*)?$\", \"name\": \"comment.inline.asciidoc\" }] }, \"comment-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(comment)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--)$|^\\\\p{Blank}*$)\", \"name\": \"comment.block.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(comment)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }, { \"include\": \"#inlines\" }] }] }, \"emphasis\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.italic.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\\\\\\\\\)(\\\\[(?:[^\\\\]]+?)\\\\])?((__)((?!_).+?)(__))\", \"name\": \"markup.emphasis.unconstrained.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.italic.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?!_{4,}\\\\s*$)(?<=^|[^\\\\p{Word};:])(\\\\[(?:[^\\\\]]+?)\\\\])?((_)(\\\\S|\\\\S.*?\\\\S)(_))(?!\\\\p{Word})\", \"name\": \"markup.emphasis.constrained.asciidoc\" }] }, \"example-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(example)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|====)$|^\\\\p{Blank}*$)\", \"name\": \"markup.block.example.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(example)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(={4,})$\", \"comment\": \"example block\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^(-{2})$\", \"comment\": \"open block\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"include\": \"#inlines\" }] }, { \"begin\": \"^(={4,})$\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.block.example.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"footnote-macro\": { \"patterns\": [{ \"begin\": \"(?<!\\\\\\\\)footnote(?:(ref):|:([\\\\w-]+)?)\\\\[(?:|(.*?[^\\\\\\\\]))\\\\]\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"support.constant.attribute-name.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"\\\\]|^$\", \"name\": \"markup.other.footnote.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }] }] }, \"front-matter-block\": { \"patterns\": [{ \"begin\": \"\\\\A(-{3}$)\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.block.front-matter.asciidoc\", \"patterns\": [{ \"include\": \"source.yaml\" }] }] }, \"general-block-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"punctuation.separator.asciidoc\" }, \"3\": { \"name\": \"markup.link.asciidoc\", \"patterns\": [{ \"include\": \"#attribute-reference\" }] }, \"4\": { \"name\": \"punctuation.separator.asciidoc\" }, \"5\": { \"name\": \"string.unquoted.asciidoc\", \"patterns\": [{ \"include\": \"#attribute-reference\" }] }, \"6\": { \"name\": \"punctuation.separator.asciidoc\" } }, \"match\": \"^(\\\\p{Word}+)(::)(\\\\S*?)(\\\\[)((?:\\\\\\\\\\\\]|[^\\\\]])*?)(\\\\])$\", \"name\": \"markup.macro.block.general.asciidoc\" }] }, \"hard-break-backslash\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.other.symbol.hard-break.asciidoc\" } }, \"match\": \"(?<=\\\\S)\\\\p{Blank}+(\\\\+ \\\\\\\\)$\" }] }, \"horizontal-rule\": { \"patterns\": [{ \"match\": \"^(?:'|<){3,}$|^ {0,3}([-\\\\*'])( *)\\\\1\\\\2\\\\1$\", \"name\": \"constant.other.symbol.horizontal-rule.asciidoc\" }] }, \"image-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.link.asciidoc\" }, \"3\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(image|icon):([^:\\\\[][^\\\\[]*)\\\\[((?:\\\\\\\\\\\\]|[^\\\\]])*?)\\\\]\", \"name\": \"markup.macro.image.asciidoc\" }] }, \"include-directive\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"punctuation.separator.asciidoc\" }, \"3\": { \"name\": \"markup.link.asciidoc\", \"patterns\": [{ \"include\": \"#attribute-reference\" }] }, \"4\": { \"name\": \"punctuation.separator.asciidoc\" }, \"5\": { \"name\": \"string.unquoted.asciidoc\", \"patterns\": [{ \"include\": \"#attribute-reference\" }] }, \"6\": { \"name\": \"punctuation.separator.asciidoc\" } }, \"match\": \"^(include)(::)([^\\\\[]+)(\\\\[)(.*?)(\\\\])$\" }] }, \"inlines\": { \"patterns\": [{ \"include\": \"#typographic-quotes\" }, { \"include\": \"#strong\" }, { \"include\": \"#monospace\" }, { \"include\": \"#emphasis\" }, { \"include\": \"#superscript\" }, { \"include\": \"#subscript\" }, { \"include\": \"#mark\" }, { \"include\": \"#general-block-macro\" }, { \"include\": \"#anchor-macro\" }, { \"include\": \"#footnote-macro\" }, { \"include\": \"#image-macro\" }, { \"include\": \"#kbd-macro\" }, { \"include\": \"#link-macro\" }, { \"include\": \"#stem-macro\" }, { \"include\": \"#menu-macro\" }, { \"include\": \"#passthrough-macro\" }, { \"include\": \"#xref-macro\" }, { \"include\": \"#attribute-reference\" }, { \"include\": \"#characters\" }, { \"include\": \"#bibtex-macro\" }, { \"include\": \"#bibliography-anchor\" }] }, \"kbd-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"3\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(kbd|btn):(\\\\[)((?:\\\\\\\\\\\\]|[^\\\\]])+?)(\\\\])\", \"name\": \"markup.macro.kbd.asciidoc\" }] }, \"keywords\": { \"patterns\": [{ \"comment\": \"Admonition\", \"match\": \"(NOTE|TIP|IMPORTANT|WARNING|CAUTION)\", \"name\": \"entity.name.function.asciidoc\" }, { \"comment\": \"Paragraph or verbatim\", \"match\": \"(comment|example|literal|listing|normal|pass|quote|sidebar|source|verse|abstract|partintro)\", \"name\": \"entity.name.function.asciidoc\" }, { \"comment\": \"Diagram\", \"match\": \"(actdiag|blockdiag|ditaa|graphviz|meme|mermaid|nwdiag|packetdiag|pikchr|plantuml|rackdiag|seqdiag|shaape|wavedrom)\", \"name\": \"entity.name.function.asciidoc\" }, { \"comment\": \"Others\", \"match\": \"(sect[1-4]|preface|colophon|dedication|glossary|bibliography|synopsis|appendix|index|normal|partintro|music|latex|stem)\", \"name\": \"entity.name.function.asciidoc\" }] }, \"line-break\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.line-break.asciidoc\" } }, \"match\": \"(?<=\\\\S)\\\\p{Blank}+(\\\\+)$\" }] }, \"line-break-backslash\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.line-break.asciidoc\" } }, \"match\": \"(?<=\\\\S)\\\\p{Blank}+(\\\\\\\\)$\" }] }, \"link-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.link.asciidoc\", \"patterns\": [{ \"include\": \"#attribute-reference\" }] }, \"2\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?:^|<|[\\\\s>\\\\(\\\\)\\\\[\\\\];])((?<!\\\\\\\\)(?:https?|file|ftp|irc)://[^\\\\s\\\\[\\\\]<]*[^\\\\s.,\\\\[\\\\]<\\\\)])(?:\\\\[((?:\\\\\\\\\\\\]|[^\\\\]])*?)\\\\])?\", \"name\": \"markup.other.url.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.substitution.attribute-reference.asciidoc\" }, \"2\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?:^|<|[\\\\p{Blank}>\\\\(\\\\)\\\\[\\\\];])((?<!\\\\\\\\)\\\\{uri-\\\\w+(?:[\\\\-]\\\\w+)*(?<!\\\\\\\\)\\\\})(?:\\\\[((?:\\\\\\\\\\\\]|[^\\\\]])*?)\\\\])\", \"name\": \"markup.other.url.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.link.asciidoc\", \"patterns\": [{ \"include\": \"#attribute-reference\" }] }, \"3\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(link|mailto):([^\\\\s\\\\[]+)(?:\\\\[((?:\\\\\\\\\\\\]|[^\\\\]])*?)\\\\])\", \"name\": \"markup.other.url.asciidoc\" }, { \"match\": \"\\\\p{Word}[\\\\p{Word}.%+-]*(@)\\\\p{Alnum}[\\\\p{Alnum}.-]*(\\\\.)\\\\p{Alpha}{2,4}\\\\b\", \"name\": \"markup.link.email.asciidoc\" }] }, \"list\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.list.bullet.asciidoc\" }, \"2\": { \"name\": \"markup.todo.box.asciidoc\" } }, \"match\": \"^\\\\s*(-)\\\\p{Blank}(\\\\[[\\\\p{Blank}\\\\*x]\\\\])(?=\\\\p{Blank})\", \"name\": \"markup.todo.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.list.bullet.asciidoc\" } }, \"match\": \"^\\\\p{Blank}*(-|\\\\*{1,5}|\\\\u2022{1,5})(?=\\\\p{Blank})\", \"name\": \"markup.list.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.list.bullet.asciidoc\" } }, \"match\": \"^\\\\p{Blank}*(\\\\.{1,5}|\\\\d+\\\\.|[a-zA-Z]\\\\.|[IVXivx]+\\\\))(?=\\\\p{Blank})\", \"name\": \"markup.list.asciidoc\" }, { \"captures\": { \"1\": { \"patterns\": [{ \"include\": \"#link-macro\" }, { \"include\": \"#attribute-reference\" }] }, \"2\": { \"name\": \"markup.list.bullet.asciidoc\" } }, \"match\": \"^\\\\p{Blank}*(.*?\\\\S)(:{2,4}|;;)($|\\\\p{Blank}+)\", \"name\": \"markup.heading.list.asciidoc\" }] }, \"listing-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(listing)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--)$|^\\\\p{Blank}*$)\", \"name\": \"markup.block.listing.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(listing)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"end\": \"^(\\\\1)$\" }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"^(\\\\1)$\" }, { \"include\": \"#inlines\" }] }] }, \"literal-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(literal)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.block.literal.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(literal)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(\\\\.{4,})$\", \"comment\": \"literal block\", \"end\": \"^(\\\\1)$\" }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"^(\\\\1)$\" }, { \"include\": \"#inlines\" }] }, { \"begin\": \"^(\\\\.{4,})$\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.block.literal.asciidoc\" }] }, \"mark\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.mark.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\\\\\\\\\)(\\\\[[^\\\\]]+?\\\\])((##)(.+?)(##))\", \"name\": \"markup.mark.unconstrained.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.highlight.asciidoc\" }, \"2\": { \"name\": \"punctuation.definition.asciidoc\" }, \"4\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\\\\\\\\\)((##)(.+?)(##))\", \"name\": \"markup.mark.unconstrained.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.mark.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<![\\\\\\\\;:\\\\p{Word}#])(\\\\[[^\\\\]]+?\\\\])((#)(\\\\S|\\\\S.*?\\\\S)(#)(?!\\\\p{Word}))\", \"name\": \"markup.mark.constrained.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.highlight.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<![\\\\\\\\;:\\\\p{Word}#])(\\\\[[^\\\\]]+?\\\\])?((#)(\\\\S|\\\\S.*?\\\\S)(#)(?!\\\\p{Word}))\", \"name\": \"markup.mark.constrained.asciidoc\" }] }, \"menu-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.link.asciidoc\" }, \"3\": { \"name\": \"string.unquoted.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(menu):(\\\\p{Word}|\\\\p{Word}.*?\\\\S)\\\\[\\\\p{Blank}*(.+?)?\\\\]\", \"name\": \"markup.other.menu.asciidoc\" }] }, \"monospace\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.raw.monospace.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(\\\\[.+?\\\\])?((``)(.+?)(``))\", \"name\": \"markup.monospace.unconstrained.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.raw.monospace.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<![\\\\\\\\;:\\\\p{Word}\\\"'`])(\\\\[.+?\\\\])?((`)(\\\\S|\\\\S.*?\\\\S)(`))(?![\\\\p{Word}\\\"'`])\", \"name\": \"markup.monospace.constrained.asciidoc\" }] }, \"open-block\": { \"patterns\": [{ \"begin\": \"^(-{2})$\", \"beginCaptures\": { \"1\": { \"name\": \"constant.other.symbol.asciidoc\" } }, \"end\": \"^(\\\\1)$\", \"endCaptures\": { \"1\": { \"name\": \"constant.other.symbol.asciidoc\" } }, \"name\": \"markup.block.open.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"passthrough-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"3\": { \"name\": \"support.constant.asciidoc\" }, \"4\": { \"name\": \"string.unquoted.asciidoc\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }, \"5\": { \"name\": \"support.constant.asciidoc\" } }, \"match\": \"(?:(?<!\\\\\\\\)(\\\\[([^\\\\]]+?)\\\\]))?(?:\\\\\\\\{0,2})(?<delim>\\\\+{2,3}|\\\\${2})(.*?)(\\\\k<delim>)\", \"name\": \"markup.macro.inline.passthrough.asciidoc\" }, { \"begin\": \"(?<!\\\\\\\\)(pass:)([a-z,]*)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.meta.attribute-list.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"\\\\]|^$\", \"name\": \"markup.macro.inline.passthrough.asciidoc\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, \"passthrough-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(pass)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\+\\\\+)$|^\\\\p{Blank}*$)\", \"name\": \"markup.block.passthrough.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(pass)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(\\\\+{4,})\\\\s*$\", \"comment\": \"passthrough block\", \"end\": \"(?<=\\\\1)\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"(?<=\\\\1)\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, { \"begin\": \"(^\\\\+{4,}$)\", \"end\": \"\\\\1\", \"name\": \"markup.block.passthrough.asciidoc\", \"patterns\": [{ \"include\": \"text.html.basic\" }] }] }, \"quote-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(quote|verse)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$)))\", \"end\": '((?<=____|\"\"|--)$|^\\\\p{Blank}*$)', \"name\": \"markup.italic.quotes.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(quote|verse)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"include\": \"#inlines\" }, { \"begin\": \"^([_]{4,})\\\\s*$\", \"comment\": \"quotes block\", \"end\": \"(?<=\\\\1)\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }, { \"begin\": '^(\"{2})\\\\s*$', \"comment\": \"air quotes\", \"end\": \"(?<=\\\\1)\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"(?<=\\\\1)$\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }] }, { \"begin\": '^(\"\")$', \"end\": \"^\\\\1$\", \"name\": \"markup.italic.quotes.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }, { \"begin\": \"^\\\\p{Blank}*(>) \", \"end\": \"^\\\\p{Blank}*?$\", \"name\": \"markup.italic.quotes.asciidoc\", \"patterns\": [{ \"include\": \"#inlines\" }, { \"include\": \"#list\" }] }] }, \"sidebar-paragraph\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(sidebar)((?:,|#|\\\\.|%)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\*\\\\*\\\\*\\\\*)$|^\\\\p{Blank}*$)\", \"name\": \"markup.block.sidebar.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(sidebar)((?:,|#|\\\\.|%)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(\\\\*{4,})$\", \"comment\": \"sidebar block\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^(-{2})$\", \"comment\": \"open block\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"include\": \"#inlines\" }] }, { \"begin\": \"^(\\\\*{4,})$\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.block.sidebar.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"source-asciidoctor\": { \"patterns\": [{ \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(c))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.c.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(c))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.c\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.c\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.c\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.c\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.c\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.c\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(clojure))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.clojure.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(clojure))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.clojure\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.clojure\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.clojure\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.clojure\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.clojure\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.clojure\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(coffee-?(script)?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.coffee.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(coffee-?(script)?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.coffee\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.coffee\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.coffee\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.coffee\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.coffee\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.coffee\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(c(pp|\\\\+\\\\+)))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.cpp.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(c(pp|\\\\+\\\\+)))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.cpp\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.cpp\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.cpp\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.cpp\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.cpp\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.cpp\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(css))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.css.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(css))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.css\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.css\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.css\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(cs(harp)?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.cs.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(cs(harp)?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.cs\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.cs\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.cs\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.cs\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.cs\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.cs\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(diff|patch|rej))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.diff.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(diff|patch|rej))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.diff\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.diff\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.diff\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.diff\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.diff\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.diff\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(docker(file)?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.dockerfile.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(docker(file)?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.dockerfile\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.dockerfile\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.dockerfile\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.dockerfile\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.dockerfile\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.dockerfile\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(elixir))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.elixir.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(elixir))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.elixir\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.elixir\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.elixir\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.elixir\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.elixir\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.elixir\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(elm))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.elm.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(elm))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.elm\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.elm\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.elm\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.elm\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.elm\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.elm\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(erlang))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.erlang.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(erlang))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.erlang\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.erlang\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.erlang\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.erlang\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.erlang\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.erlang\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(go(lang)?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.go.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(go(lang)?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.go\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.go\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.go\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.go\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.go\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.go\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(groovy))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.groovy.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(groovy))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.groovy\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.groovy\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.groovy\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.groovy\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.groovy\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.groovy\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(haskell))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.haskell.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(haskell))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.haskell\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.haskell\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.haskell\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.haskell\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.haskell\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.haskell\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(html))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.html.basic.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(html))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"text.embedded.html.basic\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"text.embedded.html.basic\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"text.embedded.html.basic\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.basic\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(java))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.java.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(java))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.java\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.java\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.java\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.java\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.java\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.java\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(javascript|js))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.js.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(javascript|js))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.js\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.js\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.js\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.js\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(json))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.json.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(json))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.json\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.json\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.json\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.json\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.json\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.json\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(jsx))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.js.jsx.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(jsx))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.js.jsx\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.js.jsx\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.js.jsx\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.js.jsx\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.js.jsx\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.js.jsx\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(julia))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.julia.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(julia))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.julia\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.julia\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.julia\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.julia\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.julia\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.julia\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(kotlin|kts?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.kotlin.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(kotlin|kts?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.kotlin\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.kotlin\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.kotlin\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.kotlin\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.kotlin\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.kotlin\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(less))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.css.less.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(less))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.css.less\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css.less\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.css.less\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css.less\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.css.less\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css.less\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(make(file)?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.makefile.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(make(file)?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.makefile\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.makefile\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.makefile\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.makefile\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.makefile\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.makefile\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(markdown|mdown|md))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.gfm.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(markdown|mdown|md))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.gfm\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.gfm\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.gfm\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.gfm\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.gfm\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.gfm\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(mustache))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.html.mustache.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(mustache))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"text.embedded.html.mustache\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.mustache\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"text.embedded.html.mustache\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.mustache\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"text.embedded.html.mustache\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.mustache\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(objc|objective-c))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.objc.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(objc|objective-c))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.objc\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.objc\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.objc\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.objc\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.objc\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.objc\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(ocaml))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.ocaml.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(ocaml))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.ocaml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ocaml\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.ocaml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ocaml\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.ocaml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ocaml\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(perl))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.perl.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(perl))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.perl\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.perl\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.perl\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.perl\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.perl\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.perl\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(perl6))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.perl6.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(perl6))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.perl6\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.perl6\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.perl6\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.perl6\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.perl6\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.perl6\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(php))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.html.php.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(php))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"text.embedded.html.php\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.php\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"text.embedded.html.php\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.php\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"text.embedded.html.php\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.html.php\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(properties))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.asciidoc.properties.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(properties))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.asciidoc.properties\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.asciidoc.properties\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.asciidoc.properties\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.asciidoc.properties\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.asciidoc.properties\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.asciidoc.properties\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(py(thon)?))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.python.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(py(thon)?))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.python\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.python\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.python\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.python\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.python\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.python\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(r))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.r.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(r))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.r\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.r\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.r\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.r\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.r\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.r\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(ruby|rb))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.ruby.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(ruby|rb))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.ruby\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ruby\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.ruby\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ruby\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.ruby\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ruby\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(rust|rs))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.rust.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(rust|rs))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.rust\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.rust\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.rust\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.rust\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.rust\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.rust\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(sass))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.sass.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(sass))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.sass\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.sass\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.sass\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.sass\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.sass\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.sass\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(scala))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.scala.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(scala))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.scala\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.scala\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.scala\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.scala\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.scala\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.scala\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(scss))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.css.scss.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(scss))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.css.scss\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css.scss\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.css.scss\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css.scss\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.css.scss\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.css.scss\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(sh|bash|shell))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.shell.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(sh|bash|shell))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.shell\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.shell\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.shell\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.shell\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.shell\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.shell\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(sql))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.sql.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(sql))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.sql\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.sql\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.sql\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.sql\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.sql\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.sql\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(swift))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.swift.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(swift))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.swift\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.swift\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.swift\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.swift\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.swift\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.swift\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(toml))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.toml.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(toml))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.toml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.toml\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.toml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.toml\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.toml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.toml\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(typescript|ts))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.ts.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(typescript|ts))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.ts\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ts\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.ts\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ts\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.ts\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.ts\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(xml))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.xml.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(xml))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"text.embedded.xml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.xml\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"text.embedded.xml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.xml\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"text.embedded.xml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"text.xml\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(ya?ml))((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"name\": \"markup.code.yaml.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)(?:,|#)\\\\p{Blank}*(?i:(ya?ml))((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"contentName\": \"source.embedded.yaml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.yaml\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"contentName\": \"source.embedded.yaml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.yaml\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"contentName\": \"source.embedded.yaml\", \"end\": \"^(\\\\1)$\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }, { \"include\": \"source.yaml\" }] }] }, { \"begin\": \"(?=(?>(?:^\\\\[(source)((?:,|#)[^\\\\]]+)*\\\\]$)))\", \"end\": \"((?<=--|\\\\.\\\\.\\\\.\\\\.)$|^\\\\p{Blank}*$)\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.heading.asciidoc\", \"patterns\": [{ \"include\": \"#block-attribute-inner\" }] } }, \"match\": \"^\\\\[(source)((?:,|#)([^,\\\\]]+))*\\\\]$\" }, { \"include\": \"#inlines\" }, { \"include\": \"#block-title\" }, { \"begin\": \"^(-{4,})\\\\s*$\", \"comment\": \"listing block\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.raw.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }] }, { \"begin\": \"^(-{2})\\\\s*$\", \"comment\": \"open block\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.raw.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }] }, { \"begin\": \"^(\\\\.{4})\\\\s*$\", \"comment\": \"literal block\", \"end\": \"^(\\\\1)$\", \"name\": \"markup.raw.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }] }] }, { \"begin\": \"^(-{4,})\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"end\": \"^(\\\\1)$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.raw.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"#include-directive\" }] }] }, \"source-markdown\": { \"patterns\": [{ \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(c))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.c\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.c.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.c\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(clojure))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.clojure\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.clojure.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.clojure\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(coffee-?(script)?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.coffee\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.coffee.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.coffee\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(c(pp|\\\\+\\\\+)))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.cpp\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.cpp.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.cpp\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(css))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.css\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.css.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.css\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(cs(harp)?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.cs\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.cs.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.cs\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(diff|patch|rej))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.diff\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.diff.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.diff\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(docker(file)?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.dockerfile\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.dockerfile.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.dockerfile\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(elixir))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.elixir\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.elixir.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.elixir\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(elm))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.elm\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.elm.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.elm\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(erlang))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.erlang\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.erlang.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.erlang\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(go(lang)?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.go\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.go.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.go\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(groovy))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.groovy\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.groovy.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.groovy\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(haskell))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.haskell\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.haskell.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.haskell\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(html))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"text.embedded.html.basic\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.html.basic.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(java))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.java\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.java.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.java\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(javascript|js))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.js\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.js.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.js\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(json))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.json\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.json.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.json\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(jsx))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.js.jsx\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.js.jsx.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.js.jsx\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(julia))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.julia\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.julia.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.julia\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(kotlin|kts?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.kotlin\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.kotlin.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.kotlin\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(less))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.css.less\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.css.less.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.css.less\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(make(file)?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.makefile\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.makefile.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.makefile\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(markdown|mdown|md))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.gfm\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.gfm.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.gfm\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(mustache))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"text.embedded.html.mustache\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.html.mustache.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"text.html.mustache\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(objc|objective-c))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.objc\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.objc.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.objc\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(ocaml))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.ocaml\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.ocaml.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.ocaml\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(perl))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.perl\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.perl.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.perl\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(perl6))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.perl6\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.perl6.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.perl6\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(php))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"text.embedded.html.php\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.html.php.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"text.html.php\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(properties))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.asciidoc.properties\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.asciidoc.properties.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.asciidoc.properties\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(py(thon)?))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.python\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.python.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.python\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(r))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.r\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.r.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.r\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(ruby|rb))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.ruby\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.ruby.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.ruby\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(rust|rs))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.rust\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.rust.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.rust\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(sass))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.sass\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.sass.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.sass\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(scala))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.scala\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.scala.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.scala\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(scss))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.css.scss\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.css.scss.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.css.scss\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(sh|bash|shell))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.shell\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.shell.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.shell\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(sql))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.sql\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.sql.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.sql\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(swift))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.swift\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.swift.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.swift\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(toml))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.toml\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.toml.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.toml\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(typescript|ts))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.ts\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.ts.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.ts\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(xml))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"text.embedded.xml\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.xml.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"text.xml\" }] }, { \"begin\": \"^\\\\s*(`{3,})\\\\s*(?i:(ya?ml))\\\\s*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"contentName\": \"source.embedded.yaml\", \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.code.yaml.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }, { \"include\": \"source.yaml\" }] }, { \"begin\": \"^\\\\s*(`{3,}).*$\", \"beginCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"end\": \"^\\\\s*\\\\1\\\\s*$\", \"endCaptures\": { \"0\": { \"name\": \"support.asciidoc\" } }, \"name\": \"markup.raw.asciidoc\", \"patterns\": [{ \"include\": \"#block-callout\" }] }] }, \"source-paragraphs\": { \"patterns\": [{ \"include\": \"#source-asciidoctor\" }, { \"include\": \"#source-markdown\" }] }, \"stem-macro\": { \"patterns\": [{ \"begin\": \"(?<!\\\\\\\\)(stem|(?:latex|ascii)math):([a-z,]*)(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.meta.attribute-list.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"\\\\]|^$\", \"name\": \"markup.macro.inline.stem.asciidoc\" }] }, \"strong\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.bold.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\\\\\\\\\)(\\\\[.+?\\\\])?((\\\\*\\\\*)(.+?)(\\\\*\\\\*))\", \"name\": \"markup.strong.unconstrained.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.bold.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<![\\\\\\\\;:\\\\p{Word}\\\\*])(\\\\[.+?\\\\])?((\\\\*)(\\\\S|\\\\S.*?\\\\S)(\\\\*)(?!\\\\p{Word}))\", \"name\": \"markup.strong.constrained.asciidoc\" }] }, \"subscript\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.sub.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.sub.subscript.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(\\\\[.+?\\\\])?((~)(\\\\S+?)(~))\", \"name\": \"markup.subscript.asciidoc\" }] }, \"superscript\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.super.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.super.superscript.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"match\": \"(?<!\\\\\\\\)(\\\\[.+?\\\\])?((\\\\^)(\\\\S+?)(\\\\^))\", \"name\": \"markup.superscript.asciidoc\" }] }, \"table-csv\": { \"patterns\": [{ \"begin\": \"^(,===)$\", \"beginCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"^(\\\\1)$\", \"endCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"name\": \"markup.table.csv.asciidoc\", \"patterns\": [{ \"include\": \"text.csv\" }, { \"captures\": { \"0\": { \"name\": \"markup.table.cell.delimiter.asciidoc\" } }, \"comment\": \"cell separator\", \"match\": \",\" }, { \"include\": \"#general-block-macro\" }] }] }, \"table-dsv\": { \"patterns\": [{ \"begin\": \"^(:===)$\", \"beginCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"^(\\\\1)$\", \"endCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"name\": \"markup.table.dsv.asciidoc\", \"patterns\": [{ \"captures\": { \"0\": { \"name\": \"markup.table.cell.delimiter.asciidoc\" } }, \"comment\": \"cell separator\", \"match\": \":\" }, { \"include\": \"#general-block-macro\" }] }] }, \"table-nested\": { \"patterns\": [{ \"begin\": \"^(!===)$\", \"beginCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"contentName\": \"markup.table.content.asciidoc\", \"end\": \"^(\\\\1)$\", \"endCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"name\": \"markup.table.nested.asciidoc\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.table.cell.delimiter.asciidoc\" } }, \"comment\": \"cell separator and attributes\", \"match\": \"(^|[^\\\\p{Blank}\\\\\\\\]*)(?<!\\\\\\\\)(!)\" }, { \"include\": \"#tables-includes\" }] }] }, \"table-psv\": { \"patterns\": [{ \"begin\": \"^(\\\\|===)$\", \"beginCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"contentName\": \"markup.table.content.asciidoc\", \"end\": \"^(\\\\1)$\", \"endCaptures\": { \"0\": { \"name\": \"markup.table.delimiter.asciidoc\" } }, \"name\": \"markup.table.asciidoc\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"2\": { \"name\": \"markup.table.cell.delimiter.asciidoc\" } }, \"comment\": \"cell separator and attributes\", \"match\": \"(^|[^\\\\p{Blank}\\\\\\\\]*)(?<!\\\\\\\\)(\\\\|)\" }, { \"include\": \"#tables-includes\" }] }] }, \"tables\": { \"patterns\": [{ \"include\": \"#table-psv\" }, { \"include\": \"#table-nested\" }, { \"include\": \"#table-csv\" }, { \"include\": \"#table-dsv\" }] }, \"tables-includes\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#callout-list-item\" }, { \"include\": \"#attribute-entry\" }, { \"include\": \"#block-title\" }, { \"include\": \"#explicit-paragraph\" }, { \"include\": \"#section\" }, { \"include\": \"#blocks\" }, { \"include\": \"#list\" }, { \"include\": \"#inlines\" }, { \"include\": \"#line-break\" }] }, \"titles\": { \"patterns\": [{ \"begin\": \"^((?:=|#){6})([\\\\p{Blank}]+)(?=\\\\S+)\", \"beginCaptures\": { \"1\": { \"name\": \"markup.heading.marker.asciidoc\" }, \"2\": { \"name\": \"markup.heading.space.asciidoc\" } }, \"end\": \"$\", \"name\": \"markup.heading.heading-5.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^((?:=|#){5})([\\\\p{Blank}]+)(?=\\\\S+)\", \"beginCaptures\": { \"1\": { \"name\": \"markup.heading.marker.asciidoc\" }, \"2\": { \"name\": \"markup.heading.space.asciidoc\" } }, \"end\": \"$\", \"name\": \"markup.heading.heading-4.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^((?:=|#){4})([\\\\p{Blank}]+)(?=\\\\S+)\", \"beginCaptures\": { \"1\": { \"name\": \"markup.heading.marker.asciidoc\" }, \"2\": { \"name\": \"markup.heading.space.asciidoc\" } }, \"end\": \"$\", \"name\": \"markup.heading.heading-3.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^((?:=|#){3})([\\\\p{Blank}]+)(?=\\\\S+)\", \"beginCaptures\": { \"1\": { \"name\": \"markup.heading.marker.asciidoc\" }, \"2\": { \"name\": \"markup.heading.space.asciidoc\" } }, \"end\": \"$\", \"name\": \"markup.heading.heading-2.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^((?:=|#){2})([\\\\p{Blank}]+)(?=\\\\S+)\", \"beginCaptures\": { \"1\": { \"name\": \"markup.heading.marker.asciidoc\" }, \"2\": { \"name\": \"markup.heading.space.asciidoc\" } }, \"end\": \"$\", \"name\": \"markup.heading.heading-1.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"^((?:=|#){1})([\\\\p{Blank}]+)(?=\\\\S+)\", \"beginCaptures\": { \"1\": { \"name\": \"markup.heading.marker.asciidoc\" }, \"2\": { \"name\": \"markup.heading.space.asciidoc\" } }, \"end\": \"$\", \"name\": \"markup.heading.heading-0.asciidoc\", \"patterns\": [{ \"include\": \"$self\" }] }] }, \"typographic-quotes\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"comment\": \"double-quoted\", \"match\": '(?:^|(?<!\\\\p{Word}|;|:))(\\\\[([^\\\\]]+?)\\\\])?(\"`)(\\\\S|\\\\S.*?\\\\S)(`\")(?!\\\\p{Word})', \"name\": \"markup.italic.quote.typographic-quotes.asciidoc\" }, { \"captures\": { \"1\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"3\": { \"name\": \"punctuation.definition.asciidoc\" }, \"5\": { \"name\": \"punctuation.definition.asciidoc\" } }, \"comment\": \"single-quoted\", \"match\": \"(?:^|(?<!\\\\p{Word}|;|:))(\\\\[([^\\\\]]+?)\\\\])?('`)(\\\\S|\\\\S.*?\\\\S)(`')(?!\\\\p{Word})\", \"name\": \"markup.italic.quote.typographic-quotes.asciidoc\" }] }, \"xref-macro\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.asciidoc\" }, \"2\": { \"name\": \"markup.meta.attribute-list.asciidoc\" }, \"3\": { \"name\": \"string.unquoted.asciidoc\" }, \"4\": { \"name\": \"constant.asciidoc\" } }, \"match\": '(?<!\\\\\\\\)(?:(<<)([\\\\p{Word}\":./]+,)?(.*?)(>>))', \"name\": \"markup.reference.xref.asciidoc\" }, { \"begin\": '(?<!\\\\\\\\)(xref:)([\\\\p{Word}\":.\\\\/].*?)(\\\\[)', \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.asciidoc\" }, \"2\": { \"name\": \"markup.meta.attribute-list.asciidoc\" } }, \"contentName\": \"string.unquoted.asciidoc\", \"end\": \"\\\\]|^$\", \"name\": \"markup.reference.xref.asciidoc\" }] } }, \"scopeName\": \"text.asciidoc\", \"embeddedLangs\": [\"html\", \"yaml\", \"csv\", \"c\", \"clojure\", \"coffee\", \"cpp\", \"css\", \"csharp\", \"diff\", \"docker\", \"elixir\", \"elm\", \"erlang\", \"go\", \"groovy\", \"haskell\", \"java\", \"javascript\", \"json\", \"jsx\", \"julia\", \"kotlin\", \"less\", \"make\", \"objective-c\", \"ocaml\", \"perl\", \"python\", \"r\", \"ruby\", \"rust\", \"sass\", \"scala\", \"scss\", \"shellscript\", \"sql\", \"swift\", \"toml\", \"typescript\", \"xml\"], \"aliases\": [\"adoc\"] });\nvar asciidoc = [\n  ...html,\n  ...yaml,\n  ...csv,\n  ...c,\n  ...clojure,\n  ...coffee,\n  ...cpp,\n  ...css,\n  ...csharp,\n  ...diff,\n  ...docker,\n  ...elixir,\n  ...elm,\n  ...erlang,\n  ...go,\n  ...groovy,\n  ...haskell,\n  ...java,\n  ...javascript,\n  ...json,\n  ...jsx,\n  ...julia,\n  ...kotlin,\n  ...less,\n  ...make,\n  ...objective_c,\n  ...ocaml,\n  ...perl,\n  ...python,\n  ...r,\n  ...ruby,\n  ...rust,\n  ...sass,\n  ...scala,\n  ...scss,\n  ...shellscript,\n  ...sql,\n  ...swift,\n  ...toml,\n  ...typescript,\n  ...xml,\n  lang\n];\n\nexport { asciidoc as default };\n","const lang = Object.freeze({ \"displayName\": \"Clojure\", \"name\": \"clojure\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#shebang-comment\" }, { \"include\": \"#quoted-sexp\" }, { \"include\": \"#sexp\" }, { \"include\": \"#keyfn\" }, { \"include\": \"#string\" }, { \"include\": \"#vector\" }, { \"include\": \"#set\" }, { \"include\": \"#map\" }, { \"include\": \"#regexp\" }, { \"include\": \"#var\" }, { \"include\": \"#constants\" }, { \"include\": \"#dynamic-variables\" }, { \"include\": \"#metadata\" }, { \"include\": \"#namespace-symbol\" }, { \"include\": \"#symbol\" }], \"repository\": { \"comment\": { \"begin\": \"(?<!\\\\\\\\);\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.clojure\" } }, \"end\": \"$\", \"name\": \"comment.line.semicolon.clojure\" }, \"constants\": { \"patterns\": [{ \"match\": \"(nil)(?=(\\\\s|\\\\)|\\\\]|\\\\}))\", \"name\": \"constant.language.nil.clojure\" }, { \"match\": \"(true|false)\", \"name\": \"constant.language.boolean.clojure\" }, { \"match\": \"(##(?:Inf|-Inf|NaN))\", \"name\": \"constant.numeric.symbol.clojure\" }, { \"match\": \"([-+]?\\\\d+/\\\\d+)\", \"name\": \"constant.numeric.ratio.clojure\" }, { \"match\": \"([-+]?(?:(?:3[0-6])|(?:[12]\\\\d)|[2-9])[rR][0-9A-Za-z]+N?)\", \"name\": \"constant.numeric.arbitrary-radix.clojure\" }, { \"match\": \"([-+]?0[xX][0-9a-fA-F]+N?)\", \"name\": \"constant.numeric.hexadecimal.clojure\" }, { \"match\": \"([-+]?0[0-7]+N?)\", \"name\": \"constant.numeric.octal.clojure\" }, { \"match\": \"([-+]?[0-9]+(?:(\\\\.|(?=[eEM]))[0-9]*([eE][-+]?[0-9]+)?)M?)\", \"name\": \"constant.numeric.double.clojure\" }, { \"match\": \"([-+]?\\\\d+N?)\", \"name\": \"constant.numeric.long.clojure\" }, { \"include\": \"#keyword\" }] }, \"dynamic-variables\": { \"match\": \"\\\\*[\\\\w\\\\.\\\\-\\\\_\\\\:\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\d]+\\\\*\", \"name\": \"meta.symbol.dynamic.clojure\" }, \"keyfn\": { \"patterns\": [{ \"match\": \"(?<=(\\\\s|\\\\(|\\\\[|\\\\{))(if(-[-\\\\p{Ll}\\\\?]*)?|when(-[-\\\\p{Ll}]*)?|for(-[-\\\\p{Ll}]*)?|cond|do|let(-[-\\\\p{Ll}\\\\?]*)?|binding|loop|recur|fn|throw[\\\\p{Ll}\\\\-]*|try|catch|finally|([\\\\p{Ll}]*case))(?=(\\\\s|\\\\)|\\\\]|\\\\}))\", \"name\": \"storage.control.clojure\" }, { \"match\": \"(?<=(\\\\s|\\\\(|\\\\[|\\\\{))(declare-?|(in-)?ns|import|use|require|load|compile|(def[\\\\p{Ll}\\\\-]*))(?=(\\\\s|\\\\)|\\\\]|\\\\}))\", \"name\": \"keyword.control.clojure\" }] }, \"keyword\": { \"match\": \"(?<=(\\\\s|\\\\(|\\\\[|\\\\{)):[\\\\w\\\\#\\\\.\\\\-\\\\_\\\\:\\\\+\\\\=\\\\>\\\\<\\\\/\\\\!\\\\?\\\\*]+(?=(\\\\s|\\\\)|\\\\]|\\\\}|\\\\,))\", \"name\": \"constant.keyword.clojure\" }, \"map\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.map.begin.clojure\" } }, \"end\": \"(\\\\}(?=[\\\\}\\\\]\\\\)\\\\s]*(?:;|$)))|(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.map.end.trailing.clojure\" }, \"2\": { \"name\": \"punctuation.section.map.end.clojure\" } }, \"name\": \"meta.map.clojure\", \"patterns\": [{ \"include\": \"$self\" }] }, \"metadata\": { \"patterns\": [{ \"begin\": \"(\\\\^\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.metadata.map.begin.clojure\" } }, \"end\": \"(\\\\}(?=[\\\\}\\\\]\\\\)\\\\s]*(?:;|$)))|(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.metadata.map.end.trailing.clojure\" }, \"2\": { \"name\": \"punctuation.section.metadata.map.end.clojure\" } }, \"name\": \"meta.metadata.map.clojure\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"begin\": \"(\\\\^)\", \"end\": \"(\\\\s)\", \"name\": \"meta.metadata.simple.clojure\", \"patterns\": [{ \"include\": \"#keyword\" }, { \"include\": \"$self\" }] }] }, \"namespace-symbol\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"meta.symbol.namespace.clojure\" } }, \"match\": \"([\\\\p{L}\\\\.\\\\-\\\\_\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\*][\\\\w\\\\.\\\\-\\\\_\\\\:\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\*\\\\d]*)/\" }] }, \"quoted-sexp\": { \"begin\": \"(['``]\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.begin.clojure\" } }, \"end\": \"(\\\\))$|(\\\\)(?=[\\\\}\\\\]\\\\)\\\\s]*(?:;|$)))|(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.end.trailing.clojure\" }, \"2\": { \"name\": \"punctuation.section.expression.end.trailing.clojure\" }, \"3\": { \"name\": \"punctuation.section.expression.end.clojure\" } }, \"name\": \"meta.quoted-expression.clojure\", \"patterns\": [{ \"include\": \"$self\" }] }, \"regexp\": { \"begin\": '#\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.regexp.begin.clojure\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.regexp.end.clojure\" } }, \"name\": \"string.regexp.clojure\", \"patterns\": [{ \"include\": \"#regexp_escaped_char\" }] }, \"regexp_escaped_char\": { \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.clojure\" }, \"set\": { \"begin\": \"(\\\\#\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.set.begin.clojure\" } }, \"end\": \"(\\\\}(?=[\\\\}\\\\]\\\\)\\\\s]*(?:;|$)))|(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.set.end.trailing.clojure\" }, \"2\": { \"name\": \"punctuation.section.set.end.clojure\" } }, \"name\": \"meta.set.clojure\", \"patterns\": [{ \"include\": \"$self\" }] }, \"sexp\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.begin.clojure\" } }, \"end\": \"(\\\\))$|(\\\\)(?=[\\\\}\\\\]\\\\)\\\\s]*(?:;|$)))|(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.end.trailing.clojure\" }, \"2\": { \"name\": \"punctuation.section.expression.end.trailing.clojure\" }, \"3\": { \"name\": \"punctuation.section.expression.end.clojure\" } }, \"name\": \"meta.expression.clojure\", \"patterns\": [{ \"begin\": \"(?<=\\\\()(ns|declare|def[\\\\w\\\\d._:+=><!?*-]*|[\\\\w._:+=><!?*-][\\\\w\\\\d._:+=><!?*-]*/def[\\\\w\\\\d._:+=><!?*-]*)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.clojure\" } }, \"end\": \"(?=\\\\))\", \"name\": \"meta.definition.global.clojure\", \"patterns\": [{ \"include\": \"#metadata\" }, { \"include\": \"#dynamic-variables\" }, { \"match\": \"([\\\\p{L}\\\\.\\\\-\\\\_\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\*][\\\\w\\\\.\\\\-\\\\_\\\\:\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\*\\\\d]*)\", \"name\": \"entity.global.clojure\" }, { \"include\": \"$self\" }] }, { \"include\": \"#keyfn\" }, { \"include\": \"#constants\" }, { \"include\": \"#vector\" }, { \"include\": \"#map\" }, { \"include\": \"#set\" }, { \"include\": \"#sexp\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.function.clojure\" } }, \"match\": \"(?<=\\\\()(.+?)(?=\\\\s|\\\\))\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"include\": \"$self\" }] }, \"shebang-comment\": { \"begin\": \"^(#!)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.comment.shebang.clojure\" } }, \"end\": \"$\", \"name\": \"comment.line.shebang.clojure\" }, \"string\": { \"begin\": '(?<!\\\\\\\\)(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.clojure\" } }, \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.clojure\" } }, \"name\": \"string.quoted.double.clojure\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.clojure\" }] }, \"symbol\": { \"patterns\": [{ \"match\": \"([\\\\p{L}\\\\.\\\\-\\\\_\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\*][\\\\w\\\\.\\\\-\\\\_\\\\:\\\\+\\\\=\\\\>\\\\<\\\\!\\\\?\\\\*\\\\d]*)\", \"name\": \"meta.symbol.clojure\" }] }, \"var\": { \"match\": \"(?<=(\\\\s|\\\\(|\\\\[|\\\\{)\\\\#)'[\\\\w\\\\.\\\\-\\\\_\\\\:\\\\+\\\\=\\\\>\\\\<\\\\/\\\\!\\\\?\\\\*]+(?=(\\\\s|\\\\)|\\\\]|\\\\}))\", \"name\": \"meta.var.clojure\" }, \"vector\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.vector.begin.clojure\" } }, \"end\": \"(\\\\](?=[\\\\}\\\\]\\\\)\\\\s]*(?:;|$)))|(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.vector.end.trailing.clojure\" }, \"2\": { \"name\": \"punctuation.section.vector.end.clojure\" } }, \"name\": \"meta.vector.clojure\", \"patterns\": [{ \"include\": \"$self\" }] } }, \"scopeName\": \"source.clojure\", \"aliases\": [\"clj\"] });\nvar clojure = [\n  lang\n];\n\nexport { clojure as default };\n","const lang = Object.freeze({ \"displayName\": \"CSV\", \"fileTypes\": [\"csv\"], \"name\": \"csv\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"rainbow1\" }, \"2\": { \"name\": \"keyword.rainbow2\" }, \"3\": { \"name\": \"entity.name.function.rainbow3\" }, \"4\": { \"name\": \"comment.rainbow4\" }, \"5\": { \"name\": \"string.rainbow5\" }, \"6\": { \"name\": \"variable.parameter.rainbow6\" }, \"7\": { \"name\": \"constant.numeric.rainbow7\" }, \"8\": { \"name\": \"entity.name.type.rainbow8\" }, \"9\": { \"name\": \"markup.bold.rainbow9\" }, \"10\": { \"name\": \"invalid.rainbow10\" } }, \"match\": '((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?((?: *\"(?:[^\"]*\"\")*[^\"]*\" *(?:,|$))|(?:[^,]*(?:,|$)))?', \"name\": \"rainbowgroup\" }], \"scopeName\": \"text.csv\" });\nvar csv = [\n  lang\n];\n\nexport { csv as default };\n","const lang = Object.freeze({ \"displayName\": \"Diff\", \"name\": \"diff\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.separator.diff\" } }, \"match\": \"^((\\\\*{15})|(={67})|(-{3}))$\\\\n?\", \"name\": \"meta.separator.diff\" }, { \"match\": \"^\\\\d+(,\\\\d+)*(a|d|c)\\\\d+(,\\\\d+)*$\\\\n?\", \"name\": \"meta.diff.range.normal\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.range.diff\" }, \"2\": { \"name\": \"meta.toc-list.line-number.diff\" }, \"3\": { \"name\": \"punctuation.definition.range.diff\" } }, \"match\": \"^(@@)\\\\s*(.+?)\\\\s*(@@)($\\\\n?)?\", \"name\": \"meta.diff.range.unified\" }, { \"captures\": { \"3\": { \"name\": \"punctuation.definition.range.diff\" }, \"4\": { \"name\": \"punctuation.definition.range.diff\" }, \"6\": { \"name\": \"punctuation.definition.range.diff\" }, \"7\": { \"name\": \"punctuation.definition.range.diff\" } }, \"match\": \"^(((\\\\-{3}) .+ (\\\\-{4}))|((\\\\*{3}) .+ (\\\\*{4})))$\\\\n?\", \"name\": \"meta.diff.range.context\" }, { \"match\": \"^diff --git a/.*$\\\\n?\", \"name\": \"meta.diff.header.git\" }, { \"match\": \"^diff (-|\\\\S+\\\\s+\\\\S+).*$\\\\n?\", \"name\": \"meta.diff.header.command\" }, { \"captures\": { \"4\": { \"name\": \"punctuation.definition.from-file.diff\" }, \"6\": { \"name\": \"punctuation.definition.from-file.diff\" }, \"7\": { \"name\": \"punctuation.definition.from-file.diff\" } }, \"match\": \"(^(((-{3}) .+)|((\\\\*{3}) .+))$\\\\n?|^(={4}) .+(?= - ))\", \"name\": \"meta.diff.header.from-file\" }, { \"captures\": { \"2\": { \"name\": \"punctuation.definition.to-file.diff\" }, \"3\": { \"name\": \"punctuation.definition.to-file.diff\" }, \"4\": { \"name\": \"punctuation.definition.to-file.diff\" } }, \"match\": \"(^(\\\\+{3}) .+$\\\\n?| (-) .* (={4})$\\\\n?)\", \"name\": \"meta.diff.header.to-file\" }, { \"captures\": { \"3\": { \"name\": \"punctuation.definition.inserted.diff\" }, \"6\": { \"name\": \"punctuation.definition.inserted.diff\" } }, \"match\": \"^(((>)( .*)?)|((\\\\+).*))$\\\\n?\", \"name\": \"markup.inserted.diff\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.changed.diff\" } }, \"match\": \"^(!).*$\\\\n?\", \"name\": \"markup.changed.diff\" }, { \"captures\": { \"3\": { \"name\": \"punctuation.definition.deleted.diff\" }, \"6\": { \"name\": \"punctuation.definition.deleted.diff\" } }, \"match\": \"^(((<)( .*)?)|((-).*))$\\\\n?\", \"name\": \"markup.deleted.diff\" }, { \"begin\": \"^(#)\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.diff\" } }, \"comment\": 'Git produces unified diffs with embedded comments\"', \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.diff\" }, { \"match\": \"^index [0-9a-f]{7,40}\\\\.\\\\.[0-9a-f]{7,40}.*$\\\\n?\", \"name\": \"meta.diff.index.git\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.key-value.diff\" }, \"2\": { \"name\": \"meta.toc-list.file-name.diff\" } }, \"match\": \"^Index(:) (.+)$\\\\n?\", \"name\": \"meta.diff.index\" }, { \"match\": \"^Only in .*: .*$\\\\n?\", \"name\": \"meta.diff.only-in\" }], \"scopeName\": \"source.diff\" });\nvar diff = [\n  lang\n];\n\nexport { diff as default };\n","const lang = Object.freeze({ \"displayName\": \"Dockerfile\", \"name\": \"docker\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.special-method.dockerfile\" }, \"2\": { \"name\": \"keyword.other.special-method.dockerfile\" } }, \"match\": \"^\\\\s*\\\\b(?i:(FROM))\\\\b.*?\\\\b(?i:(AS))\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.dockerfile\" }, \"2\": { \"name\": \"keyword.other.special-method.dockerfile\" } }, \"match\": \"^\\\\s*(?i:(ONBUILD)\\\\s+)?(?i:(ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR))\\\\s\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.dockerfile\" }, \"2\": { \"name\": \"keyword.other.special-method.dockerfile\" } }, \"match\": \"^\\\\s*(?i:(ONBUILD)\\\\s+)?(?i:(CMD|ENTRYPOINT))\\\\s\" }, { \"begin\": '\"', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.dockerfile\" } }, \"end\": '\"', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.dockerfile\" } }, \"name\": \"string.quoted.double.dockerfile\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escaped.dockerfile\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.dockerfile\" } }, \"end\": \"'\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.dockerfile\" } }, \"name\": \"string.quoted.single.dockerfile\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escaped.dockerfile\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.dockerfile\" }, \"2\": { \"name\": \"comment.line.number-sign.dockerfile\" }, \"3\": { \"name\": \"punctuation.definition.comment.dockerfile\" } }, \"comment\": \"comment.line\", \"match\": \"^(\\\\s*)((#).*$\\\\n?)\" }], \"scopeName\": \"source.dockerfile\", \"aliases\": [\"dockerfile\"] });\nvar docker = [\n  lang\n];\n\nexport { docker as default };\n","import html from './html.mjs';\nimport './javascript.mjs';\nimport './css.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Elixir\", \"fileTypes\": [\"ex\", \"exs\"], \"firstLineMatch\": \"^#!/.*\\\\belixir\", \"foldingStartMarker\": \"(after|else|catch|rescue|\\\\-\\\\>|\\\\{|\\\\[|do)\\\\s*$\", \"foldingStopMarker\": \"^\\\\s*((\\\\}|\\\\]|after|else|catch|rescue)\\\\s*$|end\\\\b)\", \"name\": \"elixir\", \"patterns\": [{ \"begin\": \"\\\\b(fn)\\\\b(?!.*->)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.elixir\" } }, \"end\": \"$\", \"patterns\": [{ \"include\": \"#core_syntax\" }] }, { \"captures\": { \"1\": { \"name\": \"entity.name.type.class.elixir\" }, \"2\": { \"name\": \"punctuation.separator.method.elixir\" }, \"3\": { \"name\": \"entity.name.function.elixir\" } }, \"match\": \"([A-Z]\\\\w+)\\\\s*(\\\\.)\\\\s*([a-z_]\\\\w*[!?]?)\" }, { \"captures\": { \"1\": { \"name\": \"constant.other.symbol.elixir\" }, \"2\": { \"name\": \"punctuation.separator.method.elixir\" }, \"3\": { \"name\": \"entity.name.function.elixir\" } }, \"match\": \"(\\\\:\\\\w+)\\\\s*(\\\\.)\\\\s*([_]?\\\\w*[!?]?)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" }, \"2\": { \"name\": \"entity.name.function.elixir\" } }, \"match\": \"(\\\\|\\\\>)\\\\s*([a-z_]\\\\w*[!?]?)\" }, { \"match\": \"\\\\b[a-z_]\\\\w*[!?]?(?=\\\\s*\\\\.?\\\\s*\\\\()\", \"name\": \"entity.name.function.elixir\" }, { \"begin\": \"\\\\b(fn)\\\\b(?=.*->)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.elixir\" } }, \"end\": \"(?>(->)|(when)|(\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" }, \"2\": { \"name\": \"keyword.control.elixir\" }, \"3\": { \"name\": \"punctuation.section.function.elixir\" } }, \"patterns\": [{ \"include\": \"#core_syntax\" }] }, { \"include\": \"#core_syntax\" }, { \"begin\": `^(?=.*->)((?![^\"']*(\"|')[^\"']*->)|(?=.*->[^\"']*(\"|')[^\"']*->))((?!.*\\\\([^\\\\)]*->)|(?=[^\\\\(\\\\)]*->)|(?=\\\\s*\\\\(.*\\\\).*->))((?!.*\\\\b(fn)\\\\b)|(?=.*->.*\\\\bfn\\\\b))`, \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.elixir\" } }, \"end\": \"(?>(->)|(when)|(\\\\)))\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" }, \"2\": { \"name\": \"keyword.control.elixir\" }, \"3\": { \"name\": \"punctuation.section.function.elixir\" } }, \"patterns\": [{ \"include\": \"#core_syntax\" }] }], \"repository\": { \"core_syntax\": { \"patterns\": [{ \"begin\": \"^\\\\s*(defmodule)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" } }, \"end\": \"\\\\b(do)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" } }, \"name\": \"meta.module.elixir\", \"patterns\": [{ \"match\": \"\\\\b[A-Z]\\\\w*(?=\\\\.)\", \"name\": \"entity.other.inherited-class.elixir\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.class.elixir\" }] }, { \"begin\": \"^\\\\s*(defprotocol)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"end\": \"\\\\b(do)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"name\": \"meta.protocol_declaration.elixir\", \"patterns\": [{ \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.protocol.elixir\" }] }, { \"begin\": \"^\\\\s*(defimpl)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"end\": \"\\\\b(do)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.protocol.elixir\" } }, \"name\": \"meta.protocol_implementation.elixir\", \"patterns\": [{ \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.protocol.elixir\" }] }, { \"begin\": \"^\\\\s*(def|defmacro|defdelegate|defguard)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))((\\\\()|\\\\s*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" }, \"2\": { \"name\": \"entity.name.function.public.elixir\" }, \"4\": { \"name\": \"punctuation.section.function.elixir\" } }, \"end\": \"(\\\\bdo:)|(\\\\bdo\\\\b)|(?=\\\\s+(def|defn|defmacro|defdelegate|defguard)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"constant.other.keywords.elixir\" }, \"2\": { \"name\": \"keyword.control.module.elixir\" } }, \"name\": \"meta.function.public.elixir\", \"patterns\": [{ \"include\": \"$self\" }, { \"begin\": \"\\\\s(\\\\\\\\\\\\\\\\)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" } }, \"end\": \",|\\\\)|$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b(is_atom|is_binary|is_bitstring|is_boolean|is_float|is_function|is_integer|is_list|is_map|is_nil|is_number|is_pid|is_port|is_record|is_reference|is_tuple|is_exception|abs|bit_size|byte_size|div|elem|hd|length|map_size|node|rem|round|tl|trunc|tuple_size)\\\\b\", \"name\": \"keyword.control.elixir\" }] }, { \"begin\": \"^\\\\s*(defp|defnp|defmacrop|defguardp)\\\\s+((?>[a-zA-Z_]\\\\w*(?>\\\\.|::))?(?>[a-zA-Z_]\\\\w*(?>[?!]|=(?!>))?|===?|>[>=]?|<=>|<[<=]?|[%&`/\\\\|]|\\\\*\\\\*?|=?~|[-+]@?|\\\\[\\\\]=?))((\\\\()|\\\\s*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.module.elixir\" }, \"2\": { \"name\": \"entity.name.function.private.elixir\" }, \"4\": { \"name\": \"punctuation.section.function.elixir\" } }, \"end\": \"(\\\\bdo:)|(\\\\bdo\\\\b)|(?=\\\\s+(defp|defmacrop|defguardp)\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"constant.other.keywords.elixir\" }, \"2\": { \"name\": \"keyword.control.module.elixir\" } }, \"name\": \"meta.function.private.elixir\", \"patterns\": [{ \"include\": \"$self\" }, { \"begin\": \"\\\\s(\\\\\\\\\\\\\\\\)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.other.elixir\" } }, \"end\": \",|\\\\)|$\", \"patterns\": [{ \"include\": \"$self\" }] }, { \"match\": \"\\\\b(is_atom|is_binary|is_bitstring|is_boolean|is_float|is_function|is_integer|is_list|is_map|is_nil|is_number|is_pid|is_port|is_record|is_reference|is_tuple|is_exception|abs|bit_size|byte_size|div|elem|hd|length|map_size|node|rem|round|tl|trunc|tuple_size)\\\\b\", \"name\": \"keyword.control.elixir\" }] }, { \"begin\": '\\\\s*~L\"\"\"', \"comment\": \"Leex Sigil\", \"end\": '\\\\s*\"\"\"', \"name\": \"sigil.leex\", \"patterns\": [{ \"include\": \"text.elixir\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": '\\\\s*~H\"\"\"', \"comment\": \"HEEx Sigil\", \"end\": '\\\\s*\"\"\"', \"name\": \"sigil.heex\", \"patterns\": [{ \"include\": \"text.elixir\" }, { \"include\": \"text.html.basic\" }] }, { \"begin\": '@(module|type)?doc (~[a-z])?\"\"\"', \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": '\\\\s*\"\"\"', \"name\": \"comment.block.documentation.heredoc\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '@(module|type)?doc ~[A-Z]\"\"\"', \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": '\\\\s*\"\"\"', \"name\": \"comment.block.documentation.heredoc\" }, { \"begin\": \"@(module|type)?doc (~[a-z])?'''\", \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": \"\\\\s*'''\", \"name\": \"comment.block.documentation.heredoc\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"@(module|type)?doc ~[A-Z]'''\", \"comment\": \"@doc with heredocs is treated as documentation\", \"end\": \"\\\\s*'''\", \"name\": \"comment.block.documentation.heredoc\" }, { \"comment\": \"@doc false is treated as documentation\", \"match\": \"@(module|type)?doc false\", \"name\": \"comment.block.documentation.false\" }, { \"begin\": '@(module|type)?doc \"', \"comment\": \"@doc with string is treated as documentation\", \"end\": '\"', \"name\": \"comment.block.documentation.string\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"match\": \"(?<!\\\\.)\\\\b(do|end|case|bc|lc|for|if|cond|unless|try|receive|fn|defmodule|defp?|defprotocol|defimpl|defrecord|defstruct|defnp?|defmacrop?|defguardp?|defdelegate|defexception|defoverridable|exit|after|rescue|catch|else|raise|reraise|throw|import|require|alias|use|quote|unquote|super|with)\\\\b(?![?!:])\", \"name\": \"keyword.control.elixir\" }, { \"comment\": \" as above, just doesn't need a 'end' and does a logic operation\", \"match\": \"(?<!\\\\.)\\\\b(and|not|or|when|xor|in)\\\\b\", \"name\": \"keyword.operator.elixir\" }, { \"match\": \"\\\\b[A-Z]\\\\w*\\\\b\", \"name\": \"entity.name.type.class.elixir\" }, { \"match\": \"\\\\b(nil|true|false)\\\\b(?![?!])\", \"name\": \"constant.language.elixir\" }, { \"match\": \"\\\\b(__(CALLER|ENV|MODULE|DIR|STACKTRACE)__)\\\\b(?![?!])\", \"name\": \"variable.language.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.elixir\" } }, \"match\": \"(@)[a-zA-Z_]\\\\w*\", \"name\": \"variable.other.readwrite.module.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.elixir\" } }, \"match\": \"(&)\\\\d+\", \"name\": \"variable.other.anonymous.elixir\" }, { \"match\": \"&(?![&])\", \"name\": \"variable.other.anonymous.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.elixir\" } }, \"match\": \"\\\\^[a-z_]\\\\w*\", \"name\": \"variable.other.capture.elixir\" }, { \"match\": \"\\\\b0x[0-9A-Fa-f](?>_?[0-9A-Fa-f])*\\\\b\", \"name\": \"constant.numeric.hex.elixir\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*(\\\\.(?![^[:space:][:digit:]])(?>_?\\\\d)+)([eE][-+]?\\\\d(?>_?\\\\d)*)?\\\\b\", \"name\": \"constant.numeric.float.elixir\" }, { \"match\": \"\\\\b\\\\d(?>_?\\\\d)*\\\\b\", \"name\": \"constant.numeric.integer.elixir\" }, { \"match\": \"\\\\b0b[01](?>_?[01])*\\\\b\", \"name\": \"constant.numeric.binary.elixir\" }, { \"match\": \"\\\\b0o[0-7](?>_?[0-7])*\\\\b\", \"name\": \"constant.numeric.octal.elixir\" }, { \"begin\": \":'\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"end\": \"'\", \"name\": \"constant.other.symbol.single-quoted.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": ':\"', \"captures\": { \"0\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"end\": '\"', \"name\": \"constant.other.symbol.double-quoted.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"(?>''')\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Single-quoted heredocs\", \"end\": \"^\\\\s*'''\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.single.heredoc.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"single quoted string (allows for interpolation)\", \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.single.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '(?>\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Double-quoted heredocs\", \"end\": '^\\\\s*\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.double.heredoc.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"double quoted string (allows for interpolation)\", \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.double.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '~[a-z](?>\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Double-quoted heredocs sigils\", \"end\": '^\\\\s*\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.heredoc.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\}[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\][a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\>[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\)[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": \"~[a-z]([^\\\\w])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (allow for interpolation)\", \"end\": \"\\\\1[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.elixir\", \"patterns\": [{ \"include\": \"#interpolated_elixir\" }, { \"include\": \"#escaped_char\" }] }, { \"begin\": '~[A-Z](?>\"\"\")', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"Double-quoted heredocs sigils\", \"end\": '^\\\\s*\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.heredoc.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\}[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\][a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\>[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\)[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"begin\": \"~[A-Z]([^\\\\w])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elixir\" } }, \"comment\": \"sigil (without interpolation)\", \"end\": \"\\\\1[a-z]*\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elixir\" } }, \"name\": \"string.quoted.other.sigil.literal.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"comment\": \"symbols\", \"match\": \"(?<!:)(:)(?>[a-zA-Z_][\\\\w@]*(?>[?!]|=(?![>=]))?|\\\\<\\\\>|===?|!==?|<<>>|<<<|>>>|~~~|::|<\\\\-|\\\\|>|=>|=~|=|/|\\\\\\\\\\\\\\\\|\\\\*\\\\*?|\\\\.\\\\.?\\\\.?|\\\\.\\\\.//|>=?|<=?|&&?&?|\\\\+\\\\+?|\\\\-\\\\-?|\\\\|\\\\|?\\\\|?|\\\\!|@|\\\\%?\\\\{\\\\}|%|\\\\[\\\\]|\\\\^(\\\\^\\\\^)?)\", \"name\": \"constant.other.symbol.elixir\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.constant.elixir\" } }, \"comment\": \"symbols\", \"match\": \"(?>[a-zA-Z_][\\\\w@]*(?>[?!])?)(:)(?!:)\", \"name\": \"constant.other.keywords.elixir\" }, { \"begin\": \"(^[ \\\\t]+)?(?=##)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.elixir\" } }, \"end\": \"(?!#)\", \"patterns\": [{ \"begin\": \"##\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.elixir\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.section.elixir\" }] }, { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.elixir\" } }, \"end\": \"(?!#)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.elixir\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.elixir\" }] }, { \"match\": \"\\\\b_([^_][\\\\w]+[?!]?)\", \"name\": \"comment.unused.elixir\" }, { \"match\": \"\\\\b_\\\\b\", \"name\": \"comment.wildcard.elixir\" }, { \"comment\": '\\n\t\t\tmatches questionmark-letters.\\n\\n\t\t\texamples (1st alternation = hex):\\n\t\t\t?\\\\x1     ?\\\\x61\\n\\n\t\t\texamples (2rd alternation = escaped):\\n\t\t\t?\\\\n      ?\\\\b\\n\\n\t\t\texamples (3rd alternation = normal):\\n\t\t\t?a       ?A       ?0\\n\t\t\t?*       ?\"       ?(\\n\t\t\t?.       ?#\\n\\n\t\t\tthe negative lookbehind prevents against matching\\n\t\t\tp(42.tainted?)\\n\t\t\t', \"match\": \"(?<!\\\\w)\\\\?(\\\\\\\\(x[0-9A-Fa-f]{1,2}(?![0-9A-Fa-f])\\\\b|[^xMC])|[^\\\\s\\\\\\\\])\", \"name\": \"constant.numeric.elixir\" }, { \"match\": \"\\\\+\\\\+|\\\\-\\\\-|<\\\\|>\", \"name\": \"keyword.operator.concatenation.elixir\" }, { \"match\": \"\\\\|\\\\>|<~>|<>|<<<|>>>|~>>|<<~|~>|<~|<\\\\|>\", \"name\": \"keyword.operator.sigils_1.elixir\" }, { \"match\": \"&&&|&&\", \"name\": \"keyword.operator.sigils_2.elixir\" }, { \"match\": \"<\\\\-|\\\\\\\\\\\\\\\\\", \"name\": \"keyword.operator.sigils_3.elixir\" }, { \"match\": \"===?|!==?|<=?|>=?\", \"name\": \"keyword.operator.comparison.elixir\" }, { \"match\": \"(\\\\|\\\\|\\\\||&&&|\\\\^\\\\^\\\\^|<<<|>>>|~~~)\", \"name\": \"keyword.operator.bitwise.elixir\" }, { \"match\": \"(?<=[ \\\\t])!+|\\\\bnot\\\\b|&&|\\\\band\\\\b|\\\\|\\\\||\\\\bor\\\\b|\\\\bxor\\\\b\", \"name\": \"keyword.operator.logical.elixir\" }, { \"match\": \"(\\\\*|\\\\+|\\\\-|/)\", \"name\": \"keyword.operator.arithmetic.elixir\" }, { \"match\": \"\\\\||\\\\+\\\\+|\\\\-\\\\-|\\\\*\\\\*|\\\\\\\\\\\\\\\\|\\\\<\\\\-|\\\\<\\\\>|\\\\<\\\\<|\\\\>\\\\>|\\\\:\\\\:|\\\\.\\\\.|//|\\\\|>|~|=>|&\", \"name\": \"keyword.operator.other.elixir\" }, { \"match\": \"=\", \"name\": \"keyword.operator.assignment.elixir\" }, { \"match\": \":\", \"name\": \"punctuation.separator.other.elixir\" }, { \"match\": \"\\\\;\", \"name\": \"punctuation.separator.statement.elixir\" }, { \"match\": \",\", \"name\": \"punctuation.separator.object.elixir\" }, { \"match\": \"\\\\.\", \"name\": \"punctuation.separator.method.elixir\" }, { \"match\": \"\\\\{|\\\\}\", \"name\": \"punctuation.section.scope.elixir\" }, { \"match\": \"\\\\[|\\\\]\", \"name\": \"punctuation.section.array.elixir\" }, { \"match\": \"\\\\(|\\\\)\", \"name\": \"punctuation.section.function.elixir\" }] }, \"escaped_char\": { \"match\": \"\\\\\\\\(x[\\\\da-fA-F]{1,2}|.)\", \"name\": \"constant.character.escaped.elixir\" }, \"interpolated_elixir\": { \"begin\": \"#\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.elixir\" } }, \"contentName\": \"source.elixir\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.elixir\" } }, \"name\": \"meta.embedded.line.elixir\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }, { \"include\": \"$self\" }] }, \"nest_curly_and_self\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"captures\": { \"0\": { \"name\": \"punctuation.section.scope.elixir\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#nest_curly_and_self\" }] }, { \"include\": \"$self\" }] } }, \"scopeName\": \"source.elixir\", \"embeddedLangs\": [\"html\"] });\nvar elixir = [\n  ...html,\n  lang\n];\n\nexport { elixir as default };\n","import glsl from './glsl.mjs';\nimport './c.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Elm\", \"fileTypes\": [\"elm\"], \"name\": \"elm\", \"patterns\": [{ \"include\": \"#import\" }, { \"include\": \"#module\" }, { \"include\": \"#debug\" }, { \"include\": \"#comments\" }, { \"match\": \"\\\\b(_)\\\\b\", \"name\": \"keyword.unused.elm\" }, { \"include\": \"#type-signature\" }, { \"include\": \"#type-declaration\" }, { \"include\": \"#type-alias-declaration\" }, { \"include\": \"#string-triple\" }, { \"include\": \"#string-quote\" }, { \"include\": \"#char\" }, { \"comment\": \"Floats are always decimal\", \"match\": \"\\\\b([0-9]+\\\\.[0-9]+([eE][+-]?[0-9]+)?|[0-9]+[eE][+-]?[0-9]+)\\\\b\", \"name\": \"constant.numeric.float.elm\" }, { \"match\": \"\\\\b([0-9]+)\\\\b\", \"name\": \"constant.numeric.elm\" }, { \"match\": \"\\\\b(0x[0-9a-fA-F]+)\\\\b\", \"name\": \"constant.numeric.elm\" }, { \"include\": \"#glsl\" }, { \"include\": \"#record-prefix\" }, { \"include\": \"#module-prefix\" }, { \"include\": \"#constructor\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.bracket.elm\" }, \"2\": { \"name\": \"record.name.elm\" }, \"3\": { \"name\": \"keyword.pipe.elm\" }, \"4\": { \"name\": \"entity.name.record.field.elm\" } }, \"match\": \"(\\\\{)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\|)\\\\s+([a-z][a-zA-Z0-9_]*)\", \"name\": \"meta.record.field.update.elm\" }, { \"captures\": { \"1\": { \"name\": \"keyword.pipe.elm\" }, \"2\": { \"name\": \"entity.name.record.field.elm\" }, \"3\": { \"name\": \"keyword.operator.assignment.elm\" } }, \"match\": \"(\\\\|)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\=)\", \"name\": \"meta.record.field.update.elm\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.bracket.elm\" }, \"2\": { \"name\": \"record.name.elm\" } }, \"match\": \"(\\\\{)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+$\", \"name\": \"meta.record.field.update.elm\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.bracket.elm\" }, \"2\": { \"name\": \"entity.name.record.field.elm\" }, \"3\": { \"name\": \"keyword.operator.assignment.elm\" } }, \"match\": \"(\\\\{)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\=)\", \"name\": \"meta.record.field.elm\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.comma.elm\" }, \"2\": { \"name\": \"entity.name.record.field.elm\" }, \"3\": { \"name\": \"keyword.operator.assignment.elm\" } }, \"match\": \"(,)\\\\s+([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\=)\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"(\\\\}|\\\\{)\", \"name\": \"punctuation.bracket.elm\" }, { \"include\": \"#unit\" }, { \"include\": \"#comma\" }, { \"include\": \"#parens\" }, { \"match\": \"(->)\", \"name\": \"keyword.operator.arrow.elm\" }, { \"include\": \"#infix_op\" }, { \"match\": \"(\\\\=|\\\\:|\\\\||\\\\\\\\)\", \"name\": \"keyword.other.elm\" }, { \"match\": \"\\\\b(type|as|port|exposing|alias|infixl|infixr|infix)\\\\s+\", \"name\": \"keyword.other.elm\" }, { \"match\": \"\\\\b(if|then|else|case|of|let|in)\\\\s+\", \"name\": \"keyword.control.elm\" }, { \"include\": \"#record-accessor\" }, { \"include\": \"#top_level_value\" }, { \"include\": \"#value\" }, { \"include\": \"#period\" }, { \"include\": \"#square_brackets\" }], \"repository\": { \"block_comment\": { \"applyEndPatternLast\": 1, \"begin\": \"\\\\{-(?!#)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.elm\" } }, \"end\": \"-\\\\}\", \"name\": \"comment.block.elm\", \"patterns\": [{ \"include\": \"#block_comment\" }] }, \"char\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.char.begin.elm\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.char.end.elm\" } }, \"name\": \"string.quoted.single.elm\", \"patterns\": [{ \"match\": `\\\\\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"'\\\\&]|x[0-9a-fA-F]{1,5})`, \"name\": \"constant.character.escape.elm\" }, { \"match\": \"\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]\", \"name\": \"constant.character.escape.control.elm\" }] }, \"comma\": { \"match\": \"(,)\", \"name\": \"punctuation.separator.comma.elm\" }, \"comments\": { \"patterns\": [{ \"begin\": \"--\", \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.elm\" } }, \"end\": \"$\", \"name\": \"comment.line.double-dash.elm\" }, { \"include\": \"#block_comment\" }] }, \"constructor\": { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"constant.type-constructor.elm\" }, \"debug\": { \"match\": \"\\\\b(Debug)\\\\b\", \"name\": \"invalid.illegal.debug.elm\" }, \"glsl\": { \"begin\": \"(\\\\[)(glsl)(\\\\|)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.glsl.bracket.elm\" }, \"2\": { \"name\": \"entity.glsl.name.elm\" }, \"3\": { \"name\": \"entity.glsl.bracket.elm\" } }, \"end\": \"(\\\\|\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"entity.glsl.bracket.elm\" } }, \"name\": \"meta.embedded.block.glsl\", \"patterns\": [{ \"include\": \"source.glsl\" }] }, \"import\": { \"begin\": \"^\\\\b(import)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.import.elm\" } }, \"end\": \"\\\\n(?!\\\\s)\", \"name\": \"meta.import.elm\", \"patterns\": [{ \"match\": \"(as|exposing)\", \"name\": \"keyword.control.elm\" }, { \"include\": \"#module_chunk\" }, { \"include\": \"#period\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#module-exports\" }] }, \"infix_op\": { \"match\": \"(</>|<\\\\?>|<\\\\||<=|\\\\|\\\\||&&|>=|\\\\|>|\\\\|=|\\\\|\\\\.|\\\\+\\\\+|::|/=|==|//|>>|<<|<|>|\\\\^|\\\\+|-|/|\\\\*)\", \"name\": \"keyword.operator.elm\" }, \"module\": { \"begin\": \"^\\\\b((port |effect )?module)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.elm\" } }, \"end\": \"\\\\n(?!\\\\s)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.other.elm\" } }, \"name\": \"meta.declaration.module.elm\", \"patterns\": [{ \"include\": \"#module_chunk\" }, { \"include\": \"#period\" }, { \"match\": \"(exposing)\", \"name\": \"keyword.other.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#module-exports\" }] }, \"module-exports\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.parens.module-export.elm\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.parens.module-export.elm\" } }, \"name\": \"meta.declaration.exports.elm\", \"patterns\": [{ \"match\": \"\\\\b[a-z][a-zA-Z_'0-9]*\", \"name\": \"entity.name.function.elm\" }, { \"match\": \"\\\\b[A-Z][A-Za-z_'0-9]*\", \"name\": \"storage.type.elm\" }, { \"match\": \",\", \"name\": \"punctuation.separator.comma.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#comma\" }, { \"match\": \"\\\\(\\\\.\\\\.\\\\)\", \"name\": \"punctuation.parens.ellipses.elm\" }, { \"match\": \"\\\\.\\\\.\", \"name\": \"punctuation.parens.ellipses.elm\" }, { \"include\": \"#infix_op\" }, { \"comment\": \"So named because I don't know what to call this.\", \"match\": \"\\\\(.*?\\\\)\", \"name\": \"meta.other.unknown.elm\" }] }, \"module-prefix\": { \"captures\": { \"1\": { \"name\": \"support.module.elm\" }, \"2\": { \"name\": \"keyword.other.period.elm\" } }, \"match\": \"([A-Z][a-zA-Z0-9_]*)(\\\\.)\", \"name\": \"meta.module.name.elm\" }, \"module_chunk\": { \"match\": \"[A-Z][a-zA-Z0-9_]*\", \"name\": \"support.module.elm\" }, \"parens\": { \"match\": \"(\\\\(|\\\\))\", \"name\": \"punctuation.parens.elm\" }, \"period\": { \"match\": \"[.]\", \"name\": \"keyword.other.period.elm\" }, \"record-accessor\": { \"captures\": { \"1\": { \"name\": \"keyword.other.period.elm\" }, \"2\": { \"name\": \"entity.name.record.field.accessor.elm\" } }, \"match\": \"(\\\\.)([a-z][a-zA-Z0-9_]*)\", \"name\": \"meta.record.accessor\" }, \"record-prefix\": { \"captures\": { \"1\": { \"name\": \"record.name.elm\" }, \"2\": { \"name\": \"keyword.other.period.elm\" }, \"3\": { \"name\": \"entity.name.record.field.accessor.elm\" } }, \"match\": \"([a-z][a-zA-Z0-9_]*)(\\\\.)([a-z][a-zA-Z0-9_]*)\", \"name\": \"record.accessor.elm\" }, \"square_brackets\": { \"match\": \"[\\\\[\\\\]]\", \"name\": \"punctuation.definition.list.elm\" }, \"string-quote\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elm\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elm\" } }, \"name\": \"string.quoted.double.elm\", \"patterns\": [{ \"match\": `\\\\\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"'\\\\&]|x[0-9a-fA-F]{1,5})`, \"name\": \"constant.character.escape.elm\" }, { \"match\": \"\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]\", \"name\": \"constant.character.escape.control.elm\" }] }, \"string-triple\": { \"begin\": '\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.elm\" } }, \"end\": '\"\"\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.elm\" } }, \"name\": \"string.quoted.triple.elm\", \"patterns\": [{ \"match\": `\\\\\\\\(NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|[abfnrtv\\\\\\\\\\\\\"'\\\\&]|x[0-9a-fA-F]{1,5})`, \"name\": \"constant.character.escape.elm\" }, { \"match\": \"\\\\^[A-Z@\\\\[\\\\]\\\\\\\\\\\\^_]\", \"name\": \"constant.character.escape.control.elm\" }] }, \"top_level_value\": { \"match\": \"^[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"entity.name.function.top_level.elm\" }, \"type-alias-declaration\": { \"begin\": \"^(type\\\\s+)(alias\\\\s+)([A-Z][a-zA-Z0-9_']*)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.type.elm\" }, \"2\": { \"name\": \"keyword.type-alias.elm\" }, \"3\": { \"name\": \"storage.type.elm\" } }, \"end\": \"^(?=\\\\S)\", \"name\": \"meta.function.type-declaration.elm\", \"patterns\": [{ \"match\": \"\\\\n\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"type-declaration\": { \"begin\": \"^(type\\\\s+)([A-Z][a-zA-Z0-9_']*)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.type.elm\" }, \"2\": { \"name\": \"storage.type.elm\" } }, \"end\": \"^(?=\\\\S)\", \"name\": \"meta.function.type-declaration.elm\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.type-constructor.elm\" } }, \"match\": \"^\\\\s*([A-Z][a-zA-Z0-9_]*)\\\\b\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.assignment.elm\" }, \"2\": { \"name\": \"constant.type-constructor.elm\" } }, \"match\": \"(\\\\=|\\\\|)\\\\s+([A-Z][a-zA-Z0-9_]*)\\\\b\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.elm\" }, { \"match\": \"\\\\-\\\\>\", \"name\": \"keyword.operator.arrow.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"type-record\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.braces.begin\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.braces.end\" } }, \"name\": \"meta.function.type-record.elm\", \"patterns\": [{ \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"match\": \"->\", \"name\": \"keyword.operator.arrow.elm\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.record.field.elm\" }, \"2\": { \"name\": \"keyword.other.elm\" } }, \"match\": \"([a-z][a-zA-Z0-9_]*)\\\\s+(\\\\:)\", \"name\": \"meta.record.field.elm\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.comma.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"type-signature\": { \"begin\": \"^(port\\\\s+)?([a-z_][a-zA-Z0-9_']*)\\\\s+(\\\\:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.port.elm\" }, \"2\": { \"name\": \"entity.name.function.elm\" }, \"3\": { \"name\": \"keyword.other.colon.elm\" } }, \"end\": \"((^(?=[a-z]))|^$)\", \"name\": \"meta.function.type-declaration.elm\", \"patterns\": [{ \"include\": \"#type-signature-chunk\" }] }, \"type-signature-chunk\": { \"patterns\": [{ \"match\": \"->\", \"name\": \"keyword.operator.arrow.elm\" }, { \"match\": \"\\\\s+\", \"name\": \"punctuation.spaces.elm\" }, { \"include\": \"#module-prefix\" }, { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"variable.type.elm\" }, { \"match\": \"\\\\b[A-Z][a-zA-Z0-9_]*\\\\b\", \"name\": \"storage.type.elm\" }, { \"match\": \"\\\\(\\\\)\", \"name\": \"constant.unit.elm\" }, { \"include\": \"#comma\" }, { \"include\": \"#parens\" }, { \"include\": \"#comments\" }, { \"include\": \"#type-record\" }] }, \"unit\": { \"match\": \"\\\\(\\\\)\", \"name\": \"constant.unit.elm\" }, \"value\": { \"match\": \"\\\\b[a-z][a-zA-Z0-9_]*\\\\b\", \"name\": \"meta.value.elm\" } }, \"scopeName\": \"source.elm\", \"embeddedLangs\": [\"glsl\"] });\nvar elm = [\n  ...glsl,\n  lang\n];\n\nexport { elm as default };\n","const lang = Object.freeze({ \"displayName\": \"JSON\", \"name\": \"json\", \"patterns\": [{ \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json\" } }, \"name\": \"meta.structure.array.json\", \"patterns\": [{ \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.json\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.js\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.json\" }, \"number\": { \"match\": \"(?x)\\n-?\\n(?:\\n0\\n|\\n[1-9]\\n\\\\d*\\n)\\n(?:\\n(?:\\n\\\\.\\n\\\\d+\\n)?\\n(?:\\n[eE]\\n[+-]?\\n\\\\d+\\n)?\\n)?\", \"name\": \"constant.numeric.json\" }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json\" } }, \"name\": \"meta.structure.dictionary.json\", \"patterns\": [{ \"comment\": \"the JSON object key\", \"include\": \"#objectkey\" }, { \"include\": \"#comments\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json\" } }, \"name\": \"meta.structure.dictionary.value.json\", \"patterns\": [{ \"comment\": \"the JSON object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, \"objectkey\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.end.json\" } }, \"name\": \"string.json support.type.property-name.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"string\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json\" } }, \"name\": \"string.quoted.double.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"stringcontent\": { \"patterns\": [{ \"match\": '(?x)\\n\\\\\\\\\\n(?:\\n[\"\\\\\\\\/bfnrt]\\n|\\nu\\n[0-9a-fA-F]{4})', \"name\": \"constant.character.escape.json\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }, { \"include\": \"#comments\" }] } }, \"scopeName\": \"source.json\" });\nvar json = [\n  lang\n];\n\nexport { json as default };\n","const lang = Object.freeze({ \"displayName\": \"Kotlin\", \"fileTypes\": [\"kt\", \"kts\"], \"name\": \"kotlin\", \"patterns\": [{ \"include\": \"#import\" }, { \"include\": \"#package\" }, { \"include\": \"#code\" }], \"repository\": { \"annotation-simple\": { \"match\": \"(?<!\\\\w)@[\\\\w\\\\.]+\\\\b(?!:)\", \"name\": \"entity.name.type.annotation.kotlin\" }, \"annotation-site\": { \"begin\": \"(?<!\\\\w)(@\\\\w+):\\\\s*(?!\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.annotation-site.kotlin\" } }, \"end\": \"$\", \"patterns\": [{ \"include\": \"#unescaped-annotation\" }] }, \"annotation-site-list\": { \"begin\": \"(?<!\\\\w)(@\\\\w+):\\\\s*\\\\[\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.annotation-site.kotlin\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#unescaped-annotation\" }] }, \"binary-literal\": { \"match\": \"0(b|B)[01][01_]*\", \"name\": \"constant.numeric.binary.kotlin\" }, \"boolean-literal\": { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.kotlin\" }, \"character\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.kotlin\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.kotlin\" }] }, \"class-declaration\": { \"captures\": { \"1\": { \"name\": \"storage.type.class.kotlin\" }, \"2\": { \"name\": \"entity.name.type.class.kotlin\" }, \"3\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\b(class|(?:fun\\\\s+)?interface)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\" }, \"code\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#annotation-simple\" }, { \"include\": \"#annotation-site-list\" }, { \"include\": \"#annotation-site\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#object\" }, { \"include\": \"#type-alias\" }, { \"include\": \"#function\" }, { \"include\": \"#variable-declaration\" }, { \"include\": \"#type-constraint\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#function-call\" }, { \"include\": \"#method-reference\" }, { \"include\": \"#key\" }, { \"include\": \"#string\" }, { \"include\": \"#string-empty\" }, { \"include\": \"#string-multiline\" }, { \"include\": \"#character\" }, { \"include\": \"#lambda-arrow\" }, { \"include\": \"#operators\" }, { \"include\": \"#self-reference\" }, { \"include\": \"#decimal-literal\" }, { \"include\": \"#hex-literal\" }, { \"include\": \"#binary-literal\" }, { \"include\": \"#boolean-literal\" }, { \"include\": \"#null-literal\" }] }, \"comment-block\": { \"begin\": \"/\\\\*(?!\\\\*)\", \"end\": \"\\\\*/\", \"name\": \"comment.block.kotlin\" }, \"comment-javadoc\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*\", \"end\": \"\\\\*/\", \"name\": \"comment.block.javadoc.kotlin\", \"patterns\": [{ \"match\": \"@(return|constructor|receiver|sample|see|author|since|suppress)\\\\b\", \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"variable.parameter.kotlin\" } }, \"match\": \"(@param|@property)\\\\s+(\\\\S+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"variable.parameter.kotlin\" } }, \"match\": \"(@param)\\\\[(\\\\S+)\\\\]\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"entity.name.type.class.kotlin\" } }, \"match\": \"(@(?:exception|throws))\\\\s+(\\\\S+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"entity.name.type.class.kotlin\" }, \"3\": { \"name\": \"variable.parameter.kotlin\" } }, \"match\": \"{(@link)\\\\s+(\\\\S+)?#([\\\\w$]+\\\\s*\\\\([^\\\\(\\\\)]*\\\\)).*}\" }] }] }, \"comment-line\": { \"begin\": \"//\", \"end\": \"$\", \"name\": \"comment.line.double-slash.kotlin\" }, \"comments\": { \"patterns\": [{ \"include\": \"#comment-line\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#comment-javadoc\" }] }, \"control-keywords\": { \"match\": \"\\\\b(if|else|while|do|when|try|throw|break|continue|return|for)\\\\b\", \"name\": \"keyword.control.kotlin\" }, \"decimal-literal\": { \"match\": \"\\\\b\\\\d[\\\\d_]*(\\\\.[\\\\d_]+)?((e|E)\\\\d+)?(u|U)?(L|F|f)?\\\\b\", \"name\": \"constant.numeric.decimal.kotlin\" }, \"function\": { \"captures\": { \"1\": { \"name\": \"storage.type.function.kotlin\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] }, \"4\": { \"name\": \"entity.name.type.class.extension.kotlin\" }, \"5\": { \"name\": \"entity.name.function.declaration.kotlin\" } }, \"match\": \"\\\\b(fun)\\\\b\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\\\\s*(?:(?:(\\\\w+)\\\\.)?(\\\\b\\\\w+\\\\b|`[^`]+`))?\" }, \"function-call\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.call.kotlin\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\??\\\\.?(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\\\\s*(?=[({])\" }, \"hard-keywords\": { \"match\": \"\\\\b(as|typeof|is|in)\\\\b\", \"name\": \"keyword.hard.kotlin\" }, \"hex-literal\": { \"match\": \"0(x|X)[A-Fa-f0-9][A-Fa-f0-9_]*(u|U)?\", \"name\": \"constant.numeric.hex.kotlin\" }, \"import\": { \"begin\": \"\\\\b(import)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.import.kotlin\" } }, \"contentName\": \"entity.name.package.kotlin\", \"end\": \";|$\", \"name\": \"meta.import.kotlin\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#hard-keywords\" }, { \"match\": \"\\\\*\", \"name\": \"variable.language.wildcard.kotlin\" }] }, \"key\": { \"captures\": { \"1\": { \"name\": \"variable.parameter.kotlin\" }, \"2\": { \"name\": \"keyword.operator.assignment.kotlin\" } }, \"match\": \"\\\\b(\\\\w=)\\\\s*(=)\" }, \"keywords\": { \"patterns\": [{ \"include\": \"#prefix-modifiers\" }, { \"include\": \"#postfix-modifiers\" }, { \"include\": \"#soft-keywords\" }, { \"include\": \"#hard-keywords\" }, { \"include\": \"#control-keywords\" }] }, \"lambda-arrow\": { \"match\": \"->\", \"name\": \"storage.type.function.arrow.kotlin\" }, \"method-reference\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.reference.kotlin\" } }, \"match\": \"\\\\??::(\\\\b\\\\w+\\\\b|`[^`]+`)\" }, \"null-literal\": { \"match\": \"\\\\bnull\\\\b\", \"name\": \"constant.language.null.kotlin\" }, \"object\": { \"captures\": { \"1\": { \"name\": \"storage.type.object.kotlin\" }, \"2\": { \"name\": \"entity.name.type.object.kotlin\" } }, \"match\": \"\\\\b(object)(?:\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`))?\" }, \"operators\": { \"patterns\": [{ \"match\": \"(===?|\\\\!==?|<=|>=|<|>)\", \"name\": \"keyword.operator.comparison.kotlin\" }, { \"match\": \"([+*/%-]=)\", \"name\": \"keyword.operator.assignment.arithmetic.kotlin\" }, { \"match\": \"(=)\", \"name\": \"keyword.operator.assignment.kotlin\" }, { \"match\": \"([+*/%-])\", \"name\": \"keyword.operator.arithmetic.kotlin\" }, { \"match\": \"(!|&&|\\\\|\\\\|)\", \"name\": \"keyword.operator.logical.kotlin\" }, { \"match\": \"(--|\\\\+\\\\+)\", \"name\": \"keyword.operator.increment-decrement.kotlin\" }, { \"match\": \"(\\\\.\\\\.)\", \"name\": \"keyword.operator.range.kotlin\" }] }, \"package\": { \"begin\": \"\\\\b(package)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.package.kotlin\" } }, \"contentName\": \"entity.name.package.kotlin\", \"end\": \";|$\", \"name\": \"meta.package.kotlin\", \"patterns\": [{ \"include\": \"#comments\" }] }, \"postfix-modifiers\": { \"match\": \"\\\\b(where|by|get|set)\\\\b\", \"name\": \"storage.modifier.other.kotlin\" }, \"prefix-modifiers\": { \"match\": \"\\\\b(abstract|final|enum|open|annotation|sealed|data|override|final|lateinit|private|protected|public|internal|inner|companion|noinline|crossinline|vararg|reified|tailrec|operator|infix|inline|external|const|suspend|value)\\\\b\", \"name\": \"storage.modifier.other.kotlin\" }, \"self-reference\": { \"match\": \"\\\\b(this|super)(@\\\\w+)?\\\\b\", \"name\": \"variable.language.this.kotlin\" }, \"soft-keywords\": { \"match\": \"\\\\b(catch|finally|field)\\\\b\", \"name\": \"keyword.soft.kotlin\" }, \"string\": { \"begin\": '(?<!\")\"(?!\")', \"end\": '\"', \"name\": \"string.quoted.double.kotlin\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.kotlin\" }, { \"include\": \"#string-escape-simple\" }, { \"include\": \"#string-escape-bracketed\" }] }, \"string-empty\": { \"match\": '(?<!\")\"\"(?!\")', \"name\": \"string.quoted.double.kotlin\" }, \"string-escape-bracketed\": { \"begin\": \"(?<!\\\\\\\\)(\\\\$\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.template-expression.begin\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.template-expression.end\" } }, \"name\": \"meta.template.expression.kotlin\", \"patterns\": [{ \"include\": \"#code\" }] }, \"string-escape-simple\": { \"match\": \"(?<!\\\\\\\\)\\\\$\\\\w+\\\\b\", \"name\": \"variable.string-escape.kotlin\" }, \"string-multiline\": { \"begin\": '\"\"\"', \"end\": '\"\"\"', \"name\": \"string.quoted.double.kotlin\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.kotlin\" }, { \"include\": \"#string-escape-simple\" }, { \"include\": \"#string-escape-bracketed\" }] }, \"type-alias\": { \"captures\": { \"1\": { \"name\": \"storage.type.alias.kotlin\" }, \"2\": { \"name\": \"entity.name.type.kotlin\" }, \"3\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\b(typealias)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\" }, \"type-annotation\": { \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": `(?<![:?]):\\\\s*(\\\\w|\\\\?|\\\\s|->|(?<GROUP>[<(]([^<>()\"']|\\\\g<GROUP>)+[)>]))+` }, \"type-parameter\": { \"patterns\": [{ \"match\": \"\\\\b\\\\w+\\\\b\", \"name\": \"entity.name.type.kotlin\" }, { \"match\": \"\\\\b(in|out)\\\\b\", \"name\": \"storage.modifier.kotlin\" }] }, \"unescaped-annotation\": { \"match\": \"\\\\b[\\\\w\\\\.]+\\\\b\", \"name\": \"entity.name.type.annotation.kotlin\" }, \"variable-declaration\": { \"captures\": { \"1\": { \"name\": \"storage.type.variable.kotlin\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\b(val|var)\\\\b\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\" } }, \"scopeName\": \"source.kotlin\", \"aliases\": [\"kt\", \"kts\"] });\nvar kotlin = [\n  lang\n];\n\nexport { kotlin as default };\n","const lang = Object.freeze({ \"displayName\": \"Makefile\", \"name\": \"make\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variables\" }, { \"include\": \"#variable-assignment\" }, { \"include\": \"#directives\" }, { \"include\": \"#recipe\" }, { \"include\": \"#target\" }], \"repository\": { \"another-variable-braces\": { \"patterns\": [{ \"begin\": \"(?<={)(?!})\", \"end\": \"(?=}|((?<!\\\\\\\\)\\\\n))\", \"name\": \"variable.other.makefile\", \"patterns\": [{ \"include\": \"#variables\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }] }] }, \"another-variable-parentheses\": { \"patterns\": [{ \"begin\": \"(?<=\\\\()(?!\\\\))\", \"end\": \"(?=\\\\)|((?<!\\\\\\\\)\\\\n))\", \"name\": \"variable.other.makefile\", \"patterns\": [{ \"include\": \"#variables\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }] }] }, \"braces-interpolation\": { \"begin\": \"{\", \"end\": \"}\", \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#interpolation\" }] }, \"builtin-variable-braces\": { \"patterns\": [{ \"match\": \"(?<={)(MAKEFILES|VPATH|SHELL|MAKESHELL|MAKE|MAKELEVEL|MAKEFLAGS|MAKECMDGOALS|CURDIR|SUFFIXES|\\\\.LIBPATTERNS)(?=\\\\s*})\", \"name\": \"variable.language.makefile\" }] }, \"builtin-variable-parentheses\": { \"patterns\": [{ \"match\": \"(?<=\\\\()(MAKEFILES|VPATH|SHELL|MAKESHELL|MAKE|MAKELEVEL|MAKEFLAGS|MAKECMDGOALS|CURDIR|SUFFIXES|\\\\.LIBPATTERNS)(?=\\\\s*\\\\))\", \"name\": \"variable.language.makefile\" }] }, \"comma\": { \"match\": \",\", \"name\": \"punctuation.separator.delimeter.comma.makefile\" }, \"comment\": { \"begin\": \"(^[ ]+)?((?<!\\\\\\\\)(\\\\\\\\\\\\\\\\)*)(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.makefile\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.makefile\" } }, \"end\": \"(?=[^\\\\\\\\])$\", \"name\": \"comment.line.number-sign.makefile\", \"patterns\": [{ \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }] }] }, \"directives\": { \"patterns\": [{ \"begin\": \"^[ ]*([s\\\\-]?include)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.include.makefile\" } }, \"end\": \"^\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variables\" }, { \"match\": \"%\", \"name\": \"constant.other.placeholder.makefile\" }] }, { \"begin\": \"^[ ]*(vpath)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.vpath.makefile\" } }, \"end\": \"^\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variables\" }, { \"match\": \"%\", \"name\": \"constant.other.placeholder.makefile\" }] }, { \"begin\": \"^\\\\s*(?:(override)\\\\s*)?(define)\\\\s*([^\\\\s]+)\\\\s*(=|\\\\?=|:=|\\\\+=)?(?=\\\\s)\", \"captures\": { \"1\": { \"name\": \"keyword.control.override.makefile\" }, \"2\": { \"name\": \"keyword.control.define.makefile\" }, \"3\": { \"name\": \"variable.other.makefile\" }, \"4\": { \"name\": \"punctuation.separator.key-value.makefile\" } }, \"end\": \"^\\\\s*(endef)\\\\b\", \"name\": \"meta.scope.conditional.makefile\", \"patterns\": [{ \"begin\": \"\\\\G(?!\\\\n)\", \"end\": \"^\", \"patterns\": [{ \"include\": \"#comment\" }] }, { \"include\": \"#variables\" }, { \"include\": \"#directives\" }] }, { \"begin\": \"^[ ]*(export)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.$1.makefile\" } }, \"end\": \"^\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-assignment\" }, { \"match\": \"[^\\\\s]+\", \"name\": \"variable.other.makefile\" }] }, { \"begin\": \"^[ ]*(override|private)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.$1.makefile\" } }, \"end\": \"^\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-assignment\" }] }, { \"begin\": \"^[ ]*(unexport|undefine)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.$1.makefile\" } }, \"end\": \"^\", \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \"[^\\\\s]+\", \"name\": \"variable.other.makefile\" }] }, { \"begin\": \"^\\\\s*(ifeq|ifneq|ifdef|ifndef)(?=\\\\s)\", \"captures\": { \"1\": { \"name\": \"keyword.control.$1.makefile\" } }, \"end\": \"^\\\\s*(endif)\\\\b\", \"name\": \"meta.scope.conditional.makefile\", \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"^\", \"name\": \"meta.scope.condition.makefile\", \"patterns\": [{ \"include\": \"#comma\" }, { \"include\": \"#variables\" }, { \"include\": \"#comment\" }] }, { \"begin\": \"^\\\\s*else(?=\\\\s)\\\\s*(ifeq|ifneq|ifdef|ifndef)*(?=\\\\s)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.else.makefile\" } }, \"end\": \"^\", \"patterns\": [{ \"include\": \"#comma\" }, { \"include\": \"#variables\" }, { \"include\": \"#comment\" }] }, { \"include\": \"$self\" }] }] }, \"flavor-variable-braces\": { \"patterns\": [{ \"begin\": \"(?<={)(origin|flavor)\\\\s(?=[^\\\\s}]+\\\\s*})\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.$1.makefile\" } }, \"contentName\": \"variable.other.makefile\", \"end\": \"(?=})\", \"name\": \"meta.scope.function-call.makefile\", \"patterns\": [{ \"include\": \"#variables\" }] }] }, \"flavor-variable-parentheses\": { \"patterns\": [{ \"begin\": \"(?<=\\\\()(origin|flavor)\\\\s(?=[^\\\\s)]+\\\\s*\\\\))\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.$1.makefile\" } }, \"contentName\": \"variable.other.makefile\", \"end\": \"(?=\\\\))\", \"name\": \"meta.scope.function-call.makefile\", \"patterns\": [{ \"include\": \"#variables\" }] }] }, \"function-variable-braces\": { \"patterns\": [{ \"begin\": \"(?<={)(subst|patsubst|strip|findstring|filter(-out)?|sort|word(list)?|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|info|error|warning|shell|foreach|if|or|and|call|eval|value|file|guile)\\\\s\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.$1.makefile\" } }, \"end\": \"(?=}|((?<!\\\\\\\\)\\\\n))\", \"name\": \"meta.scope.function-call.makefile\", \"patterns\": [{ \"include\": \"#comma\" }, { \"include\": \"#variables\" }, { \"include\": \"#interpolation\" }, { \"match\": \"%|\\\\*\", \"name\": \"constant.other.placeholder.makefile\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }] }] }, \"function-variable-parentheses\": { \"patterns\": [{ \"begin\": \"(?<=\\\\()(subst|patsubst|strip|findstring|filter(-out)?|sort|word(list)?|firstword|lastword|dir|notdir|suffix|basename|addsuffix|addprefix|join|wildcard|realpath|abspath|info|error|warning|shell|foreach|if|or|and|call|eval|value|file|guile)\\\\s\", \"beginCaptures\": { \"1\": { \"name\": \"support.function.$1.makefile\" } }, \"end\": \"(?=\\\\)|((?<!\\\\\\\\)\\\\n))\", \"name\": \"meta.scope.function-call.makefile\", \"patterns\": [{ \"include\": \"#comma\" }, { \"include\": \"#variables\" }, { \"include\": \"#interpolation\" }, { \"match\": \"%|\\\\*\", \"name\": \"constant.other.placeholder.makefile\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }] }] }, \"interpolation\": { \"patterns\": [{ \"include\": \"#parentheses-interpolation\" }, { \"include\": \"#braces-interpolation\" }] }, \"parentheses-interpolation\": { \"begin\": \"\\\\(\", \"end\": \"\\\\)\", \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#interpolation\" }] }, \"recipe\": { \"begin\": \"^\\\\t([+\\\\-@]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.$1.makefile\" } }, \"end\": \"[^\\\\\\\\]$\", \"name\": \"meta.scope.recipe.makefile\", \"patterns\": [{ \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }, { \"include\": \"#variables\" }] }, \"simple-variable\": { \"patterns\": [{ \"match\": \"\\\\$[^(){}]\", \"name\": \"variable.language.makefile\" }] }, \"target\": { \"begin\": \"^(?!\\\\t)([^:]*)(:)(?!\\\\=)\", \"beginCaptures\": { \"1\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.function.target.$1.makefile\" } }, \"match\": \"^\\\\s*(\\\\.(PHONY|SUFFIXES|DEFAULT|PRECIOUS|INTERMEDIATE|SECONDARY|SECONDEXPANSION|DELETE_ON_ERROR|IGNORE|LOW_RESOLUTION_TIME|SILENT|EXPORT_ALL_VARIABLES|NOTPARALLEL|ONESHELL|POSIX))\\\\s*$\" }, { \"begin\": \"(?=\\\\S)\", \"end\": \"(?=\\\\s|$)\", \"name\": \"entity.name.function.target.makefile\", \"patterns\": [{ \"include\": \"#variables\" }, { \"match\": \"%\", \"name\": \"constant.other.placeholder.makefile\" }] }] }, \"2\": { \"name\": \"punctuation.separator.key-value.makefile\" } }, \"end\": \"[^\\\\\\\\]$\", \"name\": \"meta.scope.target.makefile\", \"patterns\": [{ \"begin\": \"\\\\G\", \"end\": \"(?=[^\\\\\\\\])$\", \"name\": \"meta.scope.prerequisites.makefile\", \"patterns\": [{ \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }, { \"match\": \"%|\\\\*\", \"name\": \"constant.other.placeholder.makefile\" }, { \"include\": \"#comment\" }, { \"include\": \"#variables\" }] }] }, \"variable-assignment\": { \"begin\": \"(^[ ]*|\\\\G\\\\s*)([^\\\\s:#=]+)\\\\s*((?<![?:+!])=|\\\\?=|:=|\\\\+=|!=)\", \"beginCaptures\": { \"2\": { \"name\": \"variable.other.makefile\", \"patterns\": [{ \"include\": \"#variables\" }] }, \"3\": { \"name\": \"punctuation.separator.key-value.makefile\" } }, \"end\": \"\\\\n\", \"patterns\": [{ \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.continuation.makefile\" }, { \"include\": \"#comment\" }, { \"include\": \"#variables\" }] }, \"variable-braces\": { \"patterns\": [{ \"begin\": \"\\\\${\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.variable.makefile\" } }, \"end\": \"}|((?<!\\\\\\\\)\\\\n)\", \"name\": \"string.interpolated.makefile\", \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#builtin-variable-braces\" }, { \"include\": \"#function-variable-braces\" }, { \"include\": \"#flavor-variable-braces\" }, { \"include\": \"#another-variable-braces\" }] }] }, \"variable-parentheses\": { \"patterns\": [{ \"begin\": \"\\\\$\\\\(\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.variable.makefile\" } }, \"end\": \"\\\\)|((?<!\\\\\\\\)\\\\n)\", \"name\": \"string.interpolated.makefile\", \"patterns\": [{ \"include\": \"#variables\" }, { \"include\": \"#builtin-variable-parentheses\" }, { \"include\": \"#function-variable-parentheses\" }, { \"include\": \"#flavor-variable-parentheses\" }, { \"include\": \"#another-variable-parentheses\" }] }] }, \"variables\": { \"patterns\": [{ \"include\": \"#simple-variable\" }, { \"include\": \"#variable-parentheses\" }, { \"include\": \"#variable-braces\" }] } }, \"scopeName\": \"source.makefile\", \"aliases\": [\"makefile\"] });\nvar make = [\n  lang\n];\n\nexport { make as default };\n","const lang = Object.freeze({ \"displayName\": \"Sass\", \"fileTypes\": [\"sass\"], \"foldingStartMarker\": \"/\\\\*|^#|^\\\\*|^\\\\b|*#?region|^\\\\.\", \"foldingStopMarker\": \"\\\\*/|*#?endregion|^\\\\s*$\", \"name\": \"sass\", \"patterns\": [{ \"begin\": \"^(\\\\s*)(/\\\\*)\", \"end\": \"(\\\\*/)|^(?!\\\\s\\\\1)\", \"name\": \"comment.block.sass\", \"patterns\": [{ \"include\": \"#comment-tag\" }, { \"include\": \"#comment-param\" }] }, { \"match\": \"^[\\\\t ]*/?//[\\\\t ]*[SRI][\\\\t ]*$\", \"name\": \"keyword.other.sass.formatter.action\" }, { \"begin\": \"^[\\\\t ]*//[\\\\t ]*(import)[\\\\t ]*(css-variables)[\\\\t ]*(from)\", \"captures\": { \"1\": { \"name\": \"keyword.control\" }, \"2\": { \"name\": \"variable\" }, \"3\": { \"name\": \"keyword.control\" } }, \"end\": \"$\\\\n?\", \"name\": \"comment.import.css.variables\", \"patterns\": [{ \"include\": \"#import-quotes\" }] }, { \"include\": \"#double-slash\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#curly-brackets\" }, { \"include\": \"#placeholder-selector\" }, { \"begin\": \"\\\\$[a-zA-Z0-9_-]+(?=:)\", \"captures\": { \"0\": { \"name\": \"variable.other.name\" } }, \"end\": \"$\\\\n?|(?=\\\\)\\\\s\\\\)|\\\\)\\\\n)\", \"name\": \"sass.script.maps\", \"patterns\": [{ \"include\": \"#double-slash\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#variable\" }, { \"include\": \"#rgb-value\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#flag\" }, { \"include\": \"#comma\" }, { \"include\": \"#function\" }, { \"include\": \"#function-content\" }, { \"include\": \"#operator\" }, { \"include\": \"#reserved-words\" }, { \"include\": \"#parent-selector\" }, { \"include\": \"#property-value\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#dotdotdot\" }] }, { \"include\": \"#variable-root\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#flag\" }, { \"include\": \"#comma\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#dotdotdot\" }, { \"begin\": \"@include|\\\\+(?!\\\\W|\\\\d)\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.css.sass\" } }, \"end\": \"(?=\\\\n|\\\\()\", \"name\": \"support.function.name.sass.library\" }, { \"begin\": \"^(@use)\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.css.sass.use\" } }, \"end\": \"(?=\\\\n)\", \"name\": \"sass.use\", \"patterns\": [{ \"match\": \"as|with\", \"name\": \"support.type.css.sass\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#variable-root\" }, { \"include\": \"#rgb-value\" }, { \"include\": \"#comma\" }, { \"include\": \"#parenthesis-open\" }, { \"include\": \"#parenthesis-close\" }, { \"include\": \"#colon\" }, { \"include\": \"#import-quotes\" }] }, { \"begin\": \"^@import(.*?)( as.*)?$\", \"captures\": { \"1\": { \"name\": \"constant.character.css.sass\" }, \"2\": { \"name\": \"invalid\" } }, \"end\": \"(?=\\\\n)\", \"name\": \"keyword.control.at-rule.use\" }, { \"begin\": \"@mixin|^[\\\\t ]*=|@function\", \"captures\": { \"0\": { \"name\": \"keyword.control.at-rule.css.sass\" } }, \"end\": \"$\\\\n?|(?=\\\\()\", \"name\": \"support.function.name.sass\", \"patterns\": [{ \"match\": \"[\\\\w-]+\", \"name\": \"entity.name.function\" }] }, { \"begin\": \"@\", \"end\": \"$\\\\n?|\\\\s(?!(all|braille|embossed|handheld|print|projection|screen|speech|tty|tv|if|only|not)(\\\\s|,))\", \"name\": \"keyword.control.at-rule.css.sass\" }, { \"begin\": \"(?<!\\\\-|\\\\()\\\\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video|main|svg|rect|ruby|center|circle|ellipse|line|polyline|polygon|path|text|u|slot)\\\\b(?!-|\\\\)|:\\\\s)|&\", \"end\": \"$\\\\n?|(?=\\\\s|,|\\\\(|\\\\)|\\\\.|\\\\#|\\\\[|>|-|_)\", \"name\": \"entity.name.tag.css.sass.symbol\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"begin\": \"#\", \"end\": \"$\\\\n?|(?=\\\\s|,|\\\\(|\\\\)|\\\\.|\\\\[|>)\", \"name\": \"entity.other.attribute-name.id.css.sass\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"begin\": \"\\\\.|(?<=&)(-|_)\", \"end\": \"$\\\\n?|(?=\\\\s|,|\\\\(|\\\\)|\\\\[|>)\", \"name\": \"entity.other.attribute-name.class.css.sass\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"name\": \"entity.other.attribute-selector.sass\", \"patterns\": [{ \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"match\": \"\\\\^|\\\\$|\\\\*|~\", \"name\": \"keyword.other.regex.sass\" }] }, { \"match\": \"^((?<=\\\\]|\\\\)|not\\\\(|\\\\*|>|>\\\\s)|\\n*):[a-z:-]+|(::|:-)[a-z:-]+\", \"name\": \"entity.other.attribute-name.pseudo-class.css.sass\" }, { \"include\": \"#module\" }, { \"match\": \"[\\\\w-]*\\\\(\", \"name\": \"entity.name.function\" }, { \"match\": \"\\\\)\", \"name\": \"entity.name.function.close\" }, { \"begin\": \":\", \"end\": \"$\\\\n?|(?=\\\\s\\\\(|and\\\\(|\\\\),)\", \"name\": \"meta.property-list.css.sass.prop\", \"patterns\": [{ \"match\": \"(?<=:)[a-z-]+\\\\s\", \"name\": \"support.type.property-name.css.sass.prop.name\" }, { \"include\": \"#double-slash\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#curly-brackets\" }, { \"include\": \"#variable\" }, { \"include\": \"#rgb-value\" }, { \"include\": \"#numeric\" }, { \"include\": \"#unit\" }, { \"include\": \"#module\" }, { \"match\": \"--.+?(?=\\\\))\", \"name\": \"variable.css\" }, { \"match\": \"[\\\\w-]*\\\\(\", \"name\": \"entity.name.function\" }, { \"match\": \"\\\\)\", \"name\": \"entity.name.function.close\" }, { \"include\": \"#flag\" }, { \"include\": \"#comma\" }, { \"include\": \"#semicolon\" }, { \"include\": \"#function\" }, { \"include\": \"#function-content\" }, { \"include\": \"#operator\" }, { \"include\": \"#parent-selector\" }, { \"include\": \"#property-value\" }] }, { \"include\": \"#rgb-value\" }, { \"include\": \"#function\" }, { \"include\": \"#function-content\" }, { \"begin\": \"(?<=})(?!\\\\n|\\\\(|\\\\)|[a-zA-Z0-9_-]+:)\", \"end\": \"\\\\s|(?=,|\\\\.|\\\\[|\\\\)|\\\\n)\", \"name\": \"entity.name.tag.css.sass\", \"patterns\": [{ \"include\": \"#interpolation\" }, { \"include\": \"#pseudo-class\" }] }, { \"include\": \"#operator\" }, { \"match\": \"[a-z-]+((?=:|#{))\", \"name\": \"support.type.property-name.css.sass.prop.name\" }, { \"include\": \"#reserved-words\" }, { \"include\": \"#property-value\" }], \"repository\": { \"colon\": { \"match\": \":\", \"name\": \"meta.property-list.css.sass.colon\" }, \"comma\": { \"match\": \"\\\\band\\\\b|\\\\bor\\\\b|,\", \"name\": \"comment.punctuation.comma.sass\" }, \"comment-param\": { \"match\": \"\\\\@(\\\\w+)\", \"name\": \"storage.type.class.jsdoc\" }, \"comment-tag\": { \"begin\": \"(?<={{)\", \"end\": \"(?=}})\", \"name\": \"comment.tag.sass\" }, \"curly-brackets\": { \"match\": \"{|}\", \"name\": \"invalid\" }, \"dotdotdot\": { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"variable.other\" }, \"double-quoted\": { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.css.sass\", \"patterns\": [{ \"include\": \"#quoted-interpolation\" }] }, \"double-slash\": { \"begin\": \"//\", \"end\": \"$\\\\n?\", \"name\": \"comment.line.sass\", \"patterns\": [{ \"include\": \"#comment-tag\" }] }, \"flag\": { \"match\": \"!(important|default|optional|global)\", \"name\": \"keyword.other.important.css.sass\" }, \"function\": { \"match\": \"(?<=[\\\\s|\\\\(|,|:])(?!url|format|attr)[a-zA-Z0-9_-][\\\\w-]*(?=\\\\()\", \"name\": \"support.function.name.sass\" }, \"function-content\": { \"begin\": \"(?<=url\\\\(|format\\\\(|attr\\\\()\", \"end\": \".(?=\\\\))\", \"name\": \"string.quoted.double.css.sass\" }, \"import-quotes\": { \"match\": `[\"']?\\\\.{0,2}[\\\\w/]+[\"']?`, \"name\": \"constant.character.css.sass\" }, \"interpolation\": { \"begin\": \"#{\", \"end\": \"}\", \"name\": \"support.function.interpolation.sass\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#numeric\" }, { \"include\": \"#operator\" }, { \"include\": \"#unit\" }, { \"include\": \"#comma\" }, { \"include\": \"#double-quoted\" }, { \"include\": \"#single-quoted\" }] }, \"module\": { \"captures\": { \"1\": { \"name\": \"constant.character.module.name\" }, \"2\": { \"name\": \"constant.numeric.module.dot\" } }, \"match\": \"([\\\\w-]+?)(\\\\.)\", \"name\": \"constant.character.module\" }, \"numeric\": { \"match\": \"(-|\\\\.)?[0-9]+(\\\\.[0-9]+)?\", \"name\": \"constant.numeric.css.sass\" }, \"operator\": { \"match\": \"\\\\+|\\\\s-\\\\s|\\\\s-(?=\\\\$)|(?<=\\\\()-(?=\\\\$)|\\\\s-(?=\\\\()|\\\\*|/|%|=|!|<|>|~\", \"name\": \"keyword.operator.sass\" }, \"parent-selector\": { \"match\": \"&\", \"name\": \"entity.name.tag.css.sass\" }, \"parenthesis-close\": { \"match\": \"\\\\)\", \"name\": \"entity.name.function.parenthesis.close\" }, \"parenthesis-open\": { \"match\": \"\\\\(\", \"name\": \"entity.name.function.parenthesis.open\" }, \"placeholder-selector\": { \"begin\": \"(?<!\\\\d)%(?!\\\\d)\", \"end\": \"$\\\\n?|\\\\s\", \"name\": \"entity.other.inherited-class.placeholder-selector.css.sass\" }, \"property-value\": { \"match\": \"[a-zA-Z0-9_-]+\", \"name\": \"meta.property-value.css.sass support.constant.property-value.css.sass\" }, \"pseudo-class\": { \"match\": \":[a-z:-]+\", \"name\": \"entity.other.attribute-name.pseudo-class.css.sass\" }, \"quoted-interpolation\": { \"begin\": \"#{\", \"end\": \"}\", \"name\": \"support.function.interpolation.sass\", \"patterns\": [{ \"include\": \"#variable\" }, { \"include\": \"#numeric\" }, { \"include\": \"#operator\" }, { \"include\": \"#unit\" }, { \"include\": \"#comma\" }] }, \"reserved-words\": { \"match\": \"\\\\b(false|from|in|not|null|through|to|true)\\\\b\", \"name\": \"support.type.property-name.css.sass\" }, \"rgb-value\": { \"match\": \"(#)([0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})\\\\b\", \"name\": \"constant.language.color.rgb-value.css.sass\" }, \"semicolon\": { \"match\": \";\", \"name\": \"invalid\" }, \"single-quoted\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.css.sass\", \"patterns\": [{ \"include\": \"#quoted-interpolation\" }] }, \"unit\": { \"match\": \"(?<=[\\\\d]|})(ch|cm|deg|dpcm|dpi|dppx|em|ex|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vw|fr|%)\", \"name\": \"keyword.control.unit.css.sass\" }, \"variable\": { \"match\": \"\\\\$[a-zA-Z0-9_-]+\", \"name\": \"variable.other.value\" }, \"variable-root\": { \"match\": \"\\\\$[a-zA-Z0-9_-]+\", \"name\": \"variable.other.root\" } }, \"scopeName\": \"source.sass\" });\nvar sass = [\n  lang\n];\n\nexport { sass as default };\n","const lang = Object.freeze({ \"displayName\": \"TOML\", \"fileTypes\": [\"toml\"], \"name\": \"toml\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#groups\" }, { \"include\": \"#key_pair\" }, { \"include\": \"#invalid\" }], \"repository\": { \"comments\": { \"begin\": \"(^[ \\\\t]+)?(?=#)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.toml\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.toml\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.toml\" }] }, \"groups\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.section.begin.toml\" }, \"2\": { \"patterns\": [{ \"match\": \"[^\\\\s.]+\", \"name\": \"entity.name.section.toml\" }] }, \"3\": { \"name\": \"punctuation.definition.section.begin.toml\" } }, \"match\": \"^\\\\s*(\\\\[)([^\\\\[\\\\]]*)(\\\\])\", \"name\": \"meta.group.toml\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.section.begin.toml\" }, \"2\": { \"patterns\": [{ \"match\": \"[^\\\\s.]+\", \"name\": \"entity.name.section.toml\" }] }, \"3\": { \"name\": \"punctuation.definition.section.begin.toml\" } }, \"match\": \"^\\\\s*(\\\\[\\\\[)([^\\\\[\\\\]]*)(\\\\]\\\\])\", \"name\": \"meta.group.double.toml\" }] }, \"invalid\": { \"match\": \"\\\\S+(\\\\s*(?=\\\\S))?\", \"name\": \"invalid.illegal.not-allowed-here.toml\" }, \"key_pair\": { \"patterns\": [{ \"begin\": \"([A-Za-z0-9_-]+)\\\\s*(=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\" }, \"2\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }, { \"begin\": '((\")(.*?)(\"))\\\\s*(=)\\\\s*', \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\" }, \"2\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"3\": { \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\]', \"name\": \"invalid.illegal.escape.toml\" }, { \"match\": '\"', \"name\": \"invalid.illegal.not-allowed-here.toml\" }] }, \"4\": { \"name\": \"punctuation.definition.variable.end.toml\" }, \"5\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }, { \"begin\": \"((')([^']*)('))\\\\s*(=)\\\\s*\", \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\" }, \"2\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"4\": { \"name\": \"punctuation.definition.variable.end.toml\" }, \"5\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }, { \"begin\": `(?x)\n(\n(\n(?:\n[A-Za-z0-9_-]+\n| \"  (?:[^\"\\\\\\\\]|\\\\\\\\.)* \"\n| ' [^']*          '\n)\n(?:\n\\\\s* \\\\. \\\\s*\n| (?= \\\\s* =)\n)\n){2,}\n)\n\\\\s*(=)\\\\s*\n`, \"captures\": { \"1\": { \"name\": \"variable.other.key.toml\", \"patterns\": [{ \"match\": \"\\\\.\", \"name\": \"punctuation.separator.variable.toml\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"2\": { \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\]', \"name\": \"invalid.illegal.escape.toml\" }] }, \"3\": { \"name\": \"punctuation.definition.variable.end.toml\" } }, \"match\": '(\")((?:[^\"\\\\\\\\]|\\\\\\\\.)*)(\")' }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.variable.begin.toml\" }, \"2\": { \"name\": \"punctuation.definition.variable.end.toml\" } }, \"match\": \"(')[^']*(')\" }] }, \"3\": { \"name\": \"punctuation.separator.key-value.toml\" } }, \"comment\": \"Dotted key\", \"end\": \"(?<=\\\\S)(?<!=)|$\", \"patterns\": [{ \"include\": \"#primatives\" }] }] }, \"primatives\": { \"patterns\": [{ \"begin\": '\\\\G\"\"\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": '\"{3,5}', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.triple.double.toml\", \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\\\\\n]', \"name\": \"invalid.illegal.escape.toml\" }] }, { \"begin\": '\\\\G\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.double.toml\", \"patterns\": [{ \"match\": '\\\\\\\\([btnfr\"\\\\\\\\]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})', \"name\": \"constant.character.escape.toml\" }, { \"match\": '\\\\\\\\[^btnfr\"\\\\\\\\]', \"name\": \"invalid.illegal.escape.toml\" }] }, { \"begin\": \"\\\\G'''\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": \"'{3,5}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.triple.single.toml\" }, { \"begin\": \"\\\\G'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.toml\" } }, \"end\": \"'\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.toml\" } }, \"name\": \"string.quoted.single.toml\" }, { \"match\": \"\\\\G(?x)\\n[0-9]{4}\\n-\\n(0[1-9]|1[012])\\n-\\n(?!00|3[2-9])[0-3][0-9]\\n(\\n[Tt ]\\n(?!2[5-9])[0-2][0-9]\\n:\\n[0-5][0-9]\\n:\\n(?!6[1-9])[0-6][0-9]\\n(\\\\.[0-9]+)?\\n(\\nZ\\n| [+-](?!2[5-9])[0-2][0-9]:[0-5][0-9]\\n)?\\n)?\\n\", \"name\": \"constant.other.date.toml\" }, { \"match\": \"\\\\G(?x)\\n(?!2[5-9])[0-2][0-9]\\n:\\n[0-5][0-9]\\n:\\n(?!6[1-9])[0-6][0-9]\\n(\\\\.[0-9]+)?\\n\", \"name\": \"constant.other.time.toml\" }, { \"match\": \"\\\\G(true|false)\", \"name\": \"constant.language.boolean.toml\" }, { \"match\": \"\\\\G0x\\\\h(\\\\h|_\\\\h)*\", \"name\": \"constant.numeric.hex.toml\" }, { \"match\": \"\\\\G0o[0-7]([0-7]|_[0-7])*\", \"name\": \"constant.numeric.octal.toml\" }, { \"match\": \"\\\\G0b[01]([01]|_[01])*\", \"name\": \"constant.numeric.binary.toml\" }, { \"match\": \"\\\\G[+-]?(inf|nan)\", \"name\": \"constant.numeric.toml\" }, { \"match\": \"(?x)\\n\\\\G\\n(\\n[+-]?\\n(\\n0\\n| ([1-9](([0-9]|_[0-9])+)?)\\n)\\n)\\n(?=[.eE])\\n(\\n\\\\.\\n([0-9](([0-9]|_[0-9])+)?)\\n)?\\n(\\n[eE]\\n([+-]?[0-9](([0-9]|_[0-9])+)?)\\n)?\\n\", \"name\": \"constant.numeric.float.toml\" }, { \"match\": \"(?x)\\n\\\\G\\n(\\n[+-]?\\n(\\n0\\n| ([1-9](([0-9]|_[0-9])+)?)\\n)\\n)\\n\", \"name\": \"constant.numeric.integer.toml\" }, { \"begin\": \"\\\\G\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.toml\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.toml\" } }, \"name\": \"meta.array.toml\", \"patterns\": [{ \"begin\": `(?=[\"'']|[+-]?[0-9]|[+-]?(inf|nan)|true|false|\\\\[|\\\\{)`, \"end\": \",|(?=])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.separator.array.toml\" } }, \"patterns\": [{ \"include\": \"#primatives\" }, { \"include\": \"#comments\" }, { \"include\": \"#invalid\" }] }, { \"include\": \"#comments\" }, { \"include\": \"#invalid\" }] }, { \"begin\": \"\\\\G\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.inline-table.begin.toml\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.inline-table.end.toml\" } }, \"name\": \"meta.inline-table.toml\", \"patterns\": [{ \"begin\": \"(?=\\\\S)\", \"end\": \",|(?=})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.separator.inline-table.toml\" } }, \"patterns\": [{ \"include\": \"#key_pair\" }] }, { \"include\": \"#comments\" }] }] } }, \"scopeName\": \"source.toml\" });\nvar toml = [\n  lang\n];\n\nexport { toml as default };\n","const lang = Object.freeze({ \"displayName\": \"YAML\", \"name\": \"yaml\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }, { \"include\": \"#directive\" }, { \"match\": \"^---\", \"name\": \"entity.other.document.begin.yaml\" }, { \"match\": \"^\\\\.{3}\", \"name\": \"entity.other.document.end.yaml\" }, { \"include\": \"#node\" }], \"repository\": { \"block-collection\": { \"patterns\": [{ \"include\": \"#block-sequence\" }, { \"include\": \"#block-mapping\" }] }, \"block-mapping\": { \"patterns\": [{ \"include\": \"#block-pair\" }] }, \"block-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#block-scalar\" }, { \"include\": \"#block-collection\" }, { \"include\": \"#flow-scalar-plain-out\" }, { \"include\": \"#flow-node\" }] }, \"block-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=\\\\?)|^ *(:)|(:)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" }, \"2\": { \"name\": \"invalid.illegal.expected-newline.yaml\" } }, \"name\": \"meta.block-mapping.yaml\", \"patterns\": [{ \"include\": \"#block-node\" }] }, { \"begin\": \"(?x)\\n(?=\\n(?x:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n)\\n(\\n[^\\\\s:]\\n| : \\\\S\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"name\": \"string.unquoted.plain.out.yaml\" }] }, { \"match\": \":(?=\\\\s|$)\", \"name\": \"punctuation.separator.key-value.mapping.yaml\" }] }, \"block-scalar\": { \"begin\": \"(?:(\\\\|)|(>))([1-9])?([-+])?(.*\\\\n?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.flow.block-scalar.literal.yaml\" }, \"2\": { \"name\": \"keyword.control.flow.block-scalar.folded.yaml\" }, \"3\": { \"name\": \"constant.numeric.indentation-indicator.yaml\" }, \"4\": { \"name\": \"storage.modifier.chomping-indicator.yaml\" }, \"5\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"match\": \".+\", \"name\": \"invalid.illegal.expected-comment-or-newline.yaml\" }] } }, \"end\": \"^(?=\\\\S)|(?!\\\\G)\", \"patterns\": [{ \"begin\": \"^([ ]+)(?! )\", \"end\": \"^(?!\\\\1|\\\\s*$)\", \"name\": \"string.unquoted.block.yaml\" }] }, \"block-sequence\": { \"match\": \"(-)(?!\\\\S)\", \"name\": \"punctuation.definition.block.sequence.item.yaml\" }, \"comment\": { \"begin\": \"(?:(^[ \\\\t]*)|[ \\\\t]+)(?=#\\\\p{Print}*$)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.yaml\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"#\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.yaml\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.number-sign.yaml\" }] }, \"directive\": { \"begin\": \"^%\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.directive.begin.yaml\" } }, \"end\": \"(?=$|[ \\\\t]+($|#))\", \"name\": \"meta.directive.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.directive.yaml.yaml\" }, \"2\": { \"name\": \"constant.numeric.yaml-version.yaml\" } }, \"match\": \"\\\\G(YAML)[ \\\\t]+(\\\\d+\\\\.\\\\d+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.directive.tag.yaml\" }, \"2\": { \"name\": \"storage.type.tag-handle.yaml\" }, \"3\": { \"name\": \"support.type.tag-prefix.yaml\" } }, \"match\": \"(?x)\\n\\\\G\\n(TAG)\\n(?:[ \\\\t]+\\n((?:!(?:[0-9A-Za-z\\\\-]*!)?))\\n(?:[ \\\\t]+ (\\n!              (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )*\\n| (?![,!\\\\[\\\\]{}]) (?x: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+\\n)\\n)?\\n)?\\n\" }, { \"captures\": { \"1\": { \"name\": \"support.other.directive.reserved.yaml\" }, \"2\": { \"name\": \"string.unquoted.directive-name.yaml\" }, \"3\": { \"name\": \"string.unquoted.directive-parameter.yaml\" } }, \"match\": \"(?x) \\\\G (\\\\w+) (?:[ \\\\t]+ (\\\\w+) (?:[ \\\\t]+ (\\\\w+))? )?\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.unrecognized.yaml\" }] }, \"flow-alias\": { \"captures\": { \"1\": { \"name\": \"keyword.control.flow.alias.yaml\" }, \"2\": { \"name\": \"punctuation.definition.alias.yaml\" }, \"3\": { \"name\": \"variable.other.alias.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"((\\\\*))([^\\\\s\\\\[\\\\]/{/},]+)([^\\\\s\\\\]},]\\\\S*)?\" }, \"flow-collection\": { \"patterns\": [{ \"include\": \"#flow-sequence\" }, { \"include\": \"#flow-mapping\" }] }, \"flow-mapping\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.begin.yaml\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.mapping.end.yaml\" } }, \"name\": \"meta.flow-mapping.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.mapping.yaml\" }, { \"include\": \"#flow-pair\" }] }, \"flow-node\": { \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-alias\" }, { \"include\": \"#flow-collection\" }, { \"include\": \"#flow-scalar\" }] }, \"flow-pair\": { \"patterns\": [{ \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.key-value.begin.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.explicit.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, { \"begin\": \"(?x)\\n(?=\\n(?:\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n)\\n(\\n[^\\\\s:[\\\\[\\\\]{},]]\\n| : [^\\\\s[\\\\[\\\\]{},]]\\n| \\\\s+ (?![#\\\\s])\\n)*\\n\\\\s*\\n:\\n(\\\\s|$)\\n)\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"meta.flow-pair.key.yaml\", \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\", \"beginCaptures\": { \"0\": { \"name\": \"entity.name.tag.yaml\" } }, \"contentName\": \"entity.name.tag.yaml\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"string.unquoted.plain.in.yaml\" }] }, { \"include\": \"#flow-node\" }, { \"begin\": \":(?=\\\\s|$|[\\\\[\\\\]{},])\", \"captures\": { \"0\": { \"name\": \"punctuation.separator.key-value.mapping.yaml\" } }, \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.yaml\", \"patterns\": [{ \"include\": \"#flow-value\" }] }] }, \"flow-scalar\": { \"patterns\": [{ \"include\": \"#flow-scalar-double-quoted\" }, { \"include\": \"#flow-scalar-single-quoted\" }, { \"include\": \"#flow-scalar-plain-in\" }] }, \"flow-scalar-double-quoted\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.double.yaml\", \"patterns\": [{ \"match\": '\\\\\\\\([0abtnvfre \"/\\\\\\\\N_Lp]|x\\\\d\\\\d|u\\\\d{4}|U\\\\d{8})', \"name\": \"constant.character.escape.yaml\" }, { \"match\": \"\\\\\\\\\\\\n\", \"name\": \"constant.character.escape.double-quoted.newline.yaml\" }] }, \"flow-scalar-plain-in\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-in-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] [^\\\\s[\\\\[\\\\]{},]]\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n\", \"name\": \"string.unquoted.plain.in.yaml\" }] }, \"flow-scalar-plain-in-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n| \\\\s* : [\\\\[\\\\]{},]\\n| \\\\s* [\\\\[\\\\]{},]\\n)\\n)\\n\" }] }, \"flow-scalar-plain-out\": { \"patterns\": [{ \"include\": \"#flow-scalar-plain-out-implicit-type\" }, { \"begin\": \"(?x)\\n[^\\\\s[-?:,\\\\[\\\\]{}#&*!|>'\\\"%@`]]\\n| [?:-] \\\\S\\n\", \"end\": \"(?x)\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n\", \"name\": \"string.unquoted.plain.out.yaml\" }] }, \"flow-scalar-plain-out-implicit-type\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.language.null.yaml\" }, \"2\": { \"name\": \"constant.language.boolean.yaml\" }, \"3\": { \"name\": \"constant.numeric.integer.yaml\" }, \"4\": { \"name\": \"constant.numeric.float.yaml\" }, \"5\": { \"name\": \"constant.other.timestamp.yaml\" }, \"6\": { \"name\": \"constant.language.value.yaml\" }, \"7\": { \"name\": \"constant.language.merge.yaml\" } }, \"match\": \"(?x)\\n(?x:\\n(null|Null|NULL|~)\\n| (y|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF)\\n| (\\n(?:\\n[-+]? 0b [0-1_]+\\n| [-+]? 0  [0-7_]+\\n| [-+]? (?: 0|[1-9][0-9_]*)\\n| [-+]? 0x [0-9a-fA-F_]+\\n| [-+]? [1-9] [0-9_]* (?: :[0-5]?[0-9])+\\n)\\n)\\n| (\\n(?x:\\n[-+]? (?: [0-9] [0-9_]*)? \\\\. [0-9.]* (?: [eE] [-+] [0-9]+)?\\n| [-+]? [0-9] [0-9_]* (?: :[0-5]?[0-9])+ \\\\. [0-9_]*\\n| [-+]? \\\\. (?: inf|Inf|INF)\\n|       \\\\. (?: nan|NaN|NAN)\\n)\\n)\\n| (\\n(?x:\\n\\\\d{4} - \\\\d{2} - \\\\d{2}\\n| \\\\d{4}\\n- \\\\d{1,2}\\n- \\\\d{1,2}\\n(?: [Tt] | [ \\\\t]+) \\\\d{1,2}\\n: \\\\d{2}\\n: \\\\d{2}\\n(?: \\\\.\\\\d*)?\\n(?:\\n(?:[ \\\\t]*) Z\\n| [-+] \\\\d{1,2} (?: :\\\\d{1,2})?\\n)?\\n)\\n)\\n| (=)\\n| (<<)\\n)\\n(?x:\\n(?=\\n\\\\s* $\\n| \\\\s+ \\\\#\\n| \\\\s* : (\\\\s|$)\\n)\\n)\\n\" }] }, \"flow-scalar-single-quoted\": { \"begin\": \"'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.yaml\" } }, \"end\": \"'(?!')\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.yaml\" } }, \"name\": \"string.quoted.single.yaml\", \"patterns\": [{ \"match\": \"''\", \"name\": \"constant.character.escape.single-quoted.yaml\" }] }, \"flow-sequence\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.begin.yaml\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.sequence.end.yaml\" } }, \"name\": \"meta.flow-sequence.yaml\", \"patterns\": [{ \"include\": \"#prototype\" }, { \"match\": \",\", \"name\": \"punctuation.separator.sequence.yaml\" }, { \"include\": \"#flow-pair\" }, { \"include\": \"#flow-node\" }] }, \"flow-value\": { \"patterns\": [{ \"begin\": \"\\\\G(?![},\\\\]])\", \"end\": \"(?=[},\\\\]])\", \"name\": \"meta.flow-pair.value.yaml\", \"patterns\": [{ \"include\": \"#flow-node\" }] }] }, \"node\": { \"patterns\": [{ \"include\": \"#block-node\" }] }, \"property\": { \"begin\": \"(?=!|&)\", \"end\": \"(?!\\\\G)\", \"name\": \"meta.property.yaml\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.property.anchor.yaml\" }, \"2\": { \"name\": \"punctuation.definition.anchor.yaml\" }, \"3\": { \"name\": \"entity.name.type.anchor.yaml\" }, \"4\": { \"name\": \"invalid.illegal.character.anchor.yaml\" } }, \"match\": \"\\\\G((&))([^\\\\s\\\\[\\\\]/{/},]+)(\\\\S+)?\" }, { \"match\": \"(?x)\\n\\\\G\\n(?:\\n! < (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$,_.!~*'()\\\\[\\\\]] )+ >\\n| (?:!(?:[0-9A-Za-z\\\\-]*!)?) (?: %[0-9A-Fa-f]{2} | [0-9A-Za-z\\\\-#;/?:@&=+$_.~*'()] )+\\n| !\\n)\\n(?=\\\\ |\\\\t|$)\\n\", \"name\": \"storage.type.tag-handle.yaml\" }, { \"match\": \"\\\\S+\", \"name\": \"invalid.illegal.tag-handle.yaml\" }] }, \"prototype\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#property\" }] } }, \"scopeName\": \"source.yaml\", \"aliases\": [\"yml\"] });\nvar yaml = [\n  lang\n];\n\nexport { yaml as default };\n"],"names":["lang","Object","freeze","asciidoc","html","yaml","csv","c","clojure","coffee","cpp","css","csharp","diff","docker","elixir","elm","erlang","go","groovy","haskell","java","javascript","json","jsx","julia","kotlin","less","make","objective_c","ocaml","perl","python","r","ruby","rust","sass","scala","scss","shellscript","sql","swift","toml","typescript","xml","glsl"],"sourceRoot":""}