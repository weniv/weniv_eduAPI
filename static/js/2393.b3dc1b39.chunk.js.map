{"version":3,"file":"static/js/2393.b3dc1b39.chunk.js","mappings":"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","sources":["../node_modules/shiki/dist/langs/json.mjs","../node_modules/shiki/dist/langs/liquid.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"JSON\", \"name\": \"json\", \"patterns\": [{ \"include\": \"#value\" }], \"repository\": { \"array\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.begin.json\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.array.end.json\" } }, \"name\": \"meta.structure.array.json\", \"patterns\": [{ \"include\": \"#value\" }, { \"match\": \",\", \"name\": \"punctuation.separator.array.json\" }, { \"match\": \"[^\\\\s\\\\]]\", \"name\": \"invalid.illegal.expected-array-separator.json\" }] }, \"comments\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*(?!/)\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.documentation.json\" }, { \"begin\": \"/\\\\*\", \"captures\": { \"0\": { \"name\": \"punctuation.definition.comment.json\" } }, \"end\": \"\\\\*/\", \"name\": \"comment.block.json\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.comment.json\" } }, \"match\": \"(//).*$\\\\n?\", \"name\": \"comment.line.double-slash.js\" }] }, \"constant\": { \"match\": \"\\\\b(?:true|false|null)\\\\b\", \"name\": \"constant.language.json\" }, \"number\": { \"match\": \"(?x)\\n-?\\n(?:\\n0\\n|\\n[1-9]\\n\\\\d*\\n)\\n(?:\\n(?:\\n\\\\.\\n\\\\d+\\n)?\\n(?:\\n[eE]\\n[+-]?\\n\\\\d+\\n)?\\n)?\", \"name\": \"constant.numeric.json\" }, \"object\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.begin.json\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.dictionary.end.json\" } }, \"name\": \"meta.structure.dictionary.json\", \"patterns\": [{ \"comment\": \"the JSON object key\", \"include\": \"#objectkey\" }, { \"include\": \"#comments\" }, { \"begin\": \":\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.separator.dictionary.key-value.json\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.dictionary.pair.json\" } }, \"name\": \"meta.structure.dictionary.value.json\", \"patterns\": [{ \"comment\": \"the JSON object value\", \"include\": \"#value\" }, { \"match\": \"[^\\\\s,]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, { \"match\": \"[^\\\\s\\\\}]\", \"name\": \"invalid.illegal.expected-dictionary-separator.json\" }] }, \"objectkey\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.support.type.property-name.end.json\" } }, \"name\": \"string.json support.type.property-name.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"string\": { \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.json\" } }, \"end\": '\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.end.json\" } }, \"name\": \"string.quoted.double.json\", \"patterns\": [{ \"include\": \"#stringcontent\" }] }, \"stringcontent\": { \"patterns\": [{ \"match\": '(?x)\\n\\\\\\\\\\n(?:\\n[\"\\\\\\\\/bfnrt]\\n|\\nu\\n[0-9a-fA-F]{4})', \"name\": \"constant.character.escape.json\" }, { \"match\": \"\\\\\\\\.\", \"name\": \"invalid.illegal.unrecognized-string-escape.json\" }] }, \"value\": { \"patterns\": [{ \"include\": \"#constant\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#array\" }, { \"include\": \"#object\" }, { \"include\": \"#comments\" }] } }, \"scopeName\": \"source.json\" });\nvar json = [\n  lang\n];\n\nexport { json as default };\n","import html from './html.mjs';\nimport css from './css.mjs';\nimport json from './json.mjs';\nimport javascript from './javascript.mjs';\n\nconst lang = Object.freeze({ \"displayName\": \"Liquid\", \"fileTypes\": [\"liquid\"], \"foldingStartMarker\": \"(?x)\\n{%\\n  -?\\n  \\\\s*\\n  (capture|case|comment|for|form|if|javascript|paginate|schema|style)\\n  [^(%})]+\\n%}\\n\", \"foldingStopMarker\": \"(?x)\\n{%\\n  \\\\s*\\n  (endcapture|endcase|endcomment|endfor|endform|endif|endjavascript|endpaginate|endschema|endstyle)\\n  [^(%})]+\\n%}\\n\", \"injections\": { \"L:meta.embedded.block.js, L:meta.embedded.block.css, L:meta.embedded.block.html, L:string.quoted\": { \"patterns\": [{ \"include\": \"#injection\" }] } }, \"name\": \"liquid\", \"patterns\": [{ \"include\": \"#core\" }], \"repository\": { \"attribute\": { \"begin\": \"\\\\w+:\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.liquid\" } }, \"end\": \"(?=,|%}|}}|\\\\|)\", \"patterns\": [{ \"include\": \"#value_expression\" }] }, \"attribute_liquid\": { \"begin\": \"\\\\w+:\", \"beginCaptures\": { \"0\": { \"name\": \"entity.other.attribute-name.liquid\" } }, \"end\": \"(?=,|\\\\|)|$\", \"patterns\": [{ \"include\": \"#value_expression\" }] }, \"comment_block\": { \"begin\": \"{%-?\\\\s*comment\\\\s*-?%}\", \"end\": \"{%-?\\\\s*endcomment\\\\s*-?%}\", \"name\": \"comment.block.liquid\", \"patterns\": [{ \"include\": \"#comment_block\" }, { \"match\": \"(.(?!{%-?\\\\s*(comment|endcomment)\\\\s*-?%}))*.\" }] }, \"core\": { \"patterns\": [{ \"include\": \"#raw_tag\" }, { \"include\": \"#comment_block\" }, { \"include\": \"#style_codefence\" }, { \"include\": \"#stylesheet_codefence\" }, { \"include\": \"#json_codefence\" }, { \"include\": \"#javascript_codefence\" }, { \"include\": \"#object\" }, { \"include\": \"#tag\" }, { \"include\": \"text.html.basic\" }] }, \"filter\": { \"captures\": { \"1\": { \"name\": \"support.function.liquid\" } }, \"match\": \"\\\\|\\\\s*((?![\\\\.0-9])[a-zA-Z0-9_-]+\\\\:?)\\\\s*\" }, \"injection\": { \"patterns\": [{ \"include\": \"#raw_tag\" }, { \"include\": \"#comment_block\" }, { \"include\": \"#object\" }, { \"include\": \"#tag_injection\" }] }, \"invalid_range\": { \"match\": \"\\\\((.(?!\\\\.\\\\.))+\\\\)\", \"name\": \"invalid.illegal.range.liquid\" }, \"javascript_codefence\": { \"begin\": \"({%-?)\\\\s*(javascript)\\\\s*(-?%})\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.javascript.start.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.liquid\" }, \"2\": { \"name\": \"entity.name.tag.javascript.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.begin.liquid\" } }, \"contentName\": \"meta.embedded.block.js\", \"end\": \"({%-?)\\\\s*(endjavascript)\\\\s*(-?%})\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.javascript.end.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.end.liquid\" }, \"2\": { \"name\": \"entity.name.tag.javascript.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.block.javascript.liquid\", \"patterns\": [{ \"include\": \"source.js\" }] }, \"json_codefence\": { \"begin\": \"({%-?)\\\\s*(schema)\\\\s*(-?%})\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.schema.start.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.liquid\" }, \"2\": { \"name\": \"entity.name.tag.schema.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.begin.liquid\" } }, \"contentName\": \"meta.embedded.block.json\", \"end\": \"({%-?)\\\\s*(endschema)\\\\s*(-?%})\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.schema.end.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.end.liquid\" }, \"2\": { \"name\": \"entity.name.tag.schema.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.block.schema.liquid\", \"patterns\": [{ \"include\": \"source.json\" }] }, \"language_constant\": { \"match\": \"\\\\b(false|true|nil|blank)\\\\b|empty(?!\\\\?)\", \"name\": \"constant.language.liquid\" }, \"number\": { \"match\": \"((-|\\\\+)\\\\s*)?[0-9]+(\\\\.[0-9]+)?\", \"name\": \"constant.numeric.liquid\" }, \"object\": { \"begin\": \"(?<!comment %})(?<!comment -%})(?<!comment%})(?<!comment-%})(?<!raw %})(?<!raw -%})(?<!raw%})(?<!raw-%}){{-?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.begin.liquid\" } }, \"end\": \"-?}}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.object.liquid\", \"patterns\": [{ \"include\": \"#filter\" }, { \"include\": \"#attribute\" }, { \"include\": \"#value_expression\" }] }, \"operator\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.expression.liquid\" } }, \"match\": \"(?:(?<=\\\\s)|\\\\b)(\\\\=\\\\=|!\\\\=|\\\\>|\\\\<|\\\\>\\\\=|\\\\<\\\\=|or|and|contains)(?:(?=\\\\s)|\\\\b)\" }, \"range\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.begin.liquid\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.parens.end.liquid\" } }, \"name\": \"meta.range.liquid\", \"patterns\": [{ \"match\": \"\\\\.\\\\.\", \"name\": \"punctuation.range.liquid\" }, { \"include\": \"#variable_lookup\" }, { \"include\": \"#number\" }] }, \"raw_tag\": { \"begin\": \"{%-?\\\\s*(raw)\\\\s*-?%}\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.liquid\" } }, \"contentName\": \"string.unquoted.liquid\", \"end\": \"{%-?\\\\s*(endraw)\\\\s*-?%}\", \"endCaptures\": { \"1\": { \"name\": \"entity.name.tag.liquid\" } }, \"name\": \"meta.entity.tag.raw.liquid\", \"patterns\": [{ \"match\": \"(.(?!{%-?\\\\s*endraw\\\\s*-?%}))*.\" }] }, \"string\": { \"patterns\": [{ \"include\": \"#string_single\" }, { \"include\": \"#string_double\" }] }, \"string_double\": { \"begin\": '\"', \"end\": '\"', \"name\": \"string.quoted.double.liquid\" }, \"string_single\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.liquid\" }, \"style_codefence\": { \"begin\": \"({%-?)\\\\s*(style)\\\\s*(-?%})\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.style.start.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.liquid\" }, \"2\": { \"name\": \"entity.name.tag.style.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.begin.liquid\" } }, \"contentName\": \"meta.embedded.block.css\", \"end\": \"({%-?)\\\\s*(endstyle)\\\\s*(-?%})\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.style.end.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.end.liquid\" }, \"2\": { \"name\": \"entity.name.tag.style.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.block.style.liquid\", \"patterns\": [{ \"include\": \"source.css\" }] }, \"stylesheet_codefence\": { \"begin\": \"({%-?)\\\\s*(stylesheet)\\\\s*(-?%})\", \"beginCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.style.start.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.begin.liquid\" }, \"2\": { \"name\": \"entity.name.tag.style.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.begin.liquid\" } }, \"contentName\": \"meta.embedded.block.css\", \"end\": \"({%-?)\\\\s*(endstylesheet)\\\\s*(-?%})\", \"endCaptures\": { \"0\": { \"name\": \"meta.tag.metadata.style.end.liquid\" }, \"1\": { \"name\": \"punctuation.definition.tag.end.liquid\" }, \"2\": { \"name\": \"entity.name.tag.style.liquid\" }, \"3\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.block.style.liquid\", \"patterns\": [{ \"include\": \"source.css\" }] }, \"tag\": { \"begin\": \"(?<!comment %})(?<!comment -%})(?<!comment%})(?<!comment-%})(?<!raw %})(?<!raw -%})(?<!raw%})(?<!raw-%}){%-?\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.begin.liquid\" } }, \"end\": \"-?%}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.tag.liquid\", \"patterns\": [{ \"include\": \"#tag_body\" }] }, \"tag_assign\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(assign|echo)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.liquid\", \"patterns\": [{ \"include\": \"#filter\" }, { \"include\": \"#attribute\" }, { \"include\": \"#value_expression\" }] }, \"tag_assign_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(assign|echo)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.liquid\", \"patterns\": [{ \"include\": \"#filter\" }, { \"include\": \"#attribute_liquid\" }, { \"include\": \"#value_expression\" }] }, \"tag_body\": { \"patterns\": [{ \"include\": \"#tag_liquid\" }, { \"include\": \"#tag_assign\" }, { \"include\": \"#tag_comment_inline\" }, { \"include\": \"#tag_case\" }, { \"include\": \"#tag_conditional\" }, { \"include\": \"#tag_for\" }, { \"include\": \"#tag_paginate\" }, { \"include\": \"#tag_render\" }, { \"include\": \"#tag_tablerow\" }, { \"include\": \"#tag_expression\" }] }, \"tag_case\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(case|when)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.case.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.case.liquid\", \"patterns\": [{ \"include\": \"#value_expression\" }] }, \"tag_case_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(case|when)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.case.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.case.liquid\", \"patterns\": [{ \"include\": \"#value_expression\" }] }, \"tag_comment_block_liquid\": { \"begin\": \"(?:^\\\\s*)(comment)\\\\b\", \"end\": \"(?:^\\\\s*)(endcomment)\\\\b\", \"name\": \"comment.block.liquid\", \"patterns\": [{ \"include\": \"#tag_comment_block_liquid\" }, { \"match\": \"(?:^\\\\s*)(?!(comment|endcomment)).*\" }] }, \"tag_comment_inline\": { \"begin\": \"#\", \"end\": \"(?=%})\", \"name\": \"comment.line.number-sign.liquid\" }, \"tag_comment_inline_liquid\": { \"begin\": \"(?:^\\\\s*)#.*\", \"end\": \"$\", \"name\": \"comment.line.number-sign.liquid\" }, \"tag_conditional\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(if|elsif|unless)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.conditional.liquid\", \"patterns\": [{ \"include\": \"#value_expression\" }] }, \"tag_conditional_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(if|elsif|unless)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.conditional.liquid\", \"patterns\": [{ \"include\": \"#value_expression\" }] }, \"tag_expression\": { \"patterns\": [{ \"include\": \"#tag_expression_without_arguments\" }, { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(\\\\w+)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.liquid\", \"patterns\": [{ \"include\": \"#value_expression\" }] }] }, \"tag_expression_liquid\": { \"patterns\": [{ \"include\": \"#tag_expression_without_arguments\" }, { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(\\\\w+)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.liquid\", \"patterns\": [{ \"include\": \"#value_expression\" }] }] }, \"tag_expression_without_arguments\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.control.conditional.liquid\" } }, \"match\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(endunless|endif)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.loop.liquid\" } }, \"match\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(endfor|endtablerow|endpaginate)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.case.liquid\" } }, \"match\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(endcase)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.other.liquid\" } }, \"match\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(capture|case|comment|for|form|if|javascript|paginate|schema|style)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.other.liquid\" } }, \"match\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(endcapture|endcase|endcomment|endfor|endform|endif|endjavascript|endpaginate|endschema|endstyle)\\\\b\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.other.liquid\" } }, \"match\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(else|break|continue)\\\\b\" }] }, \"tag_for\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(for)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.for.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.for.liquid\", \"patterns\": [{ \"include\": \"#tag_for_body\" }] }, \"tag_for_body\": { \"patterns\": [{ \"match\": \"\\\\b(in|reversed)\\\\b\", \"name\": \"keyword.control.liquid\" }, { \"match\": \"\\\\b(offset|limit):\", \"name\": \"keyword.control.liquid\" }, { \"include\": \"#value_expression\" }] }, \"tag_for_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(for)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.for.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.for.liquid\", \"patterns\": [{ \"include\": \"#tag_for_body\" }] }, \"tag_injection\": { \"begin\": \"(?<!comment %})(?<!comment -%})(?<!comment%})(?<!comment-%})(?<!raw %})(?<!raw -%})(?<!raw%})(?<!raw-%}){%-?(?!-?\\\\s*(endstyle|endjavascript|endcomment|endraw))\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"end\": \"-?%}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.liquid\" } }, \"name\": \"meta.tag.liquid\", \"patterns\": [{ \"include\": \"#tag_body\" }] }, \"tag_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(liquid)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.liquid.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.liquid.liquid\", \"patterns\": [{ \"include\": \"#tag_comment_block_liquid\" }, { \"include\": \"#tag_comment_inline_liquid\" }, { \"include\": \"#tag_assign_liquid\" }, { \"include\": \"#tag_case_liquid\" }, { \"include\": \"#tag_conditional_liquid\" }, { \"include\": \"#tag_for_liquid\" }, { \"include\": \"#tag_paginate_liquid\" }, { \"include\": \"#tag_render_liquid\" }, { \"include\": \"#tag_tablerow_liquid\" }, { \"include\": \"#tag_expression_liquid\" }] }, \"tag_paginate\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(paginate)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.paginate.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.paginate.liquid\", \"patterns\": [{ \"include\": \"#tag_paginate_body\" }] }, \"tag_paginate_body\": { \"patterns\": [{ \"match\": \"\\\\b(by)\\\\b\", \"name\": \"keyword.control.liquid\" }, { \"include\": \"#value_expression\" }] }, \"tag_paginate_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(paginate)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.paginate.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.paginate.liquid\", \"patterns\": [{ \"include\": \"#tag_paginate_body\" }] }, \"tag_render\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(render)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.render.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.render.liquid\", \"patterns\": [{ \"include\": \"#tag_render_special_keywords\" }, { \"include\": \"#attribute\" }, { \"include\": \"#value_expression\" }] }, \"tag_render_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(render)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.tag.render.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.render.liquid\", \"patterns\": [{ \"include\": \"#tag_render_special_keywords\" }, { \"include\": \"#attribute_liquid\" }, { \"include\": \"#value_expression\" }] }, \"tag_render_special_keywords\": { \"match\": \"\\\\b(with|as|for)\\\\b\", \"name\": \"keyword.control.other.liquid\" }, \"tag_tablerow\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(tablerow)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.tablerow.liquid\" } }, \"end\": \"(?=%})\", \"name\": \"meta.entity.tag.tablerow.liquid\", \"patterns\": [{ \"include\": \"#tag_tablerow_body\" }] }, \"tag_tablerow_body\": { \"patterns\": [{ \"match\": \"\\\\b(in)\\\\b\", \"name\": \"keyword.control.liquid\" }, { \"match\": \"\\\\b(cols|offset|limit):\", \"name\": \"keyword.control.liquid\" }, { \"include\": \"#value_expression\" }] }, \"tag_tablerow_liquid\": { \"begin\": \"(?:(?:(?<={%)|(?<={%-)|^)\\\\s*)(tablerow)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.tablerow.liquid\" } }, \"end\": \"$\", \"name\": \"meta.entity.tag.tablerow.liquid\", \"patterns\": [{ \"include\": \"#tag_tablerow_body\" }] }, \"value_expression\": { \"patterns\": [{ \"captures\": { \"2\": { \"name\": \"invalid.illegal.filter.liquid\" }, \"3\": { \"name\": \"invalid.illegal.filter.liquid\" } }, \"match\": \"(\\\\[)(\\\\|)(?=[^\\\\]]*)(?=\\\\])\" }, { \"match\": \"(?<=\\\\s)(\\\\+|\\\\-|\\\\/|\\\\*)(?=\\\\s)\", \"name\": \"invalid.illegal.filter.liquid\" }, { \"include\": \"#language_constant\" }, { \"include\": \"#operator\" }, { \"include\": \"#invalid_range\" }, { \"include\": \"#range\" }, { \"include\": \"#number\" }, { \"include\": \"#string\" }, { \"include\": \"#variable_lookup\" }] }, \"variable_lookup\": { \"patterns\": [{ \"match\": \"\\\\b(additional_checkout_buttons|address|all_country_option_tags|all_products|article|articles|block|blog|blogs|canonical_url|cart|checkout|collection|collections|comment|content_for_additional_checkout_buttons|content_for_header|content_for_index|content_for_layout|country_option_tags|currency|current_page|current_tags|customer|customer_address|discount_allocation|discount_application|external_video|font|forloop|form|fulfillment|gift_card|handle|image|images|line_item|link|linklist|linklists|location|localization|metafield|model|model_source|order|page|page_description|page_image|page_title|pages|paginate|part|policy|powered_by_link|predictive_search|product|product_option|product_variant|recommendations|request|routes|script|scripts|search|section|selling_plan|selling_plan_allocation|selling_plan_group|settings|shipping_method|shop|shop_locale|store_availability|tablerow|tax_line|template|theme|transaction|unit_price_measurement|variant|video|video_source)\\\\b\", \"name\": \"variable.language.liquid\" }, { \"match\": \"((?<=\\\\w\\\\:\\\\s)\\\\w+)\", \"name\": \"variable.parameter.liquid\" }, { \"begin\": \"(?<=\\\\w)\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.brackets.begin.liquid\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.brackets.end.liquid\" } }, \"name\": \"meta.brackets.liquid\", \"patterns\": [{ \"include\": \"#string\" }] }, { \"match\": \"(?<=(\\\\w|\\\\])\\\\.)([-\\\\w]+\\\\??)\", \"name\": \"variable.other.member.liquid\" }, { \"match\": \"(?<=\\\\w)\\\\.(?=\\\\w)\", \"name\": \"punctuation.accessor.liquid\" }, { \"match\": \"(?i)[a-z_](\\\\w|(?:-(?!\\\\}\\\\})))*\", \"name\": \"variable.other.liquid\" }] } }, \"scopeName\": \"text.html.liquid\", \"embeddedLangs\": [\"html\", \"css\", \"json\", \"javascript\"] });\nvar liquid = [\n  ...html,\n  ...css,\n  ...json,\n  ...javascript,\n  lang\n];\n\nexport { liquid as default };\n"],"names":["json","Object","freeze","lang","liquid","html","css","javascript"],"sourceRoot":""}