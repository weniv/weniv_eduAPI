{"version":3,"file":"static/js/1922.11a77a77.chunk.js","mappings":"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","sources":["../node_modules/shiki/dist/langs/kotlin.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Kotlin\", \"fileTypes\": [\"kt\", \"kts\"], \"name\": \"kotlin\", \"patterns\": [{ \"include\": \"#import\" }, { \"include\": \"#package\" }, { \"include\": \"#code\" }], \"repository\": { \"annotation-simple\": { \"match\": \"(?<!\\\\w)@[\\\\w\\\\.]+\\\\b(?!:)\", \"name\": \"entity.name.type.annotation.kotlin\" }, \"annotation-site\": { \"begin\": \"(?<!\\\\w)(@\\\\w+):\\\\s*(?!\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.annotation-site.kotlin\" } }, \"end\": \"$\", \"patterns\": [{ \"include\": \"#unescaped-annotation\" }] }, \"annotation-site-list\": { \"begin\": \"(?<!\\\\w)(@\\\\w+):\\\\s*\\\\[\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.type.annotation-site.kotlin\" } }, \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#unescaped-annotation\" }] }, \"binary-literal\": { \"match\": \"0(b|B)[01][01_]*\", \"name\": \"constant.numeric.binary.kotlin\" }, \"boolean-literal\": { \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.kotlin\" }, \"character\": { \"begin\": \"'\", \"end\": \"'\", \"name\": \"string.quoted.single.kotlin\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.kotlin\" }] }, \"class-declaration\": { \"captures\": { \"1\": { \"name\": \"storage.type.class.kotlin\" }, \"2\": { \"name\": \"entity.name.type.class.kotlin\" }, \"3\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\b(class|(?:fun\\\\s+)?interface)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\" }, \"code\": { \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#keywords\" }, { \"include\": \"#annotation-simple\" }, { \"include\": \"#annotation-site-list\" }, { \"include\": \"#annotation-site\" }, { \"include\": \"#class-declaration\" }, { \"include\": \"#object\" }, { \"include\": \"#type-alias\" }, { \"include\": \"#function\" }, { \"include\": \"#variable-declaration\" }, { \"include\": \"#type-constraint\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#function-call\" }, { \"include\": \"#method-reference\" }, { \"include\": \"#key\" }, { \"include\": \"#string\" }, { \"include\": \"#string-empty\" }, { \"include\": \"#string-multiline\" }, { \"include\": \"#character\" }, { \"include\": \"#lambda-arrow\" }, { \"include\": \"#operators\" }, { \"include\": \"#self-reference\" }, { \"include\": \"#decimal-literal\" }, { \"include\": \"#hex-literal\" }, { \"include\": \"#binary-literal\" }, { \"include\": \"#boolean-literal\" }, { \"include\": \"#null-literal\" }] }, \"comment-block\": { \"begin\": \"/\\\\*(?!\\\\*)\", \"end\": \"\\\\*/\", \"name\": \"comment.block.kotlin\" }, \"comment-javadoc\": { \"patterns\": [{ \"begin\": \"/\\\\*\\\\*\", \"end\": \"\\\\*/\", \"name\": \"comment.block.javadoc.kotlin\", \"patterns\": [{ \"match\": \"@(return|constructor|receiver|sample|see|author|since|suppress)\\\\b\", \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"variable.parameter.kotlin\" } }, \"match\": \"(@param|@property)\\\\s+(\\\\S+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"variable.parameter.kotlin\" } }, \"match\": \"(@param)\\\\[(\\\\S+)\\\\]\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"entity.name.type.class.kotlin\" } }, \"match\": \"(@(?:exception|throws))\\\\s+(\\\\S+)\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.documentation.javadoc.kotlin\" }, \"2\": { \"name\": \"entity.name.type.class.kotlin\" }, \"3\": { \"name\": \"variable.parameter.kotlin\" } }, \"match\": \"{(@link)\\\\s+(\\\\S+)?#([\\\\w$]+\\\\s*\\\\([^\\\\(\\\\)]*\\\\)).*}\" }] }] }, \"comment-line\": { \"begin\": \"//\", \"end\": \"$\", \"name\": \"comment.line.double-slash.kotlin\" }, \"comments\": { \"patterns\": [{ \"include\": \"#comment-line\" }, { \"include\": \"#comment-block\" }, { \"include\": \"#comment-javadoc\" }] }, \"control-keywords\": { \"match\": \"\\\\b(if|else|while|do|when|try|throw|break|continue|return|for)\\\\b\", \"name\": \"keyword.control.kotlin\" }, \"decimal-literal\": { \"match\": \"\\\\b\\\\d[\\\\d_]*(\\\\.[\\\\d_]+)?((e|E)\\\\d+)?(u|U)?(L|F|f)?\\\\b\", \"name\": \"constant.numeric.decimal.kotlin\" }, \"function\": { \"captures\": { \"1\": { \"name\": \"storage.type.function.kotlin\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] }, \"4\": { \"name\": \"entity.name.type.class.extension.kotlin\" }, \"5\": { \"name\": \"entity.name.function.declaration.kotlin\" } }, \"match\": \"\\\\b(fun)\\\\b\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\\\\s*(?:(?:(\\\\w+)\\\\.)?(\\\\b\\\\w+\\\\b|`[^`]+`))?\" }, \"function-call\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.call.kotlin\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\??\\\\.?(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\\\\s*(?=[({])\" }, \"hard-keywords\": { \"match\": \"\\\\b(as|typeof|is|in)\\\\b\", \"name\": \"keyword.hard.kotlin\" }, \"hex-literal\": { \"match\": \"0(x|X)[A-Fa-f0-9][A-Fa-f0-9_]*(u|U)?\", \"name\": \"constant.numeric.hex.kotlin\" }, \"import\": { \"begin\": \"\\\\b(import)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.import.kotlin\" } }, \"contentName\": \"entity.name.package.kotlin\", \"end\": \";|$\", \"name\": \"meta.import.kotlin\", \"patterns\": [{ \"include\": \"#comments\" }, { \"include\": \"#hard-keywords\" }, { \"match\": \"\\\\*\", \"name\": \"variable.language.wildcard.kotlin\" }] }, \"key\": { \"captures\": { \"1\": { \"name\": \"variable.parameter.kotlin\" }, \"2\": { \"name\": \"keyword.operator.assignment.kotlin\" } }, \"match\": \"\\\\b(\\\\w=)\\\\s*(=)\" }, \"keywords\": { \"patterns\": [{ \"include\": \"#prefix-modifiers\" }, { \"include\": \"#postfix-modifiers\" }, { \"include\": \"#soft-keywords\" }, { \"include\": \"#hard-keywords\" }, { \"include\": \"#control-keywords\" }] }, \"lambda-arrow\": { \"match\": \"->\", \"name\": \"storage.type.function.arrow.kotlin\" }, \"method-reference\": { \"captures\": { \"1\": { \"name\": \"entity.name.function.reference.kotlin\" } }, \"match\": \"\\\\??::(\\\\b\\\\w+\\\\b|`[^`]+`)\" }, \"null-literal\": { \"match\": \"\\\\bnull\\\\b\", \"name\": \"constant.language.null.kotlin\" }, \"object\": { \"captures\": { \"1\": { \"name\": \"storage.type.object.kotlin\" }, \"2\": { \"name\": \"entity.name.type.object.kotlin\" } }, \"match\": \"\\\\b(object)(?:\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`))?\" }, \"operators\": { \"patterns\": [{ \"match\": \"(===?|\\\\!==?|<=|>=|<|>)\", \"name\": \"keyword.operator.comparison.kotlin\" }, { \"match\": \"([+*/%-]=)\", \"name\": \"keyword.operator.assignment.arithmetic.kotlin\" }, { \"match\": \"(=)\", \"name\": \"keyword.operator.assignment.kotlin\" }, { \"match\": \"([+*/%-])\", \"name\": \"keyword.operator.arithmetic.kotlin\" }, { \"match\": \"(!|&&|\\\\|\\\\|)\", \"name\": \"keyword.operator.logical.kotlin\" }, { \"match\": \"(--|\\\\+\\\\+)\", \"name\": \"keyword.operator.increment-decrement.kotlin\" }, { \"match\": \"(\\\\.\\\\.)\", \"name\": \"keyword.operator.range.kotlin\" }] }, \"package\": { \"begin\": \"\\\\b(package)\\\\b\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.package.kotlin\" } }, \"contentName\": \"entity.name.package.kotlin\", \"end\": \";|$\", \"name\": \"meta.package.kotlin\", \"patterns\": [{ \"include\": \"#comments\" }] }, \"postfix-modifiers\": { \"match\": \"\\\\b(where|by|get|set)\\\\b\", \"name\": \"storage.modifier.other.kotlin\" }, \"prefix-modifiers\": { \"match\": \"\\\\b(abstract|final|enum|open|annotation|sealed|data|override|final|lateinit|private|protected|public|internal|inner|companion|noinline|crossinline|vararg|reified|tailrec|operator|infix|inline|external|const|suspend|value)\\\\b\", \"name\": \"storage.modifier.other.kotlin\" }, \"self-reference\": { \"match\": \"\\\\b(this|super)(@\\\\w+)?\\\\b\", \"name\": \"variable.language.this.kotlin\" }, \"soft-keywords\": { \"match\": \"\\\\b(catch|finally|field)\\\\b\", \"name\": \"keyword.soft.kotlin\" }, \"string\": { \"begin\": '(?<!\")\"(?!\")', \"end\": '\"', \"name\": \"string.quoted.double.kotlin\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.kotlin\" }, { \"include\": \"#string-escape-simple\" }, { \"include\": \"#string-escape-bracketed\" }] }, \"string-empty\": { \"match\": '(?<!\")\"\"(?!\")', \"name\": \"string.quoted.double.kotlin\" }, \"string-escape-bracketed\": { \"begin\": \"(?<!\\\\\\\\)(\\\\$\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.template-expression.begin\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.template-expression.end\" } }, \"name\": \"meta.template.expression.kotlin\", \"patterns\": [{ \"include\": \"#code\" }] }, \"string-escape-simple\": { \"match\": \"(?<!\\\\\\\\)\\\\$\\\\w+\\\\b\", \"name\": \"variable.string-escape.kotlin\" }, \"string-multiline\": { \"begin\": '\"\"\"', \"end\": '\"\"\"', \"name\": \"string.quoted.double.kotlin\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.kotlin\" }, { \"include\": \"#string-escape-simple\" }, { \"include\": \"#string-escape-bracketed\" }] }, \"type-alias\": { \"captures\": { \"1\": { \"name\": \"storage.type.alias.kotlin\" }, \"2\": { \"name\": \"entity.name.type.kotlin\" }, \"3\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\b(typealias)\\\\s+(\\\\b\\\\w+\\\\b|`[^`]+`)\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\" }, \"type-annotation\": { \"captures\": { \"0\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": `(?<![:?]):\\\\s*(\\\\w|\\\\?|\\\\s|->|(?<GROUP>[<(]([^<>()\"']|\\\\g<GROUP>)+[)>]))+` }, \"type-parameter\": { \"patterns\": [{ \"match\": \"\\\\b\\\\w+\\\\b\", \"name\": \"entity.name.type.kotlin\" }, { \"match\": \"\\\\b(in|out)\\\\b\", \"name\": \"storage.modifier.kotlin\" }] }, \"unescaped-annotation\": { \"match\": \"\\\\b[\\\\w\\\\.]+\\\\b\", \"name\": \"entity.name.type.annotation.kotlin\" }, \"variable-declaration\": { \"captures\": { \"1\": { \"name\": \"storage.type.variable.kotlin\" }, \"2\": { \"patterns\": [{ \"include\": \"#type-parameter\" }] } }, \"match\": \"\\\\b(val|var)\\\\b\\\\s*(?<GROUP><([^<>]|\\\\g<GROUP>)+>)?\" } }, \"scopeName\": \"source.kotlin\", \"aliases\": [\"kt\", \"kts\"] });\nvar kotlin = [\n  lang\n];\n\nexport { kotlin as default };\n"],"names":["kotlin","Object","freeze"],"sourceRoot":""}