{"version":3,"file":"static/js/6200.e15d1ff0.chunk.js","mappings":"0IACA,IAAIA,EAAS,CADAC,OAAOC,OAAO,CAAE,YAAe,SAAU,UAAa,CAAC,MAAO,UAAW,MAAO,MAAO,OAAQ,KAAQ,SAAU,SAAY,CAAC,CAAE,QAAW,qBAAuB,CAAE,QAAW,4BAA8B,CAAE,QAAW,wBAA0B,CAAE,QAAW,qBAAuB,CAAE,QAAW,qBAAuB,CAAE,QAAW,oBAAsB,CAAE,QAAW,cAAgB,CAAE,QAAW,aAAe,CAAE,QAAW,qBAAuB,WAAc,CAAE,KAAQ,CAAE,SAAY,CAAC,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,+CAAkD,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,6CAA8C,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,yCAA4C,MAAS,sEAAsE,KAAQ,uCAAyC,CAAE,MAAS,aAAc,KAAQ,iCAAoC,CAAE,MAAS,uBAAwB,KAAQ,2CAA8C,sBAAuB,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,sDAAwD,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,MAAS,qFAAsF,KAAQ,mCAAqC,OAAU,CAAE,MAAS,OAAQ,cAAiB,CAAE,EAAK,CAAE,KAAQ,+CAAkD,IAAO,OAAQ,YAAe,CAAE,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,+BAAgC,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,uCAAyC,EAAK,CAAE,KAAQ,4CAA+C,MAAS,WAAa,CAAE,QAAW,6BAA+B,CAAE,QAAW,sBAAyB,UAAa,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,oCAAsC,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,yCAA4C,MAAS,6EAA6E,KAAQ,6BAA+B,CAAE,MAAS,gBAAiB,KAAQ,oCAAsC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,4CAA+C,MAAS,cAAe,KAAQ,6BAA+B,CAAE,MAAS,QAAS,KAAQ,sCAAyC,QAAW,CAAE,MAAS,mBAAoB,cAAiB,CAAE,EAAK,CAAE,KAAQ,kDAAqD,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,IAAK,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA6C,IAAO,MAAO,KAAQ,oCAAuC,mBAAoB,CAAE,SAAY,CAAC,CAAE,MAAS,8DAA+D,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,iDAAoD,IAAO,kBAAmB,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,MAAS,6DAA8D,IAAO,kBAAmB,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,+BAAgC,SAAY,CAAC,CAAE,MAAS,mEAAoE,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,mDAAsD,IAAO,eAAgB,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,4CAA+C,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,2CAA6C,CAAE,QAAW,sBAAyB,CAAE,MAAS,0BAA2B,KAAQ,uCAAyC,CAAE,QAAW,wBAA4B,UAAa,CAAE,SAAY,CAAC,CAAE,MAAS,kDAAmD,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,oCAAsC,EAAK,CAAE,KAAQ,mDAAsD,IAAO,mBAAoB,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,wBAAyB,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,oCAAsC,EAAK,CAAE,KAAQ,6CAAgD,MAAS,iDAAkD,KAAQ,2BAA8B,UAAa,CAAE,MAAS,iCAAkC,cAAiB,CAAE,EAAK,CAAE,KAAQ,0CAA4C,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,kCAAqC,QAAW,mIAAoI,IAAO,oBAAqB,YAAe,CAAE,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,+BAAiC,kBAAmB,CAAE,SAAY,CAAC,CAAE,QAAW,YAAc,CAAE,QAAW,iBAAmB,CAAE,QAAW,gBAAkB,CAAE,QAAW,eAAiB,CAAE,QAAW,YAAc,CAAE,QAAW,qBAAuB,CAAE,QAAW,sBAAwB,CAAE,QAAW,kBAAoB,CAAE,QAAW,UAAY,CAAE,QAAW,SAAW,CAAE,QAAW,WAAa,CAAE,QAAW,6BAA+B,CAAE,QAAW,cAAgB,CAAE,QAAW,WAAa,CAAE,QAAW,SAAW,CAAE,QAAW,oBAAsB,CAAE,QAAW,iBAAmB,CAAE,QAAW,cAAgB,CAAE,QAAW,WAAa,CAAE,QAAW,sBAAwB,CAAE,QAAW,eAAkB,WAAc,CAAE,SAAY,CAAC,CAAE,MAAS,aAAc,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAiC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,4BAA6B,SAAY,CAAC,CAAE,QAAW,oCAAsC,CAAE,QAAW,sBAAyB,CAAE,MAAS,eAAgB,cAAiB,CAAE,EAAK,CAAE,KAAQ,gCAAmC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,8BAA+B,SAAY,CAAC,CAAE,QAAW,oCAAsC,CAAE,QAAW,sBAAyB,CAAE,MAAS,kBAAmB,cAAiB,CAAE,EAAK,CAAE,KAAQ,mCAAsC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,iCAAkC,SAAY,CAAC,CAAE,QAAW,oCAAsC,CAAE,QAAW,sBAAyB,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8BAAgC,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,yBAA2B,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,yBAA2B,GAAM,CAAE,KAAQ,gDAAmD,QAAW,oHAAqH,MAAS,+KAAgL,KAAQ,uCAAyC,CAAE,MAAS,uFAAwF,cAAiB,CAAE,EAAK,CAAE,KAAQ,8BAAgC,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,yBAA2B,EAAK,CAAE,KAAQ,iDAAoD,QAAW,sHAAuH,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAmD,KAAQ,sCAAuC,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,MAAS,sBAAuB,cAAiB,CAAE,EAAK,CAAE,KAAQ,+BAAkC,QAAW,6EAA8E,IAAO,MAAO,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAmD,KAAQ,sCAAuC,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,MAAS,mCAAoC,cAAiB,CAAE,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,mDAAsD,QAAW,sCAAuC,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAoD,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,+BAAkC,QAAW,+BAAgC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,6BAA8B,SAAY,CAAC,CAAE,MAAS,UAAW,IAAO,oBAAqB,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAA4C,SAAY,CAAC,CAAE,QAAW,8BAAiC,CAAE,QAAW,sBAAyB,CAAE,MAAS,cAAe,cAAiB,CAAE,EAAK,CAAE,KAAQ,+BAAkC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,6BAA8B,SAAY,CAAC,CAAE,QAAW,oCAAsC,CAAE,QAAW,sBAAyB,CAAE,MAAS,gBAAiB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAoC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,oCAAsC,CAAE,QAAW,sBAAyB,CAAE,MAAS,gBAAiB,cAAiB,CAAE,EAAK,CAAE,KAAQ,iCAAoC,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,+BAAkC,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,oCAAsC,CAAE,QAAW,wBAA4B,SAAY,CAAE,MAAS,oDAAqD,cAAiB,CAAE,EAAK,CAAE,KAAQ,2CAA8C,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,2CAA8C,KAAQ,uBAAwB,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,gCAAmC,MAAS,qDAAuD,CAAE,MAAS,UAAW,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,yCAA4C,SAAY,CAAC,CAAE,QAAW,6BAA+B,CAAE,QAAW,8BAAiC,CAAE,QAAW,sBAAyB,gBAAiB,CAAE,MAAS,0KAA2K,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAoD,KAAQ,4BAA6B,SAAY,CAAC,CAAE,MAAS,yNAA0N,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,qCAAuC,EAAK,CAAE,KAAQ,mDAAsD,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,2CAA6C,CAAE,QAAW,sBAAyB,CAAE,MAAS,+KAAgL,cAAiB,CAAE,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,yBAA2B,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,yBAA2B,EAAK,CAAE,KAAQ,mDAAsD,IAAO,UAAW,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,2CAA6C,CAAE,QAAW,wBAA4B,0BAA2B,CAAE,SAAY,CAAC,CAAE,MAAS,+EAAgF,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,4CAA+C,IAAO,kBAAmB,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,6BAAgC,CAAE,MAAS,mCAAoC,cAAiB,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,mDAAsD,IAAO,kBAAmB,YAAe,CAAE,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,KAAQ,+BAAgC,SAAY,CAAC,CAAE,QAAW,+BAAmC,kCAAmC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iDAAmD,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,6CAAgD,MAAS,gBAAkB,yBAA0B,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAAgD,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,2CAA8C,KAAQ,sCAAuC,SAAY,CAAC,CAAE,MAAS,0CAA2C,cAAiB,CAAE,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,gDAAmD,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,sCAAyC,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,QAAW,sBAAyB,0BAA2B,CAAE,SAAY,CAAC,CAAE,MAAS,UAAW,IAAO,OAAQ,YAAe,CAAE,EAAK,CAAE,KAAQ,kDAAqD,SAAY,CAAC,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,mDAAsD,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,iDAAoD,SAAY,CAAC,CAAE,MAAS,IAAK,KAAQ,2CAA6C,CAAE,QAAW,sBAAyB,CAAE,MAAS,MAAO,KAAQ,uCAAyC,CAAE,QAAW,sBAAyB,CAAE,MAAS,IAAK,KAAQ,4CAA8C,CAAE,QAAW,sBAAyB,uBAAwB,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,qDAAwD,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,mDAAsD,KAAQ,+BAAgC,SAAY,CAAC,CAAE,MAAS,wCAAyC,cAAiB,CAAE,EAAK,CAAE,KAAQ,+BAAiC,EAAK,CAAE,KAAQ,2CAA8C,IAAO,cAAe,YAAe,CAAE,EAAK,CAAE,KAAQ,8CAAiD,SAAY,CAAC,CAAE,QAAW,sBAAyB,CAAE,QAAW,sBAAyB,uBAAwB,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,wCAA0C,EAAK,CAAE,KAAQ,yCAA4C,QAAW,kBAAmB,MAAS,sEAAsE,KAAQ,oCAAsC,CAAE,MAAS,aAAc,KAAQ,iCAAmC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,6CAA+C,EAAK,CAAE,KAAQ,kDAAoD,GAAM,CAAE,KAAQ,mDAAsD,QAAW,oCAAqC,MAAS,8FAA+F,KAAQ,sDAAwD,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,QAAW,mCAAoC,MAAS,sCAAuC,KAAQ,sDAAwD,CAAE,MAAS,SAAU,KAAQ,mCAAsC,2BAA4B,CAAE,MAAS,MAAO,cAAiB,CAAE,EAAK,CAAE,KAAQ,4CAA+C,IAAO,aAAc,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,uBAAyB,EAAK,CAAE,KAAQ,sCAAwC,EAAK,CAAE,KAAQ,sCAAwC,EAAK,CAAE,KAAQ,gCAAkC,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,iDAAoD,MAAS,6HAAgI,QAAW,CAAE,MAAS,oFAAqF,KAAQ,0BAA4B,oBAAqB,CAAE,MAAS,+BAAgC,KAAQ,qBAAuB,KAAQ,CAAE,MAAS,QAAS,cAAiB,CAAE,EAAK,CAAE,KAAQ,6CAAgD,IAAO,QAAS,YAAe,CAAE,EAAK,CAAE,KAAQ,2CAA8C,KAAQ,6BAA8B,SAAY,CAAC,CAAE,MAAS,eAAgB,KAAQ,qCAAuC,CAAE,QAAW,sBAAyB,kBAAmB,CAAE,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,0CAA4C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,qCAAuC,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,MAAS,4EAA6E,KAAQ,+BAAiC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,qCAAuC,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,MAAS,6EAA8E,KAAQ,gCAAkC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,0CAA4C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,qCAAuC,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,MAAS,4EAA6E,KAAQ,iCAAoC,cAAe,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,iCAAmC,EAAK,CAAE,KAAQ,sCAAyC,MAAS,kCAAmC,KAAQ,2BAA6B,mBAAoB,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,2CAA6C,EAAK,CAAE,KAAQ,kDAAoD,EAAK,CAAE,KAAQ,mDAAqD,EAAK,CAAE,KAAQ,gDAAkD,EAAK,CAAE,KAAQ,6CAAgD,MAAS,kFAAmF,KAAQ,gCAAkC,OAAU,CAAE,MAAS,UAAW,IAAO,UAAW,SAAY,CAAC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAgD,EAAK,CAAE,KAAQ,gDAAmD,MAAS,uCAAwC,KAAQ,iCAAmC,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,yCAA2C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,yBAA0B,KAAQ,0CAA4C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sBAAuB,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,8BAA+B,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,+CAAiD,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CAAiD,MAAS,sCAAuC,KAAQ,2CAA6C,CAAE,SAAY,CAAE,EAAK,CAAE,KAAQ,8CA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","sources":["../node_modules/shiki/dist/langs/erlang.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Erlang\", \"fileTypes\": [\"erl\", \"escript\", \"hrl\", \"xrl\", \"yrl\"], \"name\": \"erlang\", \"patterns\": [{ \"include\": \"#module-directive\" }, { \"include\": \"#import-export-directive\" }, { \"include\": \"#behaviour-directive\" }, { \"include\": \"#record-directive\" }, { \"include\": \"#define-directive\" }, { \"include\": \"#macro-directive\" }, { \"include\": \"#directive\" }, { \"include\": \"#function\" }, { \"include\": \"#everything-else\" }], \"repository\": { \"atom\": { \"patterns\": [{ \"begin\": \"(')\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.symbol.begin.erlang\" } }, \"end\": \"(')\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.symbol.end.erlang\" } }, \"name\": \"constant.other.symbol.quoted.single.erlang\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.erlang\" }, \"3\": { \"name\": \"punctuation.definition.escape.erlang\" } }, \"match\": `(\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2})`, \"name\": \"constant.other.symbol.escape.erlang\" }, { \"match\": \"\\\\\\\\\\\\^?.?\", \"name\": \"invalid.illegal.atom.erlang\" }] }, { \"match\": \"[a-z][a-zA-Z\\\\d@_]*+\", \"name\": \"constant.other.symbol.unquoted.erlang\" }] }, \"behaviour-directive\": { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.behaviour.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.behaviour.definition.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(behaviour)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.behaviour.erlang\" }, \"binary\": { \"begin\": \"(<<)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.binary.begin.erlang\" } }, \"end\": \"(>>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.binary.end.erlang\" } }, \"name\": \"meta.structure.binary.erlang\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.binary.erlang\" }, \"2\": { \"name\": \"punctuation.separator.value-size.erlang\" } }, \"match\": \"(,)|(:)\" }, { \"include\": \"#internal-type-specifiers\" }, { \"include\": \"#everything-else\" }] }, \"character\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.character.erlang\" }, \"2\": { \"name\": \"constant.character.escape.erlang\" }, \"3\": { \"name\": \"punctuation.definition.escape.erlang\" }, \"5\": { \"name\": \"punctuation.definition.escape.erlang\" } }, \"match\": `(\\\\$)((\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2}))`, \"name\": \"constant.character.erlang\" }, { \"match\": \"\\\\$\\\\\\\\\\\\^?.?\", \"name\": \"invalid.illegal.character.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.character.erlang\" } }, \"match\": \"(\\\\$)[ \\\\S]\", \"name\": \"constant.character.erlang\" }, { \"match\": \"\\\\$.?\", \"name\": \"invalid.illegal.character.erlang\" }] }, \"comment\": { \"begin\": \"(^[ \\\\t]+)?(?=%)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.whitespace.comment.leading.erlang\" } }, \"end\": \"(?!\\\\G)\", \"patterns\": [{ \"begin\": \"%\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.comment.erlang\" } }, \"end\": \"\\\\n\", \"name\": \"comment.line.percentage.erlang\" }] }, \"define-directive\": { \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+(define)\\\\s*+(\\\\()\\\\s*+([a-zA-Z\\\\d@_]++)\\\\s*+\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.define.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.definition.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.define.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"(?=^\\\\s*+-\\\\s*+define\\\\s*+\\\\(\\\\s*+[a-zA-Z\\\\d@_]++\\\\s*+\\\\()\", \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.define.erlang\", \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+(define)\\\\s*+(\\\\()\\\\s*+([a-zA-Z\\\\d@_]++)\\\\s*+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.define.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.definition.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\))\\\\s*(,)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.separator.parameters.erlang\" } }, \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"match\": \"\\\\|\\\\||\\\\||:|;|,|\\\\.|->\", \"name\": \"punctuation.separator.define.erlang\" }, { \"include\": \"#everything-else\" }] }] }, \"directive\": { \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\(?)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\)?)\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.erlang\" }, \"3\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\.)\", \"name\": \"meta.directive.erlang\" }] }, \"docstring\": { \"begin\": '(?<!\")(([\"]{3,})\\\\s*)(\\\\S.*)?$', \"beginCaptures\": { \"1\": { \"name\": \"meta.string.quoted.triple.begin.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" }, \"3\": { \"name\": \"invalid.illegal.string.erlang\" } }, \"comment\": \"Only whitespace characters are allowed after the beggining and before the closing sequences and those cannot be in the same line\", \"end\": '^(\\\\s*(\\\\2))(?!\")', \"endCaptures\": { \"1\": { \"name\": \"meta.string.quoted.triple.end.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.triple.erlang\" }, \"everything-else\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#record-usage\" }, { \"include\": \"#macro-usage\" }, { \"include\": \"#expression\" }, { \"include\": \"#keyword\" }, { \"include\": \"#textual-operator\" }, { \"include\": \"#language-constant\" }, { \"include\": \"#function-call\" }, { \"include\": \"#tuple\" }, { \"include\": \"#list\" }, { \"include\": \"#binary\" }, { \"include\": \"#parenthesized-expression\" }, { \"include\": \"#character\" }, { \"include\": \"#number\" }, { \"include\": \"#atom\" }, { \"include\": \"#sigil-docstring\" }, { \"include\": \"#sigil-string\" }, { \"include\": \"#docstring\" }, { \"include\": \"#string\" }, { \"include\": \"#symbolic-operator\" }, { \"include\": \"#variable\" }] }, \"expression\": { \"patterns\": [{ \"begin\": \"\\\\b(if)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.if.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.if.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(case)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.case.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.case.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(receive)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.receive.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.receive.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"captures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"5\": { \"name\": \"variable.other.erlang\" }, \"6\": { \"name\": \"punctuation.separator.module-function.erlang\" }, \"8\": { \"name\": \"entity.name.function.erlang\" }, \"9\": { \"name\": \"variable.other.erlang\" }, \"10\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"comment\": \"Implicit function expression with optional module qualifier when both module and function can be atom or variable\", \"match\": \"\\\\b(fun)\\\\s+((([a-z][a-zA-Z\\\\d@_]*+)|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\\\\s*+)?(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*(/)\", \"name\": \"meta.expression.fun.implicit.erlang\" }, { \"begin\": \"\\\\b(fun)\\\\s+(([a-z][a-zA-Z\\\\d@_]*+)|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" }, \"3\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"4\": { \"name\": \"variable.other.erlang\" }, \"5\": { \"name\": \"punctuation.separator.module-function.erlang\" } }, \"comment\": \"Implicit function expression with module qualifier when module can be atom or variable and function can by anything\", \"end\": \"(/)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"name\": \"meta.expression.fun.implicit.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(fun)\\\\s+(?!\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" } }, \"comment\": \"Implicit function expression when both module and function can by anything\", \"end\": \"(/)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"name\": \"meta.expression.fun.implicit.erlang\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(fun)\\\\s*+(\\\\()(?=(\\\\s*+\\\\())\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.erlang\" }, \"2\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"comment\": \"Function type in type specification\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" } }, \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(fun)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.fun.erlang\" } }, \"comment\": \"Explicit function expression\", \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.fun.erlang\", \"patterns\": [{ \"begin\": \"(?=\\\\()\", \"end\": \"(;)|(?=\\\\bend\\\\b)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.clauses.erlang\" } }, \"patterns\": [{ \"include\": \"#internal-function-parts\" }] }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(try)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.try.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.try.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(begin)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.begin.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.begin.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"\\\\b(maybe)\\\\b\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.maybe.erlang\" } }, \"end\": \"\\\\b(end)\\\\b\", \"endCaptures\": { \"1\": { \"name\": \"keyword.control.end.erlang\" } }, \"name\": \"meta.expression.maybe.erlang\", \"patterns\": [{ \"include\": \"#internal-expression-punctuation\" }, { \"include\": \"#everything-else\" }] }] }, \"function\": { \"begin\": \"^\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(?=\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.definition.erlang\" } }, \"end\": \"(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.terminator.function.erlang\" } }, \"name\": \"meta.function.erlang\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"entity.name.function.erlang\" } }, \"match\": \"^\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(?=\\\\()\" }, { \"begin\": \"(?=\\\\()\", \"end\": \"(;)|(?=\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.clauses.erlang\" } }, \"patterns\": [{ \"include\": \"#parenthesized-expression\" }, { \"include\": \"#internal-function-parts\" }] }, { \"include\": \"#everything-else\" }] }, \"function-call\": { \"begin\": \"(?=([a-z][a-zA-Z\\\\d@_]*+|'[^']*+'|_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\(|:\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+'|_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)\\\\s*+\\\\())\", \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" } }, \"name\": \"meta.function-call.erlang\", \"patterns\": [{ \"begin\": \"((erlang)\\\\s*+(:)\\\\s*+)?(is_atom|is_binary|is_constant|is_float|is_function|is_integer|is_list|is_number|is_pid|is_port|is_reference|is_tuple|is_record|abs|element|hd|length|node|round|self|size|tl|trunc)\\\\s*+(\\\\()\", \"beginCaptures\": { \"2\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"3\": { \"name\": \"punctuation.separator.module-function.erlang\" }, \"4\": { \"name\": \"entity.name.function.guard.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"begin\": \"((([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(:)\\\\s*+)?(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+))\\\\s*+(\\\\()\", \"beginCaptures\": { \"3\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"4\": { \"name\": \"variable.other.erlang\" }, \"5\": { \"name\": \"punctuation.separator.module-function.erlang\" }, \"7\": { \"name\": \"entity.name.function.erlang\" }, \"8\": { \"name\": \"variable.other.erlang\" }, \"9\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(?=\\\\))\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }] }, \"import-export-directive\": { \"patterns\": [{ \"begin\": \"^\\\\s*+(-)\\\\s*+(import)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(,)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.import.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.module.erlang\" }, \"5\": { \"name\": \"punctuation.separator.parameters.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.import.erlang\", \"patterns\": [{ \"include\": \"#internal-function-list\" }] }, { \"begin\": \"^\\\\s*+(-)\\\\s*+(export)\\\\s*+(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.export.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.export.erlang\", \"patterns\": [{ \"include\": \"#internal-function-list\" }] }] }, \"internal-expression-punctuation\": { \"captures\": { \"1\": { \"name\": \"punctuation.separator.clause-head-body.erlang\" }, \"2\": { \"name\": \"punctuation.separator.clauses.erlang\" }, \"3\": { \"name\": \"punctuation.separator.expressions.erlang\" } }, \"match\": \"(->)|(;)|(,)\" }, \"internal-function-list\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.begin.erlang\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.end.erlang\" } }, \"name\": \"meta.structure.list.function.erlang\", \"patterns\": [{ \"begin\": \"([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(/)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.erlang\" }, \"2\": { \"name\": \"punctuation.separator.function-arity.erlang\" } }, \"end\": \"(,)|(?=\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.list.erlang\" } }, \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"include\": \"#everything-else\" }] }, \"internal-function-parts\": { \"patterns\": [{ \"begin\": \"(?=\\\\()\", \"end\": \"(->)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.clause-head-body.erlang\" } }, \"patterns\": [{ \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" } }, \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.parameters.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"match\": \",|;\", \"name\": \"punctuation.separator.guards.erlang\" }, { \"include\": \"#everything-else\" }] }, { \"match\": \",\", \"name\": \"punctuation.separator.expressions.erlang\" }, { \"include\": \"#everything-else\" }] }, \"internal-record-body\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.class.record.begin.erlang\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.class.record.end.erlang\" } }, \"name\": \"meta.structure.record.erlang\", \"patterns\": [{ \"begin\": \"(([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')|(_))\", \"beginCaptures\": { \"2\": { \"name\": \"variable.other.field.erlang\" }, \"3\": { \"name\": \"variable.language.omitted.field.erlang\" } }, \"end\": \"(,)|(?=\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.separator.class.record.erlang\" } }, \"patterns\": [{ \"include\": \"#everything-else\" }] }, { \"include\": \"#everything-else\" }] }, \"internal-string-body\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.definition.escape.erlang\" }, \"3\": { \"name\": \"punctuation.definition.escape.erlang\" } }, \"comment\": \"escape sequence\", \"match\": `(\\\\\\\\)([bdefnrstv\\\\\\\\'\"]|(\\\\^)[@-_a-z]|[0-7]{1,3}|x[\\\\da-fA-F]{2})`, \"name\": \"constant.character.escape.erlang\" }, { \"match\": \"\\\\\\\\\\\\^?.?\", \"name\": \"invalid.illegal.string.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.placeholder.erlang\" }, \"6\": { \"name\": \"punctuation.separator.placeholder-parts.erlang\" }, \"10\": { \"name\": \"punctuation.separator.placeholder-parts.erlang\" } }, \"comment\": \"io:fwrite format control sequence\", \"match\": \"(~)((\\\\-)?\\\\d++|(\\\\*))?((\\\\.)(\\\\d++|(\\\\*))?((\\\\.)((\\\\*)|.))?)?[tlkK]*[~cfegswpWPBX#bx\\\\+ni]\", \"name\": \"constant.character.format.placeholder.other.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.definition.placeholder.erlang\" } }, \"comment\": \"io:fread format control sequence\", \"match\": \"(~)(\\\\*)?(\\\\d++)?(t)?[~du\\\\-#fsacl]\", \"name\": \"constant.character.format.placeholder.other.erlang\" }, { \"match\": '~[^\"]?', \"name\": \"invalid.illegal.string.erlang\" }] }, \"internal-type-specifiers\": { \"begin\": \"(/)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.separator.value-type.erlang\" } }, \"end\": \"(?=,|:|>>)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"storage.type.erlang\" }, \"2\": { \"name\": \"storage.modifier.signedness.erlang\" }, \"3\": { \"name\": \"storage.modifier.endianness.erlang\" }, \"4\": { \"name\": \"storage.modifier.unit.erlang\" }, \"5\": { \"name\": \"punctuation.separator.unit-specifiers.erlang\" }, \"6\": { \"name\": \"constant.numeric.integer.decimal.erlang\" }, \"7\": { \"name\": \"punctuation.separator.type-specifiers.erlang\" } }, \"match\": \"(integer|float|binary|bytes|bitstring|bits|utf8|utf16|utf32)|(signed|unsigned)|(big|little|native)|(unit)(:)(\\\\d++)|(-)\" }] }, \"keyword\": { \"match\": \"\\\\b(after|begin|case|catch|cond|end|fun|if|let|of|try|receive|when|maybe|else)\\\\b\", \"name\": \"keyword.control.erlang\" }, \"language-constant\": { \"match\": \"\\\\b(false|true|undefined)\\\\b\", \"name\": \"constant.language\" }, \"list\": { \"begin\": \"(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.begin.erlang\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.list.end.erlang\" } }, \"name\": \"meta.structure.list.erlang\", \"patterns\": [{ \"match\": \"\\\\||\\\\|\\\\||,\", \"name\": \"punctuation.separator.list.erlang\" }, { \"include\": \"#everything-else\" }] }, \"macro-directive\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.ifdef.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(ifdef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.ifdef.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.ifndef.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(ifndef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.ifndef.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.undef.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.function.macro.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(undef)\\\\s*+(\\\\()\\\\s*+([a-zA-z\\\\d@_]++)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.undef.erlang\" }] }, \"macro-usage\": { \"captures\": { \"1\": { \"name\": \"keyword.operator.macro.erlang\" }, \"2\": { \"name\": \"entity.name.function.macro.erlang\" } }, \"match\": \"(\\\\?\\\\??)\\\\s*+([a-zA-Z\\\\d@_]++)\", \"name\": \"meta.macro-usage.erlang\" }, \"module-directive\": { \"captures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.module.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.module.definition.erlang\" }, \"5\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"6\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"match\": \"^\\\\s*+(-)\\\\s*+(module)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+)\\\\s*+(\\\\))\\\\s*+(\\\\.)\", \"name\": \"meta.directive.module.erlang\" }, \"number\": { \"begin\": \"(?=\\\\d)\", \"end\": \"(?!\\\\d)\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.separator.integer-float.erlang\" }, \"2\": { \"name\": \"punctuation.separator.float-exponent.erlang\" } }, \"match\": \"\\\\d++(\\\\.)\\\\d++([eE][\\\\+\\\\-]?\\\\d++)?\", \"name\": \"constant.numeric.float.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"2(#)([0-1]++_)*[0-1]++\", \"name\": \"constant.numeric.integer.binary.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"3(#)([0-2]++_)*[0-2]++\", \"name\": \"constant.numeric.integer.base-3.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"4(#)([0-3]++_)*[0-3]++\", \"name\": \"constant.numeric.integer.base-4.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"5(#)([0-4]++_)*[0-4]++\", \"name\": \"constant.numeric.integer.base-5.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"6(#)([0-5]++_)*[0-5]++\", \"name\": \"constant.numeric.integer.base-6.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"7(#)([0-6]++_)*[0-6]++\", \"name\": \"constant.numeric.integer.base-7.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"8(#)([0-7]++_)*[0-7]++\", \"name\": \"constant.numeric.integer.octal.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"9(#)([0-8]++_)*[0-8]++\", \"name\": \"constant.numeric.integer.base-9.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"10(#)(\\\\d++_)*\\\\d++\", \"name\": \"constant.numeric.integer.decimal.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"11(#)([\\\\daA]++_)*[\\\\daA]++\", \"name\": \"constant.numeric.integer.base-11.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"12(#)([\\\\da-bA-B]++_)*[\\\\da-bA-B]++\", \"name\": \"constant.numeric.integer.base-12.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"13(#)([\\\\da-cA-C]++_)*[\\\\da-cA-C]++\", \"name\": \"constant.numeric.integer.base-13.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"14(#)([\\\\da-dA-D]++_)*[\\\\da-dA-D]++\", \"name\": \"constant.numeric.integer.base-14.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"15(#)([\\\\da-eA-E]++_)*[\\\\da-eA-E]++\", \"name\": \"constant.numeric.integer.base-15.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"16(#)([\\\\da-fA-F]++_)*[\\\\da-fA-F]++\", \"name\": \"constant.numeric.integer.hexadecimal.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"17(#)([\\\\da-gA-G]++_)*[\\\\da-gA-G]++\", \"name\": \"constant.numeric.integer.base-17.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"18(#)([\\\\da-hA-H]++_)*[\\\\da-hA-H]++\", \"name\": \"constant.numeric.integer.base-18.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"19(#)([\\\\da-iA-I]++_)*[\\\\da-iA-I]++\", \"name\": \"constant.numeric.integer.base-19.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"20(#)([\\\\da-jA-J]++_)*[\\\\da-jA-J]++\", \"name\": \"constant.numeric.integer.base-20.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"21(#)([\\\\da-kA-K]++_)*[\\\\da-kA-K]++\", \"name\": \"constant.numeric.integer.base-21.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"22(#)([\\\\da-lA-L]++_)*[\\\\da-lA-L]++\", \"name\": \"constant.numeric.integer.base-22.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"23(#)([\\\\da-mA-M]++_)*[\\\\da-mA-M]++\", \"name\": \"constant.numeric.integer.base-23.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"24(#)([\\\\da-nA-N]++_)*[\\\\da-nA-N]++\", \"name\": \"constant.numeric.integer.base-24.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"25(#)([\\\\da-oA-O]++_)*[\\\\da-oA-O]++\", \"name\": \"constant.numeric.integer.base-25.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"26(#)([\\\\da-pA-P]++_)*[\\\\da-pA-P]++\", \"name\": \"constant.numeric.integer.base-26.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"27(#)([\\\\da-qA-Q]++_)*[\\\\da-qA-Q]++\", \"name\": \"constant.numeric.integer.base-27.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"28(#)([\\\\da-rA-R]++_)*[\\\\da-rA-R]++\", \"name\": \"constant.numeric.integer.base-28.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"29(#)([\\\\da-sA-S]++_)*[\\\\da-sA-S]++\", \"name\": \"constant.numeric.integer.base-29.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"30(#)([\\\\da-tA-T]++_)*[\\\\da-tA-T]++\", \"name\": \"constant.numeric.integer.base-30.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"31(#)([\\\\da-uA-U]++_)*[\\\\da-uA-U]++\", \"name\": \"constant.numeric.integer.base-31.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"32(#)([\\\\da-vA-V]++_)*[\\\\da-vA-V]++\", \"name\": \"constant.numeric.integer.base-32.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"33(#)([\\\\da-wA-W]++_)*[\\\\da-wA-W]++\", \"name\": \"constant.numeric.integer.base-33.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"34(#)([\\\\da-xA-X]++_)*[\\\\da-xA-X]++\", \"name\": \"constant.numeric.integer.base-34.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"35(#)([\\\\da-yA-Y]++_)*[\\\\da-yA-Y]++\", \"name\": \"constant.numeric.integer.base-35.erlang\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.separator.base-integer.erlang\" } }, \"match\": \"36(#)([\\\\da-zA-Z]++_)*[\\\\da-zA-Z]++\", \"name\": \"constant.numeric.integer.base-36.erlang\" }, { \"match\": \"\\\\d++#([\\\\da-zA-Z]++_)*[\\\\da-zA-Z]++\", \"name\": \"invalid.illegal.integer.erlang\" }, { \"match\": \"(\\\\d++_)*\\\\d++\", \"name\": \"constant.numeric.integer.decimal.erlang\" }] }, \"parenthesized-expression\": { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.begin.erlang\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.section.expression.end.erlang\" } }, \"name\": \"meta.expression.parenthesized\", \"patterns\": [{ \"include\": \"#everything-else\" }] }, \"record-directive\": { \"begin\": \"^\\\\s*+(-)\\\\s*+(record)\\\\s*+(\\\\()\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(,)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.section.directive.begin.erlang\" }, \"2\": { \"name\": \"keyword.control.directive.import.erlang\" }, \"3\": { \"name\": \"punctuation.definition.parameters.begin.erlang\" }, \"4\": { \"name\": \"entity.name.type.class.record.definition.erlang\" }, \"5\": { \"name\": \"punctuation.separator.parameters.erlang\" } }, \"end\": \"(\\\\))\\\\s*+(\\\\.)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.parameters.end.erlang\" }, \"2\": { \"name\": \"punctuation.section.directive.end.erlang\" } }, \"name\": \"meta.directive.record.erlang\", \"patterns\": [{ \"include\": \"#internal-record-body\" }, { \"include\": \"#comment\" }] }, \"record-usage\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.operator.record.erlang\" }, \"2\": { \"name\": \"entity.name.type.class.record.erlang\" }, \"3\": { \"name\": \"punctuation.separator.record-field.erlang\" }, \"4\": { \"name\": \"variable.other.field.erlang\" } }, \"match\": \"(#)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\\\\s*+(\\\\.)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\", \"name\": \"meta.record-usage.erlang\" }, { \"begin\": \"(#)\\\\s*+([a-z][a-zA-Z\\\\d@_]*+|'[^']*+')\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.record.erlang\" }, \"2\": { \"name\": \"entity.name.type.class.record.erlang\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.record-usage.erlang\", \"patterns\": [{ \"include\": \"#internal-record-body\" }] }] }, \"sigil-docstring\": { \"begin\": '(~[bBsS]?)(([\"]{3,})\\\\s*)(\\\\S.*)?$', \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"meta.string.quoted.triple.begin.erlang\" }, \"3\": { \"name\": \"punctuation.definition.string.begin.erlang\" }, \"4\": { \"name\": \"invalid.illegal.string.erlang\" } }, \"comment\": \"Only whitespace characters are allowed after the beggining and before the closing sequences and those cannot be in the same line\", \"end\": '^(\\\\s*(\\\\3))(?!\")', \"endCaptures\": { \"1\": { \"name\": \"meta.string.quoted.triple.end.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.tripple.sigil.erlang\" }, \"sigil-string\": { \"patterns\": [{ \"include\": \"#sigil-string-parenthesis\" }, { \"include\": \"#sigil-string-parenthesis-verbatim\" }, { \"include\": \"#sigil-string-curly-brackets\" }, { \"include\": \"#sigil-string-curly-brackets-verbatim\" }, { \"include\": \"#sigil-string-square-brackets\" }, { \"include\": \"#sigil-string-square-brackets-verbatim\" }, { \"include\": \"#sigil-string-less-greater\" }, { \"include\": \"#sigil-string-less-greater-verbatim\" }, { \"include\": \"#sigil-string-single-character\" }, { \"include\": \"#sigil-string-single-character-verbatim\" }, { \"include\": \"#sigil-string-single-quote\" }, { \"include\": \"#sigil-string-single-quote-verbatim\" }, { \"include\": \"#sigil-string-double-quote\" }, { \"include\": \"#sigil-string-double-quote-verbatim\" }] }, \"sigil-string-curly-brackets\": { \"begin\": \"(~[bs]?)([{])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([}])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.curly-brackets.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-curly-brackets-verbatim\": { \"begin\": \"(~[BS])([{])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([}])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.curly-brackets.sigil.erlang\" }, \"sigil-string-double-quote\": { \"begin\": '(~[bs]?)(\")', \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.double.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-double-quote-verbatim\": { \"begin\": '(~[BS])(\")', \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.double.sigil.erlang\" }, \"sigil-string-less-greater\": { \"begin\": \"(~[bs]?)(<)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.less-greater.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-less-greater-verbatim\": { \"begin\": \"(~[BS])(<)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(>)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.less-greater.sigil.erlang\" }, \"sigil-string-parenthesis\": { \"begin\": \"(~[bs]?)([(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([)])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.parenthesis.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-parenthesis-verbatim\": { \"begin\": \"(~[BS])([(])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([)])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.parenthesis.sigil.erlang\" }, \"sigil-string-single-character\": { \"begin\": \"(~[bs]?)([/\\\\|`#])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.other.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-single-character-verbatim\": { \"begin\": \"(~[BS])([/\\\\|`#])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.other.sigil.erlang\" }, \"sigil-string-single-quote\": { \"begin\": \"(~[bs]?)(')\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.single.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-single-quote-verbatim\": { \"begin\": \"(~[BS])(')\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"(\\\\2)\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.single.sigil.erlang\" }, \"sigil-string-square-brackets\": { \"begin\": \"(~[bs]?)([\\\\[])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([\\\\]])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.square-brackets.sigil.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"sigil-string-square-brackets-verbatim\": { \"begin\": \"(~[BS])([\\\\[])\", \"beginCaptures\": { \"1\": { \"name\": \"storage.type.string.erlang\" }, \"2\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": \"([\\\\]])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.square-brackets.sigil.erlang\" }, \"string\": { \"begin\": '(\")', \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.begin.erlang\" } }, \"end\": '(\")', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.erlang\" } }, \"name\": \"string.quoted.double.erlang\", \"patterns\": [{ \"include\": \"#internal-string-body\" }] }, \"symbolic-operator\": { \"match\": \"\\\\+\\\\+|\\\\+|--|-|\\\\*|/=|/|=/=|=:=|==|=<|=|<-|<|>=|>|!|::|\\\\?=\", \"name\": \"keyword.operator.symbolic.erlang\" }, \"textual-operator\": { \"match\": \"\\\\b(andalso|band|and|bxor|xor|bor|orelse|or|bnot|not|bsl|bsr|div|rem)\\\\b\", \"name\": \"keyword.operator.textual.erlang\" }, \"tuple\": { \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tuple.begin.erlang\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.tuple.end.erlang\" } }, \"name\": \"meta.structure.tuple.erlang\", \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.tuple.erlang\" }, { \"include\": \"#everything-else\" }] }, \"variable\": { \"captures\": { \"1\": { \"name\": \"variable.other.erlang\" }, \"2\": { \"name\": \"variable.language.omitted.erlang\" } }, \"match\": \"(_[a-zA-Z\\\\d@_]++|[A-Z][a-zA-Z\\\\d@_]*+)|(_)\" } }, \"scopeName\": \"source.erlang\", \"aliases\": [\"erl\"] });\nvar erlang = [\n  lang\n];\n\nexport { erlang as default };\n"],"names":["erlang","Object","freeze"],"sourceRoot":""}