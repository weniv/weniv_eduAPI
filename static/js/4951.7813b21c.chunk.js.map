{"version":3,"file":"static/js/4951.7813b21c.chunk.js","mappings":"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","sources":["../node_modules/shiki/dist/langs/ballerina.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Ballerina\", \"fileTypes\": [\"bal\"], \"name\": \"ballerina\", \"patterns\": [{ \"include\": \"#statements\" }], \"repository\": { \"access-modifier\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(public|private)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"storage.modifier.ballerina keyword.other.ballerina\" }] }, \"annotationAttachment\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.decorator.ballerina\" }, \"2\": { \"name\": \"support.type.ballerina\" }, \"3\": { \"name\": \"punctuation.decorator.ballerina\" }, \"4\": { \"name\": \"support.type.ballerina\" } }, \"match\": \"(@)((?:[_$[:alpha:]][_$[:alnum:]]*))\\\\s*(:?)\\\\s*((?:[_$[:alpha:]][_$[:alnum:]]*)?)\" }] }, \"annotationDefinition\": { \"patterns\": [{ \"begin\": \"\\\\bannotation\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \";\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"array-literal\": { \"begin\": \"\\\\s*(\\\\[)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.brace.square.ballerina\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"name\": \"meta.array.literal.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }] }, \"booleans\": { \"patterns\": [{ \"match\": \"\\\\b(true|false)\\\\b\", \"name\": \"constant.language.boolean.ballerina\" }] }, \"butClause\": { \"patterns\": [{ \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" } }, \"end\": \",|(?=\\\\})\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"butExp\": { \"patterns\": [{ \"begin\": \"\\\\bbut\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#butExpBody\" }, { \"include\": \"#comment\" }] }] }, \"butExpBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#parameter\" }, { \"include\": \"#butClause\" }, { \"include\": \"#comment\" }] }] }, \"call\": { \"patterns\": [{ \"match\": \"(?:\\\\')?([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=\\\\()\", \"name\": \"entity.name.function.ballerina\" }] }, \"callableUnitBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#workerDef\" }, { \"include\": \"#service-decl\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#forkStatement\" }, { \"include\": \"#code\" }] }] }, \"class-body\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.class.body.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#access-modifier\" }, { \"include\": \"#keywords\" }, { \"begin\": \"(?<=:)\\\\s*\", \"end\": \"(?=\\\\s|[;),}\\\\]:\\\\-\\\\+]|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#punctuation-semicolon\" }] }, \"class-defn\": { \"begin\": \"(\\\\s+)(class\\\\b)|^class\\\\b(?=\\\\s+|/[/*])\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.class.ballerina keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.class.ballerina\", \"patterns\": [{ \"include\": \"#keywords\" }, { \"captures\": { \"0\": { \"name\": \"entity.name.type.class.ballerina\" } }, \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\" }, { \"include\": \"#class-body\" }] }, \"code\": { \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#matchStatement\" }, { \"include\": \"#butExp\" }, { \"include\": \"#xml\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#keywords\" }, { \"include\": \"#strings\" }, { \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#numbers\" }, { \"include\": \"#maps\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#paranthesisedBracket\" }, { \"include\": \"#regex\" }] }, \"comment\": { \"patterns\": [{ \"match\": \"\\\\/\\\\/.*\", \"name\": \"comment.ballerina\" }] }, \"constrainType\": { \"patterns\": [{ \"begin\": \"<\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \">\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#constrainType\" }, { \"match\": \"\\\\b([_$[:alpha:]][_$[:alnum:]]*)\\\\b\", \"name\": \"storage.type.ballerina\" }] }] }, \"control-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(return)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.flow.ballerina\" } }, \"end\": \"(?=[;}]|$|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"include\": \"#for-loop\" }, { \"include\": \"#if-statement\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(else|if)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"keyword.control.conditional.ballerina\" }] }, \"decl-block\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\} external;)|(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.block.ballerina\", \"patterns\": [{ \"include\": \"#statements\" }, { \"include\": \"#mdDocumentation\" }] }, \"declaration\": { \"patterns\": [{ \"include\": \"#import-declaration\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#typeDefinition\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#service-decl\" }, { \"include\": \"#class-defn\" }, { \"include\": \"#enum-decl\" }, { \"include\": \"#source\" }, { \"include\": \"#keywords\" }] }, \"defaultValue\": { \"patterns\": [{ \"begin\": \"[=:]\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=[,)])\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"defaultWithParentheses\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } } }] }, \"documentationBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"keyword.other.ballerina.documentation\" }, \"2\": { \"name\": \"keyword.other.ballerina.documentation\" }, \"3\": { \"name\": \"variable.parameter.ballerina.documentation\" }, \"4\": { \"name\": \"keyword.other.ballerina.documentation\" } }, \"match\": \"(P|R|T|F|V)({{)(.*)(}})\" }, { \"begin\": \"\\\\```\", \"end\": \"\\\\```\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"begin\": \"\\\\``\", \"end\": \"\\\\``\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"begin\": \"\\\\`\", \"end\": \"\\\\`\", \"name\": \"comment.block.code.ballerina.documentation\" }, { \"match\": \".\", \"name\": \"comment.block.ballerina.documentation\" }] }] }, \"documentationDef\": { \"patterns\": [{ \"begin\": \"\\\\b(?:documentation|deprecated)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"delimiter.curly\" } }, \"patterns\": [{ \"include\": \"#documentationBody\" }, { \"include\": \"#comment\" }] }] }, \"enum-decl\": { \"begin\": \"(?:\\\\b(const)\\\\s+)?\\\\b(enum)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"storage.modifier.ballerina\" }, \"2\": { \"name\": \"keyword.other.ballerina\" }, \"3\": { \"name\": \"entity.name.type.enum.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.enum.declaration.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.other.enummember.ballerina\" } }, \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"begin\": \"(?=((\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`)|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])+\\\\])))\", \"end\": \"(?=,|\\\\}|$)\", \"patterns\": [{ \"include\": \"#string\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#comment\" }, { \"include\": \"#variable-initializer\" }] }, { \"include\": \"#punctuation-comma\" }] }] }, \"errorDestructure\": { \"patterns\": [{ \"begin\": \"error\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?==>)\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#keywords\" }, { \"include\": \"#expressionWithoutIdentifiers\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#regex\" }] }, \"expression-operators\": { \"patterns\": [{ \"match\": \"\\\\*=|(?<!\\\\()/=|%=|\\\\+=|\\\\-=\", \"name\": \"keyword.operator.assignment.compound.ballerina\" }, { \"match\": \"\\\\&=|\\\\^=|<<=|>>=|>>>=|\\\\|=\", \"name\": \"keyword.operator.assignment.compound.bitwise.ballerina\" }, { \"match\": \"<<|>>>|>>\", \"name\": \"keyword.operator.bitwise.shift.ballerina\" }, { \"match\": \"===|!==|==|!=\", \"name\": \"keyword.operator.comparison.ballerina\" }, { \"match\": \"<=|>=|<>|<|>\", \"name\": \"keyword.operator.relational.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"keyword.operator.logical.ballerina\" }, \"2\": { \"name\": \"keyword.operator.assignment.compound.ballerina\" }, \"3\": { \"name\": \"keyword.operator.arithmetic.ballerina\" } }, \"match\": \"(?<=[_$[:alnum:]])(\\\\!)\\\\s*(?:(/=)|(?:(/)(?![/*])))\" }, { \"match\": \"\\\\!|&&|\\\\|\\\\||\\\\?\\\\?\", \"name\": \"keyword.operator.logical.ballerina\" }, { \"match\": \"\\\\&|~|\\\\^|\\\\|\", \"name\": \"keyword.operator.bitwise.ballerina\" }, { \"match\": \"\\\\=\", \"name\": \"keyword.operator.assignment.ballerina\" }, { \"match\": \"--\", \"name\": \"keyword.operator.decrement.ballerina\" }, { \"match\": \"\\\\+\\\\+\", \"name\": \"keyword.operator.increment.ballerina\" }, { \"match\": \"%|\\\\*|/|-|\\\\+\", \"name\": \"keyword.operator.arithmetic.ballerina\" }] }, \"expressionWithoutIdentifiers\": { \"patterns\": [{ \"include\": \"#xml\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#comment\" }, { \"include\": \"#object-literal\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#literal\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#regex\" }] }, \"flags-on-off\": { \"name\": \"meta.flags.regexp.ballerina\", \"patterns\": [{ \"begin\": \"(\\\\??)([imsx]*)(-?)([imsx]*)(:)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.other.non-capturing-group-begin.regexp.ballerina\" }, \"2\": { \"name\": \"keyword.other.non-capturing-group.flags-on.regexp.ballerina\" }, \"3\": { \"name\": \"punctuation.other.non-capturing-group.off.regexp.ballerina\" }, \"4\": { \"name\": \"keyword.other.non-capturing-group.flags-off.regexp.ballerina\" }, \"5\": { \"name\": \"punctuation.other.non-capturing-group-end.regexp.ballerina\" } }, \"end\": \"()\", \"name\": \"constant.other.flag.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regexp\" }, { \"include\": \"#template-substitution-element\" }] }] }, \"for-loop\": { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))foreach\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.loop.ballerina\" }, \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"match\": \"\\\\bin\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#comment\" }, { \"include\": \"#var-expr\" }, { \"include\": \"#expression\" }] }, \"forkBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#workerDef\" }] }] }, \"forkStatement\": { \"patterns\": [{ \"begin\": \"\\\\bfork\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#forkBody\" }] }] }, \"function-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#functionParameters\" }, { \"include\": \"#decl-block\" }, { \"begin\": \"\\\\=>\", \"beginCaptures\": { \"0\": { \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" } }, \"end\": \"(?=\\\\;)|(?=\\\\,)|(?=)(?=\\\\);)\", \"name\": \"meta.block.ballerina\", \"patterns\": [{ \"include\": \"#statements\" }, { \"include\": \"#punctuation-comma\" }] }, { \"match\": \"\\\\*\", \"name\": \"keyword.generator.asterisk.ballerina\" }] }, \"function-defn\": { \"begin\": \"(?:(public|private)\\\\s+)?(function\\\\b)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\;)|(?<=\\\\})|(?<=\\\\,)|(?=)(?=\\\\);)\", \"name\": \"meta.function.ballerina\", \"patterns\": [{ \"match\": \"\\\\bexternal\\\\b\", \"name\": \"keyword.ballerina\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#functionReturns\" }, { \"include\": \"#functionName\" }, { \"include\": \"#functionParameters\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#function-body\" }, { \"include\": \"#regex\" }] }, \"function-parameters-body\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numbers\" }, { \"include\": \"#string\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#keywords\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#array-literal\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#regex\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameter.ballerina\" }] }, \"functionName\": { \"patterns\": [{ \"match\": \"\\\\bfunction\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#string\" }, { \"captures\": { \"2\": { \"name\": \"variable.language.this.ballerina\" }, \"3\": { \"name\": \"keyword.other.ballerina\" }, \"4\": { \"name\": \"support.type.primitive.ballerina\" }, \"5\": { \"name\": \"storage.type.ballerina\" }, \"6\": { \"name\": \"meta.definition.function.ballerina entity.name.function.ballerina\" } }, \"match\": \"\\\\s+(\\\\b(self)|\\\\b(is|new|isolated|null|function|in)\\\\b|(string|int|boolean|float|byte|decimal|json|xml|anydata)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$[:alpha:]][_$[:alnum:]]*))\" }] }, \"functionParameters\": { \"begin\": \"\\\\(|\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \"\\\\)|\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"name\": \"meta.parameters.ballerina\", \"patterns\": [{ \"include\": \"#function-parameters-body\" }] }, \"functionReturns\": { \"begin\": \"\\\\s*(returns)\\\\s*\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?==>)|(\\\\=)|(?=\\\\{)|(\\\\))|(?=\\\\;)\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ballerina\" } }, \"name\": \"meta.type.function.return.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-primitive\" }, { \"captures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"match\": \"\\\\s*\\\\b(var)(?=\\\\s+|\\\\[|\\\\?)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.ballerina\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ballerina\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#keywords\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.ballerina\" }] }, \"functionType\": { \"patterns\": [{ \"begin\": \"\\\\bfunction\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#functionTypeParamList\" }, { \"include\": \"#functionTypeReturns\" }] }] }, \"functionTypeParamList\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"delimiter.parenthesis\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"delimiter.parenthesis\" } }, \"patterns\": [{ \"match\": \"public\", \"name\": \"keyword\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#parameterTuple\" }, { \"include\": \"#functionTypeType\" }, { \"include\": \"#comment\" }] }] }, \"functionTypeReturns\": { \"patterns\": [{ \"begin\": \"\\\\breturns\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\", \"patterns\": [{ \"include\": \"#functionTypeReturnsParameter\" }, { \"include\": \"#comment\" }] }] }, \"functionTypeReturnsParameter\": { \"patterns\": [{ \"begin\": \"((?=record|object|function)|(?:[_$[:alpha:]][_$[:alnum:]]*))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?:\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#defaultValue\" }, { \"include\": \"#comment\" }, { \"include\": \"#parameterTuple\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"functionTypeType\": { \"patterns\": [{ \"begin\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?=\\\\,)|(?:\\\\|)|(?=\\\\])|(?=\\\\))\" }] }, \"identifiers\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?x)(?:(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*)?([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\s*=\\\\s*(\\n((\\n(function\\\\s*[(<*]) |\\n(function\\\\s+) |\\n([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n)) |\\n((\\n((<\\\\s*$)|((<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n(\\n([)]\\\\s*:) |\\n((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)\\n)\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)\\n(\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?\\n\\\\s*=>\\n)\\n))\\n))\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=\\\\()\" }, { \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" }, \"3\": { \"name\": \"variable.other.property.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\\\\s*(\\\\#?[_$[:alpha:]][_$[:alnum:]]*)\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#self-literal\" }, { \"match\": \"\\\\b(check|foreach|if|checkpanic)\\\\b\", \"name\": \"keyword.control.ballerina\" }, { \"include\": \"#call\" }, { \"match\": \"\\\\b(var)\\\\b\", \"name\": \"support.type.primitive.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"3\": { \"name\": \"punctuation.accessor.ballerina\" }, \"4\": { \"name\": \"entity.name.function.ballerina\" }, \"5\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" }, \"6\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)((\\\\.)([_$[:alpha:]][_$[:alnum:]]*)(\\\\()(\\\\)))?\" }, { \"match\": \"(\\\\')([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#type-annotation\" }] }, \"if-statement\": { \"patterns\": [{ \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=\\\\bif\\\\b\\\\s*(?!\\\\{))\", \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#comment\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(if)\\\\s*(\\\\()?\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.conditional.ballerina\" }, \"2\": { \"name\": \"meta.brace.round.ballerina\" } }, \"end\": \"(\\\\))|(?=\\\\{)\", \"endCaptures\": { \"1\": { \"name\": \"meta.brace.round.ballerina\" } }, \"patterns\": [{ \"include\": \"#decl-block\" }, { \"include\": \"#keywords\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#xml\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#comment\" }, { \"include\": \"#ternary-expression\" }, { \"include\": \"#expression-operators\" }, { \"include\": \"#literal\" }, { \"include\": \"#paranthesised\" }, { \"include\": \"#regex\" }] }, { \"begin\": \"(?<=\\\\))(?=\\\\s|\\\\=)\", \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#keywords\" }] }, { \"include\": \"#decl-block\" }] }] }, \"import-clause\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.default.ballerina\" }, \"3\": { \"name\": \"variable.other.readwrite.ballerina meta.import.module.ballerina\" }, \"5\": { \"name\": \"keyword.control.default.ballerina\" }, \"6\": { \"name\": \"variable.other.readwrite.alias.ballerina\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(\\\\bdefault)|(\\\\*)|(\\\\b[_$[:alpha:]][_$[:alnum:]]*))\" }, { \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.readwrite.alias.ballerina\" }] }, \"import-declaration\": { \"begin\": \"\\\\bimport\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.import.ballerina\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"name\": \"meta.import.ballerina\", \"patterns\": [{ \"match\": \"(\\\\')([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#keywords\" }, { \"include\": \"#comment\" }, { \"include\": \"#import-clause\" }, { \"include\": \"#punctuation-accessor\" }] }, \"keywords\": { \"patterns\": [{ \"match\": \"\\\\b(fork|join|while|returns|transaction|transactional|retry|commit|rollback|typeof|enum|wait|match)\\\\b\", \"name\": \"keyword.control.ballerina\" }, { \"match\": \"\\\\b(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\", \"name\": \"keyword.control.flow.ballerina\" }, { \"match\": \"\\\\b(public|private|external|return|record|object|remote|abstract|client|true|false|fail|import|version)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(as|on|function|resource|listener|const|final|is|null|lock|annotation|source|worker|parameter|field|isolated|in)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(xmlns|table|key|let|new|select|start|flush|default|do|base16|base64|conflict)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\b(limit|outer|equals|order|by|ascending|descending|class|configurable|variable|module|service|group|collect)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"(=>)\", \"name\": \"meta.arrow.ballerina storage.type.function.arrow.ballerina\" }, { \"match\": \"(!|%|\\\\+|\\\\-|~=|===|==|=|!=|!==|<|>|&|\\\\||\\\\?:|\\\\.\\\\.\\\\.|<=|>=|&&|\\\\|\\\\||~|>>|>>>)\", \"name\": \"keyword.operator.ballerina\" }, { \"include\": \"#types\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#type-primitive\" }] }, \"literal\": { \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#numbers\" }, { \"include\": \"#strings\" }, { \"include\": \"#maps\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#array-literal\" }] }, \"maps\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"matchBindingPattern\": { \"patterns\": [{ \"begin\": \"var\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?==>)|,\", \"patterns\": [{ \"include\": \"#errorDestructure\" }, { \"include\": \"#code\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.parameter.ballerina\" }] }] }, \"matchStatement\": { \"patterns\": [{ \"begin\": \"\\\\bmatch\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.control.ballerina\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#matchStatementBody\" }, { \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"matchStatementBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina.documentation\" } }, \"patterns\": [{ \"include\": \"#literal\" }, { \"include\": \"#matchBindingPattern\" }, { \"include\": \"#matchStatementPatternClause\" }, { \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"matchStatementPatternClause\": { \"patterns\": [{ \"begin\": \"=>\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"((\\\\})|;|,)\", \"patterns\": [{ \"include\": \"#callableUnitBody\" }, { \"include\": \"#code\" }] }] }, \"mdDocumentation\": { \"begin\": \"\\\\#\", \"end\": \"[\\\\r\\\\n]+\", \"name\": \"comment.mddocs.ballerina\", \"patterns\": [{ \"include\": \"#mdDocumentationReturnParamDescription\" }, { \"include\": \"#mdDocumentationParamDescription\" }] }, \"mdDocumentationParamDescription\": { \"patterns\": [{ \"begin\": \"(\\\\+\\\\s+)(\\\\'?[_$[:alpha:]][_$[:alnum:]]*)(\\\\s*\\\\-\\\\s+)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ballerina\" }, \"2\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"3\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\", \"patterns\": [{ \"match\": \"#.*\", \"name\": \"comment.mddocs.paramdesc.ballerina\" }] }] }, \"mdDocumentationReturnParamDescription\": { \"patterns\": [{ \"begin\": \"(#)(?: *?)(\\\\+)(?: *)(return)(?: *)(-)?(.*)\", \"beginCaptures\": { \"1\": { \"name\": \"comment.mddocs.ballerina\" }, \"2\": { \"name\": \"keyword.ballerina\" }, \"3\": { \"name\": \"keyword.ballerina\" }, \"4\": { \"name\": \"keyword.ballerina\" }, \"5\": { \"name\": \"comment.mddocs.returnparamdesc.ballerina\" } }, \"end\": \"(?=[^#\\\\r\\\\n]|(?:# *?\\\\+))\", \"patterns\": [{ \"match\": \"#.*\", \"name\": \"comment.mddocs.returnparamdesc.ballerina\" }] }] }, \"multiType\": { \"patterns\": [{ \"match\": \"(?<=\\\\|)([_$[:alpha:]][_$[:alnum:]]*)|([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\|)\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.ballerina\" }] }, \"numbers\": { \"patterns\": [{ \"match\": \"\\\\b0[xX][\\\\da-fA-F]+\\\\b|\\\\b\\\\d+(?:\\\\.(?:\\\\d+|$))?\", \"name\": \"constant.numeric.decimal.ballerina\" }] }, \"object-literal\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"name\": \"meta.objectliteral.ballerina\", \"patterns\": [{ \"include\": \"#object-member\" }, { \"include\": \"#punctuation-comma\" }] }, \"object-member\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#literal\" }, { \"include\": \"#keywords\" }, { \"include\": \"#expression\" }, { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=:)|((?<=[\\\\]])(?=\\\\s*[\\\\(\\\\<]))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }] }, { \"begin\": \"(?=[\\\\'\\\\\\\"\\\\`])\", \"end\": \"(?=:)|((?<=[\\\\'\\\\\\\"\\\\`])(?=((\\\\s*[\\\\(\\\\<,}])|(\\\\n*})|(\\\\s+(as)\\\\s+))))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }] }, { \"begin\": \"(?x)(?=(\\\\b(?<!\\\\$)0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:b|B)[01][01_]*(n)?\\\\b(?!\\\\$))|(\\\\b(?<!\\\\$)0(?:o|O)?[0-7][0-7_]*(n)?\\\\b(?!\\\\$))|((?<!\\\\$)(?:\\n(?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(\\\\.)[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\B(\\\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(\\\\.)[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(\\\\.)(n)?\\\\B)|\\n(?:\\\\B(\\\\.)[0-9][0-9_]*(n)?\\\\b)|\\n(?:\\\\b[0-9][0-9_]*(n)?\\\\b(?!\\\\.))\\n)(?!\\\\$)))\", \"end\": \"(?=:)|(?=\\\\s*([\\\\(\\\\<,}])|(\\\\s+as\\\\s+))\", \"name\": \"meta.object.member.ballerina meta.object-literal.key.ballerina\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#numbers\" }] }, { \"begin\": \"(?<=[\\\\]\\\\'\\\\\\\"\\\\`])(?=\\\\s*[\\\\(\\\\<])\", \"end\": \"(?=\\\\}|;|,)|(?<=\\\\})\", \"name\": \"meta.method.declaration.ballerina\", \"patterns\": [{ \"include\": \"#function-body\" }] }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" }, \"1\": { \"name\": \"constant.numeric.decimal.ballerina\" } }, \"match\": \"(?![_$[:alpha:]])([[:digit:]]+)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" }, \"1\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(?x)(?:([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:(\\\\s*\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/)*\\\\s*(\\n((\\n(function\\\\s*[(<*]) |\\n(function\\\\s+) |\\n([_$[:alpha:]][_$[:alnum:]]*\\\\s*=>)\\n)) |\\n((\\n((<\\\\s*$)|((<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?[\\\\(]\\\\s*((([\\\\{\\\\[]\\\\s*)?$)|((\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})\\\\s*((:\\\\s*\\\\{?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))|((\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])\\\\s*((:\\\\s*\\\\[?$)|((\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+\\\\s*)?=\\\\s*)))))) |\\n\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n[(]\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*\\n(\\n([)]\\\\s*:) |\\n((\\\\.\\\\.\\\\.\\\\s*)?[_$[:alpha:]][_$[:alnum:]]*\\\\s*:)\\n)\\n) |\\n\\n# arrow function possible to detect only with => on same line\\n(\\n(<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<]|\\\\<\\\\s*([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\]))([^=<>]|=[^<])*\\\\>)*\\\\>)*>\\\\s*)?\\n\\\\(\\\\s*(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*(([_$[:alpha:]]|(\\\\{([^\\\\{\\\\}]|(\\\\{([^\\\\{\\\\}]|\\\\{[^\\\\{\\\\}]*\\\\})*\\\\}))*\\\\})|(\\\\[([^\\\\[\\\\]]|(\\\\[([^\\\\[\\\\]]|\\\\[[^\\\\[\\\\]]*\\\\])*\\\\]))*\\\\])|(\\\\.\\\\.\\\\.\\\\s*[_$[:alpha:]]))([^()\\\\'\\\\\\\"\\\\`]|(\\\\(([^\\\\(\\\\)]|(\\\\(([^\\\\(\\\\)]|\\\\([^\\\\(\\\\)]*\\\\))*\\\\)))*\\\\))|(\\\\'([^\\\\'\\\\\\\\]|\\\\\\\\.)*\\\\')|(\\\\\\\"([^\\\\\\\"\\\\\\\\]|\\\\\\\\.)*\\\\\\\")|(\\\\`([^\\\\`\\\\\\\\]|\\\\\\\\.)*\\\\`))*)?\\\\)\\n(\\\\s*:\\\\s*([^<>\\\\(\\\\)\\\\{\\\\}]|\\\\<([^<>]|\\\\<([^<>]|\\\\<[^<>]+\\\\>)+\\\\>)+\\\\>|\\\\([^\\\\(\\\\)]+\\\\)|\\\\{[^\\\\{\\\\}]+\\\\})+)?\\n\\\\s*=>\\n)\\n))\\n)))\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"0\": { \"name\": \"meta.object-literal.key.ballerina\" } }, \"match\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=(\\\\/\\\\*([^\\\\*]|(\\\\*[^\\\\/]))*\\\\*\\\\/\\\\s*)*:)\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"\\\\.\\\\.\\\\.\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.spread.ballerina\" } }, \"end\": \"(?=,|\\\\})\", \"name\": \"meta.object.member.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }, { \"captures\": { \"1\": { \"name\": \"variable.other.readwrite.ballerina\" } }, \"match\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"keyword.control.as.ballerina\" }, \"2\": { \"name\": \"storage.modifier.ballerina\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+(const)(?=\\\\s*([,}]|$))\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.control.as.ballerina\" } }, \"end\": \"(?=[;),}\\\\]:?\\\\-\\\\+\\\\>]|\\\\|\\\\||\\\\&\\\\&|\\\\!\\\\=\\\\=|$|^|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(as)\\\\s+))\", \"name\": \"meta.object.member.ballerina\" }, { \"begin\": \"(?=[_$[:alpha:]][_$[:alnum:]]*\\\\s*=)\", \"end\": \"(?=,|\\\\}|$|\\\\/\\\\/|\\\\/\\\\*)\", \"name\": \"meta.object.member.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"objectDec\": { \"patterns\": [{ \"begin\": \"\\\\bobject\\\\b(?!:)\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"patterns\": [{ \"include\": \"#decl-block\" }] }] }, \"objectInitBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"(?=\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"objectInitParameters\": { \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }, { \"match\": \"\\\\b([_$[:alpha:]][_$[:alnum:]]*)\\\\b\", \"name\": \"variable.parameter.ballerina\" }] }] }, \"objectMemberFunctionDec\": { \"patterns\": [{ \"begin\": \"\\\\bfunction\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \";\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#functionParameters\" }, { \"match\": \"\\\\breturns\\\\b\", \"name\": \"keyword.ballerina\" }, { \"include\": \"#code\" }] }] }, \"parameter\": { \"patterns\": [{ \"begin\": \"((?=record|object|function)|([_$[:alpha:]][_$[:alnum:]]*)(?=\\\\|)|(?:[_$[:alpha:]][_$[:alnum:]]*))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:\\\\,)|(?:\\\\|)|(?:\\\\:)|(?==>)|(?=\\\\))|(?=\\\\])\", \"patterns\": [{ \"include\": \"#parameterWithDescriptor\" }, { \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#functionType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#defaultValue\" }, { \"include\": \"#comment\" }, { \"include\": \"#parameterTuple\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"parameter-name\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" } }, \"match\": \"\\\\s*\\\\b(var)\\\\s+\" }, { \"captures\": { \"2\": { \"name\": \"keyword.operator.rest.ballerina\" }, \"3\": { \"name\": \"support.type.primitive.ballerina\" }, \"4\": { \"name\": \"keyword.other.ballerina\" }, \"5\": { \"name\": \"constant.language.boolean.ballerina\" }, \"6\": { \"name\": \"keyword.control.flow.ballerina\" }, \"7\": { \"name\": \"storage.type.ballerina\" }, \"8\": { \"name\": \"variable.parameter.ballerina\" }, \"9\": { \"name\": \"variable.parameter.ballerina\" }, \"10\": { \"name\": \"keyword.operator.optional.ballerina\" } }, \"match\": \"(?x)(?:(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+)?(?:(\\\\.\\\\.\\\\.)\\\\s*)?(?<!=|:)(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?:(this)|(string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|([_$[:alpha:]][_$[:alnum:]]*))(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\\\\s*(\\\\??)\" }] }, \"parameterTuple\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }, { \"include\": \"#parameterTupleType\" }, { \"include\": \"#parameterTupleEnd\" }, { \"include\": \"#comment\" }] }] }, \"parameterTupleEnd\": { \"patterns\": [{ \"begin\": \"\\\\]\", \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\:)|(?==>)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#defaultWithParentheses\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"default.variable.parameter.ballerina\" }] }] }, \"parameterTupleType\": { \"patterns\": [{ \"begin\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:\\\\,)|(?:\\\\|)|(?=\\\\])\" }] }, \"parameterWithDescriptor\": { \"patterns\": [{ \"begin\": \"\\\\&\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\|)|(?=\\\\))\", \"patterns\": [{ \"include\": \"#parameter\" }] }] }, \"parameters\": { \"patterns\": [{ \"match\": \"\\\\s*(return|break|continue|check|checkpanic|panic|trap|from|where)\\\\b\", \"name\": \"keyword.control.flow.ballerina\" }, { \"match\": \"\\\\s*(let|select)\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"\\\\,\", \"name\": \"punctuation.separator.parameter.ballerina\" }] }, \"paranthesised\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.round.ballerina\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.round.ballerina\" } }, \"name\": \"meta.brace.round.block.ballerina\", \"patterns\": [{ \"include\": \"#self-literal\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#parameters\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#recordLiteral\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#expression\" }, { \"include\": \"#regex\" }] }, \"paranthesisedBracket\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"\\\\]\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#code\" }] }] }, \"punctuation-accessor\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"punctuation.accessor.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.optional.ballerina\" } }, \"match\": \"(?:(\\\\.)|(\\\\?\\\\.(?!\\\\s*[[:digit:]])))\" }] }, \"punctuation-comma\": { \"patterns\": [{ \"match\": \",\", \"name\": \"punctuation.separator.comma.ballerina\" }] }, \"punctuation-semicolon\": { \"patterns\": [{ \"match\": \";\", \"name\": \"punctuation.terminator.statement.ballerina\" }] }, \"record\": { \"begin\": \"\\\\brecord\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?<=\\\\})\", \"name\": \"meta.record.ballerina\", \"patterns\": [{ \"include\": \"#recordBody\" }] }, \"recordBody\": { \"patterns\": [{ \"include\": \"#decl-block\" }] }, \"recordLiteral\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.block.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }] }] }, \"regex\": { \"patterns\": [{ \"begin\": \"(\\\\bre)(\\\\s*)(`)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"punctuation.definition.regexp.template.begin.ballerina\" } }, \"end\": \"`\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.regexp.template.end.ballerina\" } }, \"name\": \"regexp.template.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#regexp\" }] }] }, \"regex-character-class\": { \"patterns\": [{ \"match\": \"\\\\\\\\[wWsSdDtrn]|\\\\.\", \"name\": \"keyword.other.character-class.regexp.ballerina\" }, { \"match\": \"\\\\\\\\[^pPu]\", \"name\": \"constant.character.escape.backslash.regexp\" }] }, \"regex-unicode-properties-general-category\": { \"patterns\": [{ \"match\": \"(Lu|Ll|Lt|Lm|Lo|L|Mn|Mc|Me|M|Nd|Nl|No|N|Pc|Pd|Ps|Pe|Pi|Pf|Po|P|Sm|Sc|Sk|So|S|Zs|Zl|Zp|Z|Cf|Cc|Cn|Co|C)\", \"name\": \"constant.other.unicode-property-general-category.regexp.ballerina\" }] }, \"regex-unicode-property-key\": { \"patterns\": [{ \"begin\": \"(sc=|gc=)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\" } }, \"end\": \"()\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-property-key.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regex-unicode-properties-general-category\" }] }] }, \"regexp\": { \"patterns\": [{ \"match\": \"\\\\^|\\\\$\", \"name\": \"keyword.control.assertion.regexp.ballerina\" }, { \"match\": \"[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??\", \"name\": \"keyword.operator.quantifier.regexp.ballerina\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.or.regexp.ballerina\" }, { \"begin\": \"(\\\\()\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp.ballerina\" } }, \"end\": \"(\\\\))\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.group.regexp.ballerina\" } }, \"name\": \"meta.group.assertion.regexp.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#regexp\" }, { \"include\": \"#flags-on-off\" }, { \"include\": \"#unicode-property-escape\" }] }, { \"begin\": \"(\\\\[)(\\\\^)?\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.start.regexp.ballerina\" }, \"2\": { \"name\": \"keyword.operator.negation.regexp.ballerina\" } }, \"end\": \"(\\\\])\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.character-class.end.regexp.ballerina\" } }, \"name\": \"constant.other.character-class.set.regexp.ballerina\", \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"constant.character.numeric.regexp\" }, \"2\": { \"name\": \"constant.character.escape.backslash.regexp\" }, \"3\": { \"name\": \"constant.character.numeric.regexp\" }, \"4\": { \"name\": \"constant.character.escape.backslash.regexp\" } }, \"match\": \"(?:.|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\\\\-(?:[^\\\\]\\\\\\\\]|(\\\\\\\\(?:[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}))|(\\\\\\\\[^pPu]))\", \"name\": \"constant.other.character-class.range.regexp.ballerina\" }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#unicode-values\" }, { \"include\": \"#unicode-property-escape\" }] }, { \"include\": \"#template-substitution-element\" }, { \"include\": \"#regex-character-class\" }, { \"include\": \"#unicode-values\" }, { \"include\": \"#unicode-property-escape\" }] }, \"self-literal\": { \"patterns\": [{ \"captures\": { \"1\": { \"name\": \"variable.language.this.ballerina\" }, \"2\": { \"name\": \"punctuation.accessor.ballerina\" }, \"3\": { \"name\": \"entity.name.function.ballerina\" } }, \"match\": \"(\\\\bself\\\\b)\\\\s*(.)\\\\s*([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(?=\\\\()\" }, { \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))self\\\\b(?!\\\\$)\", \"name\": \"variable.language.this.ballerina\" }] }, \"service-decl\": { \"begin\": \"\\\\bservice\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"(?=;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|(?<=\\\\})|(?<=\\\\,)\", \"name\": \"meta.service.declaration.ballerina\", \"patterns\": [{ \"include\": \"#class-defn\" }, { \"include\": \"#serviceName\" }, { \"include\": \"#serviceOn\" }, { \"include\": \"#serviceBody\" }, { \"include\": \"#objectDec\" }] }, \"serviceBody\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#documentationDef\" }, { \"include\": \"#decl-block\" }] }, \"serviceName\": { \"patterns\": [{ \"include\": \"#string\" }, { \"match\": '(\\\\/([_$[:alpha:]][_$[:alnum:]]*)|\\\\\"[_$[:alpha:]][_$[:alnum:]]*\\\\\")', \"name\": \"entity.service.path.ballerina\" }] }, \"serviceOn\": { \"patterns\": [{ \"begin\": \"on\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?={)\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"source\": { \"patterns\": [{ \"begin\": \"(\\\\bsource\\\\b)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"variable.other.readwrite.ballerina\" } }, \"end\": \"(?=\\\\,)|(?=\\\\;)\" }] }, \"statements\": { \"patterns\": [{ \"include\": \"#stringTemplate\" }, { \"include\": \"#declaration\" }, { \"include\": \"#control-statement\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-semicolon\" }, { \"include\": \"#string\" }, { \"include\": \"#comment\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#annotationAttachment\" }, { \"include\": \"#regex\" }] }, \"string\": { \"patterns\": [{ \"begin\": '\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.begin.ballerina\" } }, \"end\": '(\")|((?:[^\\\\\\\\\\\\n])$)', \"endCaptures\": { \"1\": { \"name\": \"punctuation.definition.string.end.ballerina\" }, \"2\": { \"name\": \"invalid.illegal.newline.ballerina\" } }, \"name\": \"string.quoted.double.ballerina\", \"patterns\": [{ \"include\": \"#string-character-escape\" }] }] }, \"string-character-escape\": { \"patterns\": [{ \"match\": \"\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|u\\\\{[0-9A-Fa-f]+\\\\}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)\", \"name\": \"constant.character.escape.ballerina\" }] }, \"stringTemplate\": { \"patterns\": [{ \"begin\": \"((string)|([_$[:alpha:]][_$[:alnum:]]*))?(`)\", \"beginCaptures\": { \"1\": { \"name\": \"entity.name.function.tagged-template.ballerina\" }, \"2\": { \"name\": \"support.type.primitive.ballerina\" }, \"4\": { \"name\": \"punctuation.definition.string.template.begin.ballerina\" } }, \"end\": \"\\\\\\\\?`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.template.end.ballerina\" } }, \"name\": \"string.template.ballerina\", \"patterns\": [{ \"include\": \"#template-substitution-element\" }, { \"include\": \"#string-character-escape\" }] }] }, \"strings\": { \"patterns\": [{ \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"template-substitution-element\": { \"patterns\": [{ \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.begin.ballerina\" } }, \"contentName\": \"meta.embedded.line.ballerina\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.template-expression.end.ballerina\" } }, \"name\": \"meta.template.expression.ballerina\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"templateVariable\": { \"patterns\": [{ \"begin\": \"\\\\${\", \"beginCaptures\": { \"0\": { \"name\": \"constant.character.escape.ballerina\" } }, \"end\": \"}\", \"endCaptures\": { \"0\": { \"name\": \"constant.character.escape.ballerina\" } }, \"patterns\": [{ \"include\": \"#code\" }] }] }, \"ternary-expression\": { \"begin\": \"(?!\\\\?\\\\.\\\\s*[^[:digit:]])(\\\\?)(?!\\\\?)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ballerina\" } }, \"end\": \"\\\\s*\", \"endCaptures\": { \"1\": { \"name\": \"keyword.operator.ternary.ballerina\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"tupleType\": { \"patterns\": [{ \"begin\": \"\\\\[\", \"end\": \"(?=\\\\]|;)\", \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#paranthesisedBracket\" }, { \"match\": \"\\\\b([_$[:alpha:]][_$[:alnum:]]*)\\\\b\", \"name\": \"storage.type.ballerina\" }] }] }, \"type\": { \"patterns\": [{ \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#type-primitive\" }, { \"include\": \"#type-tuple\" }] }, \"type-annotation\": { \"patterns\": [{ \"begin\": \"(\\\\:)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.type.annotation.ballerina\" } }, \"end\": \"(?<![:|&])((?=$|^|[,);\\\\}\\\\]\\\\?\\\\>\\\\=>]|//)|(?==[^>])|((?<=[\\\\}>\\\\]\\\\)]|[_$[:alpha:]])\\\\s*(?=\\\\{)))(\\\\?)?\", \"name\": \"meta.type.annotation.ballerina\", \"patterns\": [{ \"include\": \"#booleans\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#regex\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#xml\" }, { \"include\": \"#call\" }, { \"captures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"constant.language.boolean.ballerina\" }, \"3\": { \"name\": \"keyword.control.ballerina\" }, \"4\": { \"name\": \"storage.type.ballerina\" }, \"5\": { \"name\": \"support.type.primitive.ballerina\" }, \"6\": { \"name\": \"variable.other.readwrite.ballerina\" }, \"8\": { \"name\": \"punctuation.accessor.ballerina\" }, \"9\": { \"name\": \"entity.name.function.ballerina\" }, \"10\": { \"name\": \"punctuation.definition.parameters.begin.ballerina\" }, \"11\": { \"name\": \"punctuation.definition.parameters.end.ballerina\" } }, \"match\": \"\\\\b(is|new|isolated|null|function|in)\\\\b|\\\\b(true|false)\\\\b|\\\\b(check|foreach|if|checkpanic)\\\\b|\\\\b(readonly|error|map)\\\\b|\\\\b(var)\\\\b|([_$[:alpha:]][_$[:alnum:]]*)((\\\\.)([_$[:alpha:]][_$[:alnum:]]*)(\\\\()(\\\\)))?\" }, { \"match\": \"\\\\?\", \"name\": \"keyword.operator.optional.ballerina\" }, { \"include\": \"#multiType\" }, { \"include\": \"#type\" }, { \"include\": \"#paranthesised\" }] }] }, \"type-primitive\": { \"patterns\": [{ \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(string|int|boolean|float|byte|decimal|json|xml|anydata)(?![_$[:alnum:]])(?:(?=\\\\.\\\\.\\\\.)|(?!\\\\.))\", \"name\": \"support.type.primitive.ballerina\" }] }, \"type-tuple\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"meta.brace.square.ballerina\" } }, \"name\": \"meta.type.tuple.ballerina\", \"patterns\": [{ \"include\": \"#self-literal\" }, { \"include\": \"#booleans\" }, { \"match\": \"\\\\.\\\\.\\\\.\", \"name\": \"keyword.operator.rest.ballerina\" }, { \"captures\": { \"1\": { \"name\": \"entity.name.label.ballerina\" }, \"2\": { \"name\": \"keyword.operator.optional.ballerina\" }, \"3\": { \"name\": \"punctuation.separator.label.ballerina\" } }, \"match\": \"(?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))([_$[:alpha:]][_$[:alnum:]]*)\\\\s*(\\\\?)?\\\\s*(:)\" }, { \"include\": \"#identifiers\" }, { \"include\": \"#type\" }, { \"include\": \"#punctuation-comma\" }] }, \"typeDefinition\": { \"patterns\": [{ \"begin\": \"(\\\\btype\\\\b)\\\\s+([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.ballerina\" }, \"2\": { \"name\": \"entity.name.type.ballerina\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"patterns\": [{ \"include\": \"#functionParameters\" }, { \"include\": \"#functionReturns\" }, { \"include\": \"#mdDocumentation\" }, { \"include\": \"#record\" }, { \"include\": \"#string\" }, { \"include\": \"#keywords\" }, { \"include\": \"#multiType\" }, { \"include\": \"#type-primitive\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"variable.other.readwrite.ballerina\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#typeDescription\" }, { \"include\": \"#decl-block\" }] }] }, \"typeDescription\": { \"patterns\": [{ \"begin\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#numbers\" }, { \"include\": \"#decl-block\" }, { \"include\": \"#type-primitive\" }, { \"match\": \"[_$[:alpha:]][_$[:alnum:]]*\", \"name\": \"storage.type.ballerina\" }] }] }, \"types\": { \"patterns\": [{ \"match\": \"\\\\b(handle|any|future|typedesc)\\\\b\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\b(boolean|int|string|float|decimal|byte|json|xml|anydata)\\\\b\", \"name\": \"support.type.primitive.ballerina\" }, { \"match\": \"\\\\b(map|error|never|readonly|distinct)\\\\b\", \"name\": \"storage.type.ballerina\" }, { \"match\": \"\\\\b(stream)\\\\b\", \"name\": \"storage.type.ballerina\" }] }, \"unicode-property-escape\": { \"patterns\": [{ \"begin\": \"(\\\\\\\\p|\\\\\\\\P)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-property.regexp.ballerina\" }, \"2\": { \"name\": \"punctuation.other.unicode-property.begin.regexp.ballerina\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-property.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-property.regexp.ballerina\", \"patterns\": [{ \"include\": \"#regex-unicode-properties-general-category\" }, { \"include\": \"#regex-unicode-property-key\" }] }] }, \"unicode-values\": { \"patterns\": [{ \"begin\": \"(\\\\\\\\u)(\\\\{)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.other.unicode-value.regexp.ballerina\" }, \"2\": { \"name\": \"punctuation.other.unicode-value.begin.regexp.ballerina\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"1\": { \"name\": \"punctuation.other.unicode-value.end.regexp.ballerina\" } }, \"name\": \"keyword.other.unicode-value.ballerina\", \"patterns\": [{ \"match\": \"([0-9A-Fa-f]{1,6})\", \"name\": \"constant.other.unicode-value.regexp.ballerina\" }] }] }, \"var-expr\": { \"patterns\": [{ \"begin\": \"(?=\\\\b(var))\", \"beginCaptures\": { \"0\": { \"name\": \"storage.modifier.ballerina support.type.primitive.ballerina\" } }, \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))(?=(if)\\\\s+))|((?<!^string|[^\\\\._$[:alnum:]]string|^int|[^\\\\._$[:alnum:]]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"begin\": \"\\\\b(var)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.type.annotation.ballerina\" }, { \"match\": \"\\\\bin\\\\b\", \"name\": \"keyword.other.ballerina\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#numbers\" }, { \"include\": \"#multiType\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#regex\" }] }, { \"include\": \"#punctuation-comma\" }, { \"begin\": \"(?=\\\\b(const(?!\\\\s+enum\\\\b)))\", \"end\": \"(?!\\\\b(const(?!\\\\s+enum\\\\b)))((?=\\\\bannotation\\\\b|;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$[:alnum:]]string|^int|[^\\\\._$[:alnum:]]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"begin\": \"\\\\b(const(?!\\\\s+enum\\\\b))\\\\s+\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#comment\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#var-single-const\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }] }, { \"include\": \"#punctuation-comma\" }, { \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?!\\\\b(var))((?=;|}|;|^\\\\s*$|(?:^\\\\s*(?:abstract|async|class|const|declare|enum|export|function|import|interface|let|module|namespace|return|service|type|var)\\\\b))|((?<!^string|[^\\\\._$[:alnum:]]string|^int|[^\\\\._$[:alnum:]]int)(?=\\\\s*$)))\", \"name\": \"meta.var.expr.ballerina\", \"patterns\": [{ \"include\": \"#xml\" }, { \"begin\": \"(string|int|boolean|float|byte|decimal|json|xml|anydata)(?=\\\\s+|\\\\[|\\\\?|\\\\||\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"match\": \"\\\\|\", \"name\": \"keyword.operator.type.annotation.ballerina\" }, { \"include\": \"#string\" }, { \"include\": \"#stringTemplate\" }, { \"include\": \"#numbers\" }, { \"include\": \"#multiType\" }, { \"include\": \"#var-single-variable\" }, { \"include\": \"#variable-initializer\" }, { \"include\": \"#punctuation-comma\" }, { \"include\": \"#type-annotation\" }, { \"include\": \"#keywords\" }, { \"include\": \"#type-tuple\" }, { \"include\": \"#regex\" }] }, { \"include\": \"#punctuation-comma\" }] }, \"var-single-const\": { \"patterns\": [{ \"name\": \"meta.var-single-variable.expr.ballerina\" }, { \"begin\": \"\\\\b(var)\\\\s*\", \"beginCaptures\": { \"0\": { \"name\": \"support.type.primitive.ballerina\" } }, \"end\": \"(?=\\\\S)\" }, { \"include\": \"#types\" }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ballerina variable.other.constant.ballerina\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\" }] }, \"var-single-variable\": { \"patterns\": [{ \"begin\": \"((string|int|boolean|float|byte|decimal|json|xml|anydata)|\\\\b(readonly|error|map)\\\\b|([_$[:alpha:]][_$[:alnum:]]*))(?=\\\\s+|\\\\;|\\\\>|\\\\|)\", \"beginCaptures\": { \"2\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"storage.type.ballerina\" }, \"4\": { \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\" } }, \"end\": \"(?=$|^|[;,=}])\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.statement.ballerina\" } }, \"name\": \"meta.var-single-variable.expr.ballerina\", \"patterns\": [{ \"include\": \"#call\" }, { \"include\": \"#self-literal\" }, { \"include\": \"#if-statement\" }, { \"include\": \"#string\" }, { \"include\": \"#numbers\" }, { \"include\": \"#keywords\" }] }, { \"begin\": \"([_$[:alpha:]][_$[:alnum:]]*)\\\\s+(\\\\!)?\", \"beginCaptures\": { \"1\": { \"name\": \"meta.definition.variable.ballerina variable.other.readwrite.ballerina\" }, \"2\": { \"name\": \"keyword.operator.definiteassignment.ballerina\" } }, \"end\": \"(?=$|^|[;,=}]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))\", \"name\": \"meta.var-single-variable.expr.ballerina\" }] }, \"variable-initializer\": { \"patterns\": [{ \"begin\": \"(?<!=|!)(=)(?!=|>)(?=\\\\s*\\\\S)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ballerina\" } }, \"end\": \"(?=$|[,);}\\\\]])\", \"patterns\": [{ \"match\": \"(\\\\')([_$[:alpha:]][_$[:alnum:]]*)\", \"name\": \"variable.other.property.ballerina\" }, { \"include\": \"#xml\" }, { \"include\": \"#function-defn\" }, { \"include\": \"#expression\" }, { \"include\": \"#punctuation-accessor\" }, { \"include\": \"#regex\" }] }, { \"begin\": \"(?<!=|!)(=)(?!=|>)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.assignment.ballerina\" } }, \"end\": \"(?=[,);}\\\\]]|((?<![_$[:alnum:]])(?:(?<=\\\\.\\\\.\\\\.)|(?<!\\\\.))\\\\s+))|(?=^\\\\s*$)|(?<=\\\\S)(?<!=)(?=\\\\s*$)\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"variableDef\": { \"patterns\": [{ \"begin\": \"(?:(?!\\\\+)[_$[:alpha:]][_$[:alnum:]]*)(?: |\\\\t)|(?=\\\\()\", \"beginCaptures\": { \"0\": { \"name\": \"storage.type.ballerina\" } }, \"end\": \"(?:[_$[:alpha:]][_$[:alnum:]]*)|(?=\\\\,)|(?=;)|\\\\.\\\\.\\\\.\", \"patterns\": [{ \"include\": \"#tupleType\" }, { \"include\": \"#constrainType\" }, { \"include\": \"#comment\" }] }] }, \"variableDefInline\": { \"patterns\": [{ \"begin\": \"(?=record)|(?=object)\", \"end\": \"(?=;)\", \"patterns\": [{ \"include\": \"#record\" }, { \"include\": \"#objectDec\" }] }] }, \"workerBody\": { \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#code\" }] }] }, \"workerDef\": { \"patterns\": [{ \"begin\": \"\\\\bworker\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.ballerina\" } }, \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#functionReturns\" }, { \"include\": \"#workerBody\" }] }] }, \"xml\": { \"patterns\": [{ \"begin\": \"(\\\\bxml)(\\\\s*)(`)\", \"beginCaptures\": { \"1\": { \"name\": \"support.type.primitive.ballerina\" }, \"3\": { \"name\": \"punctuation.definition.string.template.begin.ballerina\" } }, \"end\": \"`\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.template.end.ballerina\" } }, \"name\": \"string.template.ballerina\", \"patterns\": [{ \"include\": \"#xmlTag\" }, { \"include\": \"#xmlComment\" }, { \"include\": \"#templateVariable\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlComment\": { \"patterns\": [{ \"begin\": \"<!--\", \"beginCaptures\": { \"0\": { \"name\": \"comment.block.xml.ballerina\" } }, \"end\": \"-->\", \"endCaptures\": { \"0\": { \"name\": \"comment.block.xml.ballerina\" } }, \"name\": \"comment.block.xml.ballerina\" }] }, \"xmlDoubleQuotedString\": { \"patterns\": [{ \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlSingleQuotedString\": { \"patterns\": [{ \"begin\": \"\\\\'\", \"beginCaptures\": { \"0\": { \"name\": \"string.begin.ballerina\" } }, \"end\": \"\\\\'\", \"endCaptures\": { \"0\": { \"name\": \"string.end.ballerina\" } }, \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.ballerina\" }, { \"match\": \".\", \"name\": \"string\" }] }] }, \"xmlTag\": { \"patterns\": [{ \"begin\": \"(<\\\\/?\\\\??)\\\\s*([-_a-zA-Z0-9]+)\", \"beginCaptures\": { \"1\": { \"name\": \"punctuation.definition.tag.begin.xml.ballerina\" }, \"2\": { \"name\": \"entity.name.tag.xml.ballerina\" } }, \"end\": \"\\\\??\\\\/?>\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.tag.end.xml.ballerina\" } }, \"patterns\": [{ \"include\": \"#xmlSingleQuotedString\" }, { \"include\": \"#xmlDoubleQuotedString\" }, { \"match\": \"xmlns\", \"name\": \"keyword.other.ballerina\" }, { \"match\": \"([a-zA-Z0-9-]+)\", \"name\": \"entity.other.attribute-name.xml.ballerina\" }] }] } }, \"scopeName\": \"source.ballerina\" });\nvar ballerina = [\n  lang\n];\n\nexport { ballerina as default };\n"],"names":["ballerina","Object","freeze"],"sourceRoot":""}