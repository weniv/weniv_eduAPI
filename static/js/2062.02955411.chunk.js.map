{"version":3,"file":"static/js/2062.02955411.chunk.js","mappings":"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","sources":["../node_modules/shiki/dist/langs/nix.mjs"],"sourcesContent":["const lang = Object.freeze({ \"displayName\": \"Nix\", \"fileTypes\": [\"nix\"], \"name\": \"nix\", \"patterns\": [{ \"include\": \"#expression\" }], \"repository\": { \"attribute-bind\": { \"patterns\": [{ \"include\": \"#attribute-name\" }, { \"include\": \"#attribute-bind-from-equals\" }] }, \"attribute-bind-from-equals\": { \"begin\": \"\\\\=\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.bind.nix\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.bind.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"attribute-inherit\": { \"begin\": \"\\\\binherit\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.inherit.nix\" } }, \"end\": \"\\\\;\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.terminator.inherit.nix\" } }, \"patterns\": [{ \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.arguments.nix\" } }, \"end\": \"(?=\\\\;)\", \"patterns\": [{ \"begin\": \"\\\\)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.function.arguments.nix\" } }, \"end\": \"(?=\\\\;)\", \"patterns\": [{ \"include\": \"#bad-reserved\" }, { \"include\": \"#attribute-name-single\" }, { \"include\": \"#others\" }] }, { \"include\": \"#expression\" }] }, { \"begin\": \"(?=[a-zA-Z\\\\_])\", \"end\": \"(?=\\\\;)\", \"patterns\": [{ \"include\": \"#bad-reserved\" }, { \"include\": \"#attribute-name-single\" }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, \"attribute-name\": { \"patterns\": [{ \"match\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\", \"name\": \"entity.other.attribute-name.multipart.nix\" }, { \"match\": \"\\\\.\" }, { \"include\": \"#string-quoted\" }, { \"include\": \"#interpolation\" }] }, \"attribute-name-single\": { \"match\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\", \"name\": \"entity.other.attribute-name.single.nix\" }, \"attrset-contents\": { \"patterns\": [{ \"include\": \"#attribute-inherit\" }, { \"include\": \"#bad-reserved\" }, { \"include\": \"#attribute-bind\" }, { \"include\": \"#others\" }] }, \"attrset-definition\": { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"(\\\\{)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset.nix\" } }, \"end\": \"(\\\\})\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset.nix\" } }, \"patterns\": [{ \"include\": \"#attrset-contents\" }] }, { \"begin\": \"(?<=\\\\})\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }] }, \"attrset-definition-brace-opened\": { \"patterns\": [{ \"begin\": \"(?<=\\\\})\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"(?=.?)\", \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset.nix\" } }, \"patterns\": [{ \"include\": \"#attrset-contents\" }] }] }, \"attrset-for-sure\": { \"patterns\": [{ \"begin\": \"(?=\\\\brec\\\\b)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\brec\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=\\\\{)\", \"patterns\": [{ \"include\": \"#others\" }] }, { \"include\": \"#attrset-definition\" }, { \"include\": \"#others\" }] }, { \"begin\": \"(?=\\\\{\\\\s*(\\\\}|[^,?]*(=|;)))\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attrset-definition\" }, { \"include\": \"#others\" }] }] }, \"attrset-or-function\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.attrset-or-function.nix\" } }, \"end\": \"(?=([\\\\])};]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": `(?=(\\\\s*\\\\}|\\\\\"|\\\\binherit\\\\b|\\\\$\\\\{|\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*(\\\\s*\\\\.|\\\\s*=[^=])))`, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attrset-definition-brace-opened\" }] }, { \"begin\": \"(?=(\\\\.\\\\.\\\\.|\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\\\\s*[,?]))\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition-brace-opened\" }] }, { \"include\": \"#bad-reserved\" }, { \"begin\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.function.maybe.nix\" } }, \"end\": \"(?=([\\\\])};]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"(?=\\\\.)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attrset-definition-brace-opened\" }] }, { \"begin\": \"\\\\s*(\\\\,)\", \"beginCaptures\": { \"1\": { \"name\": \"keyword.operator.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition-brace-opened\" }] }, { \"begin\": \"(?=\\\\=)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#attribute-bind-from-equals\" }, { \"include\": \"#attrset-definition-brace-opened\" }] }, { \"begin\": \"(?=\\\\?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-parameter-default\" }, { \"begin\": \"\\\\,\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition-brace-opened\" }] }] }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, \"bad-reserved\": { \"match\": \"(?<![\\\\w'-])(if|then|else|assert|with|let|in|rec|inherit)(?![\\\\w'-])\", \"name\": \"invalid.illegal.reserved.nix\" }, \"comment\": { \"patterns\": [{ \"begin\": \"/\\\\*([^*]|\\\\*[^\\\\/])*\", \"end\": \"\\\\*\\\\/\", \"name\": \"comment.block.nix\", \"patterns\": [{ \"include\": \"#comment-remark\" }] }, { \"begin\": \"\\\\#\", \"end\": \"$\", \"name\": \"comment.line.number-sign.nix\", \"patterns\": [{ \"include\": \"#comment-remark\" }] }] }, \"comment-remark\": { \"captures\": { \"1\": { \"name\": \"markup.bold.comment.nix\" } }, \"match\": \"(TODO|FIXME|BUG|\\\\!\\\\!\\\\!):?\" }, \"constants\": { \"patterns\": [{ \"begin\": \"\\\\b(builtins|true|false|null)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"constant.language.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"\\\\b(scopedImport|import|isNull|abort|throw|baseNameOf|dirOf|removeAttrs|map|toString|derivationStrict|derivation)\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"support.function.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"\\\\b[0-9]+\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"constant.numeric.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }] }, \"expression\": { \"patterns\": [{ \"include\": \"#parens-and-cont\" }, { \"include\": \"#list-and-cont\" }, { \"include\": \"#string\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#with-assert\" }, { \"include\": \"#function-for-sure\" }, { \"include\": \"#attrset-for-sure\" }, { \"include\": \"#attrset-or-function\" }, { \"include\": \"#let\" }, { \"include\": \"#if\" }, { \"include\": \"#operator-unary\" }, { \"include\": \"#constants\" }, { \"include\": \"#bad-reserved\" }, { \"include\": \"#parameter-name-and-cont\" }, { \"include\": \"#others\" }] }, \"expression-cont\": { \"begin\": \"(?=.?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#list\" }, { \"include\": \"#string\" }, { \"include\": \"#interpolation\" }, { \"include\": \"#function-for-sure\" }, { \"include\": \"#attrset-for-sure\" }, { \"include\": \"#attrset-or-function\" }, { \"match\": \"(\\\\bor\\\\b|\\\\.|==|!=|!|\\\\<\\\\=|\\\\<|\\\\>\\\\=|\\\\>|&&|\\\\|\\\\||-\\\\>|//|\\\\?|\\\\+\\\\+|-|\\\\*|/(?=([^*]|$))|\\\\+)\", \"name\": \"keyword.operator.nix\" }, { \"include\": \"#constants\" }, { \"include\": \"#bad-reserved\" }, { \"include\": \"#parameter-name\" }, { \"include\": \"#others\" }] }, \"function-body\": { \"begin\": \"(@\\\\s*([a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*)\\\\s*)?(\\\\:)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"function-body-from-colon\": { \"begin\": \"(\\\\:)\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.function.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"function-contents\": { \"patterns\": [{ \"include\": \"#bad-reserved\" }, { \"include\": \"#function-parameter\" }, { \"include\": \"#others\" }] }, \"function-definition\": { \"begin\": \"(?=.?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-body-from-colon\" }, { \"begin\": \"(?=.?)\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"begin\": \"(\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*)\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.function.4.nix\" } }, \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"begin\": \"\\\\@\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#function-header-until-colon-no-arg\" }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#function-header-until-colon-with-arg\" }] }] }, { \"include\": \"#others\" }] }, \"function-definition-brace-opened\": { \"begin\": \"(?=.?)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-body-from-colon\" }, { \"begin\": \"(?=.?)\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#function-header-close-brace-with-arg\" }, { \"begin\": \"(?=.?)\", \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#function-contents\" }] }] }, { \"include\": \"#others\" }] }, \"function-for-sure\": { \"patterns\": [{ \"begin\": `(?=(\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\\\\s*[:@]|\\\\{[^}]*\\\\}\\\\s*:|\\\\{[^#}\"'/=]*[,\\\\?]))`, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#function-definition\" }] }] }, \"function-header-close-brace-no-arg\": { \"begin\": \"\\\\}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.function.nix\" } }, \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#others\" }] }, \"function-header-close-brace-with-arg\": { \"begin\": \"\\\\}\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.function.nix\" } }, \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#function-header-terminal-arg\" }, { \"include\": \"#others\" }] }, \"function-header-open-brace\": { \"begin\": \"\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.entity.function.2.nix\" } }, \"end\": \"(?=\\\\})\", \"patterns\": [{ \"include\": \"#function-contents\" }] }, \"function-header-terminal-arg\": { \"begin\": \"(?=@)\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"begin\": \"\\\\@\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"begin\": \"(\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*)\", \"end\": \"(?=\\\\:)\", \"name\": \"variable.parameter.function.3.nix\" }, { \"include\": \"#others\" }] }, { \"include\": \"#others\" }] }, \"function-header-until-colon-no-arg\": { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#function-header-open-brace\" }, { \"include\": \"#function-header-close-brace-no-arg\" }] }, \"function-header-until-colon-with-arg\": { \"begin\": \"(?=\\\\{)\", \"end\": \"(?=\\\\:)\", \"patterns\": [{ \"include\": \"#function-header-open-brace\" }, { \"include\": \"#function-header-close-brace-with-arg\" }] }, \"function-parameter\": { \"patterns\": [{ \"begin\": \"(\\\\.\\\\.\\\\.)\", \"end\": \"(,|(?=\\\\}))\", \"name\": \"keyword.operator.nix\", \"patterns\": [{ \"include\": \"#others\" }] }, { \"begin\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.function.1.nix\" } }, \"end\": \"(,|(?=\\\\}))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.operator.nix\" } }, \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#function-parameter-default\" }, { \"include\": \"#expression\" }] }, { \"include\": \"#others\" }] }, \"function-parameter-default\": { \"begin\": \"\\\\?\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.operator.nix\" } }, \"end\": \"(?=[,}])\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"if\": { \"begin\": \"(?=\\\\bif\\\\b)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\bif\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"\\\\bth(?=en\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=th)en\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"\\\\bel(?=se\\\\b)\", \"endCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, { \"begin\": \"(?<=el)se\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"endCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"illegal\": { \"match\": \".\", \"name\": \"invalid.illegal\" }, \"interpolation\": { \"begin\": \"\\\\$\\\\{\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.begin.nix\" } }, \"end\": \"\\\\}\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.section.embedded.end.nix\" } }, \"name\": \"meta.embedded\", \"patterns\": [{ \"include\": \"#expression\" }] }, \"let\": { \"begin\": \"(?=\\\\blet\\\\b)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\blet\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(in|else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"(?=\\\\{)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\{\", \"end\": \"\\\\}\", \"patterns\": [{ \"include\": \"#attrset-contents\" }] }, { \"begin\": \"(^|(?<=\\\\}))\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"include\": \"#others\" }] }, { \"include\": \"#attrset-contents\" }, { \"include\": \"#others\" }] }, { \"begin\": \"\\\\bin\\\\b\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression\" }] }] }, \"list\": { \"begin\": \"\\\\[\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.list.nix\" } }, \"end\": \"\\\\]\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.list.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"list-and-cont\": { \"begin\": \"(?=\\\\[)\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#list\" }, { \"include\": \"#expression-cont\" }] }, \"operator-unary\": { \"match\": \"(!|-)\", \"name\": \"keyword.operator.unary.nix\" }, \"others\": { \"patterns\": [{ \"include\": \"#whitespace\" }, { \"include\": \"#comment\" }, { \"include\": \"#illegal\" }] }, \"parameter-name\": { \"captures\": { \"0\": { \"name\": \"variable.parameter.name.nix\" } }, \"match\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\" }, \"parameter-name-and-cont\": { \"begin\": \"\\\\b[a-zA-Z\\\\_][a-zA-Z0-9\\\\_\\\\'\\\\-]*\", \"beginCaptures\": { \"0\": { \"name\": \"variable.parameter.name.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, \"parens\": { \"begin\": \"\\\\(\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.expression.nix\" } }, \"end\": \"\\\\)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.expression.nix\" } }, \"patterns\": [{ \"include\": \"#expression\" }] }, \"parens-and-cont\": { \"begin\": \"(?=\\\\()\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#parens\" }, { \"include\": \"#expression-cont\" }] }, \"string\": { \"patterns\": [{ \"begin\": \"(?=\\\\'\\\\')\", \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"begin\": \"\\\\'\\\\'\", \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.other.start.nix\" } }, \"end\": \"\\\\'\\\\'(?!\\\\$|\\\\'|\\\\\\\\.)\", \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.other.end.nix\" } }, \"name\": \"string.quoted.other.nix\", \"patterns\": [{ \"match\": \"\\\\'\\\\'(\\\\$|\\\\'|\\\\\\\\.)\", \"name\": \"constant.character.escape.nix\" }, { \"include\": \"#interpolation\" }] }, { \"include\": \"#expression-cont\" }] }, { \"begin\": '(?=\\\\\")', \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#string-quoted\" }, { \"include\": \"#expression-cont\" }] }, { \"begin\": \"(~?[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]*(\\\\/[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]+)+)\", \"beginCaptures\": { \"0\": { \"name\": \"string.unquoted.path.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"(\\\\<[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]+(\\\\/[a-zA-Z0-9\\\\.\\\\_\\\\-\\\\+]+)*\\\\>)\", \"beginCaptures\": { \"0\": { \"name\": \"string.unquoted.spath.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }, { \"begin\": \"([a-zA-Z][a-zA-Z0-9\\\\+\\\\-\\\\.]*\\\\:[a-zA-Z0-9\\\\%\\\\/\\\\?\\\\:\\\\@\\\\&\\\\=\\\\+\\\\$\\\\,\\\\-\\\\_\\\\.\\\\!\\\\~\\\\*\\\\']+)\", \"beginCaptures\": { \"0\": { \"name\": \"string.unquoted.url.nix\" } }, \"end\": \"(?=([\\\\])};,]|\\\\b(else|then)\\\\b))\", \"patterns\": [{ \"include\": \"#expression-cont\" }] }] }, \"string-quoted\": { \"begin\": '\\\\\"', \"beginCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.double.start.nix\" } }, \"end\": '\\\\\"', \"endCaptures\": { \"0\": { \"name\": \"punctuation.definition.string.double.end.nix\" } }, \"name\": \"string.quoted.double.nix\", \"patterns\": [{ \"match\": \"\\\\\\\\.\", \"name\": \"constant.character.escape.nix\" }, { \"include\": \"#interpolation\" }] }, \"whitespace\": { \"match\": \"\\\\s+\" }, \"with-assert\": { \"begin\": \"(?<![\\\\w'-])(with|assert)(?![\\\\w'-])\", \"beginCaptures\": { \"0\": { \"name\": \"keyword.other.nix\" } }, \"end\": \"\\\\;\", \"patterns\": [{ \"include\": \"#expression\" }] } }, \"scopeName\": \"source.nix\" });\nvar nix = [\n  lang\n];\n\nexport { nix as default };\n"],"names":["nix","Object","freeze"],"sourceRoot":""}